{"version":3,"sources":["webpack:///56a5aa66506e4d201ec5.worker.js","webpack:///webpack/bootstrap 56a5aa66506e4d201ec5","webpack:///./src/analyze.worker.js","webpack:///./~/compromise/builds/compromise.js","webpack:///./~/sentiment-analysis/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","update","user","words","emojis","numWords","messageLength","sentiment","totalMessages","Object","keys","forEach","emoji","push","messageLengths","averageNumberWordsInMessage","reduce","memo","num","length","averageMessageLength","sentiments","averageSentiment","getEmoji","word","wordData","_compromise2","match","out","analyze","message","colors","name","split","w","toLowerCase","_sentimentAnalysis2","users","userColor","userCount","_sentimentAnalysis","_compromise","onmessage","e","console","log","messages","JSON","parse","data","value","postMessage","type","stringify","require","global","f","define","t","n","r","s","o","u","a","i","Error","code","l","1","_dereq_","author","description","version","main","repository","url","scripts","test","browsertest","build","demo","watch","filesize","coverage","files","dependencies","devDependencies","babel-plugin-transform-es3-member-expression-literals","babel-plugin-transform-es3-property-literals","babel-preset-es2015","babel-preset-stage-2","babelify","babili","browserify","browserify-glob","chalk","codacy-coverage","derequire","efrt","eslint","gaze","http-server","nlp-corpus","nyc","shelljs","tap-min","tap-spec","tape","uglify-js","license","2","fns","compressed","erate","icial","ntial","teful","stant","hing","eful","ming","cial","ure","uent","rate","ific","rary","ntic","nant","nent","iant","ging","iate","rect","zing","ine","ute","ern","tful","ant","ing","ate","arr","uncompress_suffixes","../fns","3","4","months","days","durations","len","_i","relative","5","extendObj","o2","k","list","i2","uncompress_prefixes","6","notable_people","titles","currencies","numbers","ordinalMap","units","dates","abbreviations","irregular_plurals","superlatives","verbConverts","irregular_verbs","verbs","misc","./adjectives/superlatives","./adjectives/verbConverts","./dates/dates","./misc/misc","./nouns/abbreviations","./nouns/irregular_plurals","./people/notable","./people/titles","./values/currencies","./values/numbers","./values/ordinalMap","./values/units","./verbs/irregular_verbs","./verbs/verbs","7","adj","toAdjective","fastConjugate","lexicon","addObj","addArr","tag","filter","ordinal","ones","teens","tens","multiples","cardinal","prefixes","toPlural","toSingle","inf","conj","k2","v","toNoun","toAdverb","toSuperlative","toComparative","toVerb","female","male","../result/subset/adjectives/methods/index","../result/subset/verbs/methods/conjugate/faster","../result/subset/verbs/methods/toAdjective","./fns","./index","8","9","here","better","earlier","make sure","keep tabs","gonna","cannot","has","sounds","taken","msg","a few","years old","not","non","never","no","no doubt","not only","how's","compact","Organization","Adjective","Verb","Place","Conjunction","Time","Date","Condition","PastTense","Gerund","Copula","Determiner","Modal","Possessive","Pronoun","QuestionWord","Person","./determiners","10","Noun","Honorific","11","map","replace","h","12","13","14","shortForms","longForms","irregularPlurals","yen","baht","riel","penny","concat","15","zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety","hundred","thousand","grand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","zeroth","first","second","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","twentieth","thirtieth","fourtieth","fiftieth","sixtieth","seventieth","eightieth","ninetieth","hundredth","thousandth","millionth","billionth","trillionth","quadrillionth","quintillionth","sextillionth","septillionth","yotta","zetta","exa","peta","tera","giga","mega","kilo","hecto","deka","deci","centi","milli","micro","nano","pico","femto","atto","zepto","yocto","square","cubic","quartic","16","toOrdinal","toCardinal","./numbers","17","Temperature","°c","°f","°re","°n","°ra","Volume","m³","m3","dm³","dm3","cm³","cm3","dl","cl","ml","in³","in3","ft³","ft3","yd³","yd3","gal","bbl","pt","qt","tbl","tsp","tbsp","cup","fl oz","Distance","km","dm","cm","mm","mi","ft","yd","Weight","kg","hg","g","dg","cg","mg","µg","carat","grain","oz","lb","ton","Area","km²","km2","m²","m2","dm²","dm2","cm²","cm2","mm²","mm2","ha","mile²","mile2","in²","in2","yd²","yd2","ft²","sq ft","ft2","acre","Frequency","hz","Speed","km/h","kmph","mps","m/s","mph","mi/h","knot","Data","b","kb","mb","gb","tb","eb","zb","yb","Energy","j","pa","wb","lx","lm","year","week","day","min","ms","µs","nanosecond","picosecond","femtosecond","attosecond","shorter","longer","18","participles","irregular","take","PerfectTense","pluPerfectTense","FuturePerfect","can","PresentTense","FutureTense","Actor","free","arise","Participle","babysit","be","is","beat","begin","ban","bet","bite","bleed","breed","bring","broadcast","buy","choose","cost","deal","die","dig","draw","drink","drive","eat","fall","feed","feel","fight","find","fly","blow","forbid","forget","forgive","freeze","get","give","go","hang","have","hear","hide","hold","hurt","lay","lead","leave","lie","light","lose","make","mean","meet","pay","read","ring","rise","run","say","see","sell","shine","shoot","show","sing","sink","sit","slide","speak","spin","stand","steal","stick","sting","stream","strike","swear","swim","swing","teach","tear","tell","think","understand","wake","wear","win","withdraw","write","tie","ski","boil","miss","act","compete","being","imply","ice","develop","wait","aim","spill","drop","rub","smash","suit","literals","./participles","19","become","bend","brake","burn","burst","cling","come","creep","cut","dive","dream","flee","fling","got","grow","hit","keep","kneel","know","leap","lend","loose","prove","put","quit","ride","seek","send","set","sew","shake","shave","shut","seat","slay","sleep","sneak","speed","spend","spit","spring","stink","strew","sware","sweep","thrive","undergo","upset","weave","weep","wind","wring","20","serve","ress","lect","sist","tain","mble","ture","port","use","ive","are","nce","ain","ent","age","rge","ise","ect","ter","end","est","ock","nge","ase","ish","mit","der","ave","ire","tch","ack","ion","ump","ide","ush","ash","rry","ear","er","le","st","it","nt","ch","ss","ll","rn","ce","te","rt","ck","ct","ke","se","nd","ve","rm","or","ue","ow","ay","ze","ip","re","ng","ew","gh","ly","ge","en","ee","et","rd","am","ry","21","_typeof","Symbol","iterator","constructor","prototype","tagColors","reset","red","green","yellow","blue","magenta","cyan","black","ensureString","input","ensureObject","Array","endsWith","str","suffix","substr","startsWith","prefix","titleCase","charAt","toUpperCase","flatten","all","copy","extend","printTag","printTerm","tags","color","plaintext","leftPad","width","char","toString","./tags/colors","22","buildResult","pkg","nlp","tagSet","verbose","enable","self","window","amd","this","../package.json","./data/lexicon","./log","./result/build","23","_enable","undefined","path","tagAs","pos","reason","title","normal","silent_term","24","Text","tokenize","Terms","normalize","tagArr","normalizeLex","lex","extendTags","newTags","fromString","sentences","ts","refText","../tags","../term/methods/normalize/normalize","./paths","./tokenize","25","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","reference","parent","index","text","opts","_this","before","whitespace","after","subset","acronyms","adjectives","adverbs","clauses","contractions","hashTags","nouns","organizations","people","phoneNumbers","places","questions","quotations","statements","terms","topics","urls","values","ngrams","startGrams","endGrams","arg","sub","./methods/array","./methods/loops","./methods/match","./methods/normalize","./methods/out","./methods/sort","./methods/split","./methods/tag","./subset/acronyms","./subset/adjectives","./subset/adverbs","./subset/clauses","./subset/contractions","./subset/dates","./subset/hashTags","./subset/ngrams","./subset/ngrams/endGrams","./subset/ngrams/startGrams","./subset/nouns","./subset/organizations","./subset/people","./subset/phoneNumbers","./subset/places","./subset/quotations","./subset/sentences","./subset/sentences/questions","./subset/sentences/statements","./subset/terms","./subset/topics","./subset/urls","./subset/values","./subset/verbs","26","genericMethods","methods","clone","term","el","refTerms","firstTerm","lastTerm","slice","start","last","arguments","isA","../../terms","27","foreach","addMethods","myFn","args","apply","28","splitMethods","reg","matches","found","if","ifNo","and","29","defaultMethods","case","punctuation","unicode","toTitleCase","toNumber","_text","expand","fn","30","_topk","offset","punct","endPunctuation","join","root","offsets","grid","array","json","html","sentence","sen","debug","topk","normalized","frequency","freq","./offset","./topk","31","findOffset","sum","uid","allOffset","32","count","percent","parseFloat","toFixed","sort","splice","33","sorter","method","chron","lengthFn","wordCount","alpha","reverse","unique","./methods","34","sortEm","tmp","termIndex","chars","35","splitAfter","mts","splitBefore","splitOn","36","_tag","unTag","_this2","canBe","_this3","37","../data","../log","../terms","38","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","Acronyms","_Text","getPrototypeOf","parsed","periods","../../index","39","Adjectives","comparative","superlative","adverbForm","nounForm","verbForm","40","convertables","../../../../data","41","./toAdverb","./toComparative","./toNoun","./toSuperlative","./toVerb","42","adj_to_adv","irregulars","idle","public","vague","icy","single","simple","whole","special","straight","wrong","fast","hard","late","early","well","good","little","long","low","best","latter","bad","dont","foreign","modern","next","difficult","degenerate","young","awake","back","brown","orange","complex","cool","dirty","done","empty","fat","fertile","frozen","gold","grey","gray","medium","parallel","outdoor","unknown","undersized","used","welcome","white","fixed","mixed","super","guilty","tiny","able","unable","same","adult","transforms","repl","not_matches","43","sad","big","overweight","nearby","asleep","weekly","secret","certain","to_comparative","hasOwnProperty","_i2","./convertable","44","to_noun","clean","naivety","45","nice","inner","outer","far","worse","ready","generic_transformation","to_superlative","46","convertable","47","Adverbs","adjectiveForm","./toAdjective","48","idly","sporadically","basically","grammatically","alphabetically","economically","conically","politically","vertically","practically","theoretically","critically","fantastically","mystically","pornographically","fully","jolly","wholly","49","Clauses","50","combine","contract","expanded","ls","contracted","51","_contract","_expand","Contraction","_Terms","isContracted","../../paths","./contract","52","remain","53","findPossible","Contractions","./contraction","./findPossible","54","parseDate","month","date","./parseDate","55","weekdays","Dates","toShortForm","toLongForm","./date","./month","./weekday","56","longMonths","january","february","march","april","may","june","july","august","september","october","november","december","shortMonths","jan","feb","febr","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","57","Month","shorten","./data","58","parseTime","isDate","isYear","result","weekday","named","time","parseInt","_numbers","_num","_num2","./parseTime","59","isHour","isMinute","logic","hour","minute","timezone","60","longDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","shortDays","sun","mon","tues","wed","thurs","fri","sat","61","WeekDay","62","HashTags","63","Ngrams","getGrams","EndGrams","_Ngrams","size","edge","./getGrams","64","Gram","fts","gram","startGram","endGram","buildGrams","options","grams","inc","./gram","65","66","67","StartGrams","68","uncountables","utils","uncountable","hasPlural","Plural","noPlural","../../../tries","69","Nouns","isPlural","toSingular","./noun","70","rules","knownPlural","he","she","we","they","couldEvenBePlural","preposition","plural_indicators","singular_indicators","../../../data","./methods/data/indicators","71","heir","heirloom","honest","honour","honor","uber","an_acronyms","x","a_regexs","makeArticle","firstLetter","isAcronym","72","73","74","75","pluralRules","pluralize","better_first","./data/pluralRules","76","singleRules","./data/singleRules","77","_hasPlural","_isPlural","singularize","article","singular","plural","./hasPlural","./isPlural","./makeArticle","./methods/pluralize","./methods/singularize","78","Organizations","79","gender","firstName","80","People","pronoun","./person","81","_guessGender","_ret","middleName","honorifics","lastName","genderGuess","guessGender","./guessGender","82","PhoneNumbers","83","Places","./place","84","city","country","85","Quotations","86","Sentence","Sentences","toPastTense","toPresentTense","toFutureTense","toNegative","toPositive","isPassive","prepend","append","setPunctuation","./sentence","87","Questions","../index","88","_toNegative","_toPositive","insert","things","verb","mainVerb","parentTerms","isNegative","getPunctuation","../verbs/verb","./smartInsert","./toNegative","./toPositive","89","insertAt","needsTitleCase","newTerm","endTerm","killPunctuation","90","Statements","91","logicalNegate","everyone","everybody","someone","somebody","always","lg","replaceWith","vb","92","logical","nothing","93","Term","./term","94","tagList","boringTags","Auxillary","spaceBefore","spaceAfter","implicit","bestTag","parents","95","Things","yup","96","Urls","97","Value","Values","number","toTextValue","toNiceNumber","./value","98","numOrdinal","mapping","0","../toNumber","99","100","toText","ordinalWord","textOrdinal","../../../paths","../toText","101","niceNumber","x1","x2","rgx","102","../paths","103","findModifiers","mults","mult","amount","104","parseNumeric","isValid","parseDecimals","casualForms","a couple","a dozen","two dozen","section_sum","alreadyNumber","NumericValue","modifier","last_mult","improperFractionMatch","denom","w2","./findModifiers","./parseDecimals","./parseNumeric","./validate","105","106","107","108","breakdown_magnitudes","working","sequence","howmany","Math","floor","unit","breakdown_hundred","tens_mapping","ones_mapping","handle_decimal","names","decimal","decimals","to_text","abs","unit_name","109","paths","_toNiceNumber","isOrdinal","Ordinal","isText","TextValue","isNumber","NiceNumber","val","_str","_str2","numV","txtV","nicenumber","./numOrdinal","./textOrdinal","./toNiceNumber","./toNumber","./toText","110","Verbs","conjugation","conjugate","toInfinitive","asAdjective","./verb","111","predict","isContinuous","negs","isPerfect","getModal","modal","getTense","auxillary","tenses","tense","interpret","isNeg","negative","continuous","passive","perfect","./methods/predict","112","checkIrregulars","suffixPass","toActor","generic","toBe","Infinitive","form","irregObj","suffObj","../predict","../toInfinitive","./generic","./irregulars","./suffixes","./toActor","./toBe","113","pr","gr","ar","prt","114","want","fasterConjugate","115","../../../../../fns","116","multiWord","particle","./conjugate","117","infArr","forms","irObj","_obj","../../../../../data","118","./data/rules","119","sail","claim","aid","fail","appear","happen","seem","try","marry","120","ible_suffixes","collect","exhaust","convert","digest","discern","dismiss","access","collapse","express","defend","move","divide","perceive","121","Pluperfect","122","noun","getNoun","123","suffix_rules","goodTypes","predictForm","./suffix_rules","124","l2","125","126","verb_mapping","rule","to","./rules","127","128","copula","_index","past","_vb","_index2","pres","_vb2","_index3","gerund","_index4","_index5","./methods/toInfinitive","129","_conjugate","aux","parts","conjugations","./interpret","./methods/conjugate","./methods/isPlural","./methods/toAdjective","130","naiive_split","splits","sentence_parser","chunks","abbrev_reg","RegExp","acronym_reg","elipses_reg","../data/index","131","fixContraction","wanna","im","alot","dun","won't","wont","can't","cant","aint","ain't","shan't","imma","where'd","whered","when'd","whend","how'd","howd","what'd","whatd","let's","dunno","brb","gtg","irl","tbh","imo","til","irreg","fix","./fix","132","splitContraction","isPossessive","next_t","VerbPhrase","Adverb","hardOne","./split","133","easy_ends","d","n't","easyOnes","134","numberRange","NumberRange","../../term","135","will","would","easyTag","136","./01-irregulars","./02-hardOne","./03-easyOnes","./04-numberRange","137","allowed","TitleCase","138","verb_corrections","corrections","./verb_corrections","139","advb","140","contraction","lumper","lexicon_lump","lump_two","lump_three","step","punctuation_step","lexicon_step","capital_step","web_step","suffix_step","neighbour_step","noun_fallback","date_step","auxillary_step","negation_step","phrasal_step","comma_step","possessive_step","value_step","acronym_step","emoji_step","person_step","quotation_step","organization_step","plural_step","tagPhrase","tagger","./corrections","./lumper/lexicon_lump","./lumper/lump_three","./lumper/lump_two","./phrase","./steps/01-punctuation_step","./steps/02-lexicon_step","./steps/03-capital_step","./steps/04-web_step","./steps/05-suffix_step","./steps/06-neighbour_step","./steps/07-noun_fallback","./steps/08-date_step","./steps/09-auxillary_step","./steps/10-negation_step","./steps/12-phrasal_step","./steps/13-comma_step","./steps/14-possessive_step","./steps/15-value_step","./steps/16-acronym_step","./steps/17-emoji_step","./steps/18-person_step","./steps/19-quotation_step","./steps/20-organization_step","./steps/21-plural_step","141","makeText","context","142","tries","combineMany","tryStringFrom","uLexicon","lookupMulti","../../tries","./combine","143","do_three","condition","PhoneNumber","144","timezones","standard","daylight","summer","eastern","pacific","central","mountain","do_two","Holiday","Demonym","Currency","145","../data/lexicon","../tries","146","conditionPass","147","phraseTag","./00-conditionPass","148","isRomanNumeral","oneLetters","./rules/punct_rules","149","check_lexicon","custom","lookup","lexicon_pass","../contraction/split","150","capital_logic","_t","isWord","151","is_email","is_hashtag","is_atmention","is_url","web_pass","trim","152","./rules/word_rules","153","markov","afterThisWord","beforeThisWord","beforeThisPos","afterThisPos","termTags","nextTerm","./rules/neighbours","154","UpperCase","CamelCase","gotNothing","155","preps","thisNext","sections","datePass","156","do","don't","does","doesn't","haven't","had","hadn't","Negative","157","158","phrasals","particles","aback","along","apart","at","away","by","down","forth","forward","in","into","off","on","over","round","through","together","under","up","upon","way","phrasals_step","../../result/subset/verbs/methods/toInfinitive/index.js","159","isPlaceComma","Country","mainTag","tagAsList","List","isList","sinceComma","hasConjunction","Comma","commaStep","ClauseEnd","160","blacklist","it's","that's","is_possessive","nextWord","possessiveStep","161","Cardinal","162","163","emojiReg","emoticon","isCommaEmoji","isEmoticon","emojiStep","./rules/emoji_regex","./rules/emoticon_list","164","maybe","165","tagSlice","166","orgWords","maybeOrg","Acronym","167","pluralStep","Singular","../../result/subset/nouns/isPlural","168","169",":(",":)",":P",":p",":O",":3",":|",":/",":\\",":$",":*",":@",":-(",":-)",":-P",":-p",":-O",":-3",":-|",":-/",":-\\",":-$",":-*",":-@",":^(",":^)",":^P",":^p",":^O",":^3",":^|",":^/",":^\\",":^$",":^*",":^@","):","(:","$:","*:",")-:","(-:","$-:","*-:",")^:","(^:","$^:","*^:","<3","</3","<\\3","170","there","because","but","who","his","when","you","very","old","me","man","only","him","were","what","took","himself","went","jr","Superlative","PluperfectTense","171","172","Expression","LastName","173","174","conflicts","indexOf","175","tree","extra","Duration","all_children","children","kids","gc","grandkids","add_tags","alsoNot","./conflicts","./tree","176","FirstName","MaleName","FemaleName","City","Address","SportsTeam","Company","School","Unit","RelativeDay","Year","Particle","PhrasalVerb","Comparative","RomanNumeral","Fraction","Money","Preposition","Url","HashTag","Emoji","Email","Hyphenated","Quotation","177","build_whitespace","makeUID","./makeUID","./methods/case","./methods/isA","./methods/punctuation","./whitespace","178","nums","random","179","titleCases","180","181","addNormal","addRoot","./normalize","./root","182","killUnicode","./unicode","183","rootForm","184","!","?","I","q","y","z","185","renderHtml","silent","./renderHtml","186","escapeHtml","HTML_CHAR_MAP","<",">","&","\"","'"," ","sanitize","tagBody","tagOrComment","oldHtml","classes","187",",",":",";",".","...","hasComma","188","setTag","_unTag","tagset","./setTag","./unTag","189","dup","190","makeCompatible","tag_one","tagAll","191","unTagOne","unTagAll","killAlso","kill2","192","193","194","notWord","-","--","firstSplit","hasHyphen","hyphens","carry","../term","195","_refTerms","dirt","termArr","posTag","../tagger","./build","./match","./match/not","./methods/delete","./methods/insert","./methods/misc","./methods/replace","./methods/transform","196","syntax","startHere","matchMethods","matchObj","matchArr","matchString","regs","starting","skip","matchOne","../../result/index","./lib/startHere","./lib/syntax","197","perfectMatch","anyOne","oneOf","isMatch","198","almostMatch","reg_str","lumpMatch","reg_i","199","../../../fns","../../../log","200","greedyUntil","greedyOf","until","startAt","term_i","next_reg","optional","ending","minMax","astrix","foundAt","max","_foundAt","consecutive","_until","lumpUntil","./isMatch","./lumpMatch","201","parse_term","parse_all","202","addfns","notObj","current","notString","notArray","203","mutate","deleteMethods","delete","deleteThese","../mutate","204","addSpaceAt","insertMethods","ensureTerms","insertBefore","original_l","insertAfter","205","206","miscMethods","ref","toCamelCase","207","render","renderMethods","208","replaceMethods","str1","str2","toAdd","209","breakUpHere","lookFor","section","210","211","hyphenate","dehyphenate","212","getTerms","needle","source","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","unpack","NODE_SEP","STRING_SEP","TERMINAL_PREFIX","NOT_ALLOWED","BASE","config","seq","cache","toAlphaCode","range","String","fromCharCode","fromAlphaCode","pow","charCodeAt","commonPrefix","w1","./config","Ptrie","./ptrie","isPrefix","unravel","PackedTrie","nodes","syms","symCount","_cache","initSymbols","reSymbol","exec","crawl","node","indexFromRef","dnode","../config","./prefix","./unravel","unRavel","trie","newIndex","235","Demonyms","Professions","./_packed/_adjectives","./_packed/_adverbs","./_packed/_airports","./_packed/_cities","./_packed/_countries","./_packed/_demonyms","./_packed/_expressions","./_packed/_female","./_packed/_firstnames","./_packed/_holidays","./_packed/_lastnames","./_packed/_male","./_packed/_nouns","./_packed/_orgWords","./_packed/_organizations","./_packed/_phrasals","./_packed/_prepositions","./_packed/_professions","./_packed/_sportsTeams","./_packed/_uncountables","./efrt-unpack","afinnWordList","analyseSentence","doesWordExist","getScoreOfWord","getWordsInSentence","removeDuplicates","scaleScore","res","results","score","wordsArr"],"mappings":"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","file":"56a5aa66506e4d201ec5.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/honeybuns/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _sentimentAnalysis = __webpack_require__(2);\n\t\n\tvar _sentimentAnalysis2 = _interopRequireDefault(_sentimentAnalysis);\n\t\n\tvar _compromise = __webpack_require__(1);\n\t\n\tvar _compromise2 = _interopRequireDefault(_compromise);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar users = {};\n\tvar userCount = 0;\n\tvar totalMessages = 0;\n\t\n\tfunction update(user, words, emojis, numWords, messageLength, sentiment) {\n\t    user.totalMessages++;\n\t    // @TODO uncomment when figure out how to display meaningful word count\n\t    // Object.keys(words).forEach(word => {\n\t    //     if (user.words[word]) {\n\t    //         user.words[word] += words[word];\n\t    //     } else {\n\t    //         user.words[word] = words[word];\n\t    //     }\n\t    // });\n\t    Object.keys(emojis).forEach(function (emoji) {\n\t        if (user.emojis[emoji]) {\n\t            user.emojis[emoji] += words[emoji];\n\t        } else {\n\t            user.emojis[emoji] = words[emoji];\n\t        }\n\t    });\n\t    user.numWords.push(numWords);\n\t    user.messageLengths.push(messageLength);\n\t\n\t    user.averageNumberWordsInMessage = user.numWords.reduce(function (memo, num) {\n\t        return memo + num;\n\t    }, 0) / user.numWords.length;\n\t    user.averageMessageLength = user.messageLengths.reduce(function (memo, num) {\n\t        return memo + num;\n\t    }, 0) / user.messageLengths.length;\n\t\n\t    if (sentiment !== 0) {\n\t        user.sentiments.push(sentiment);\n\t        user.averageSentiment = user.sentiments.reduce(function (memo, num) {\n\t            return memo + num;\n\t        }, 0) * 1.0 / user.sentiments.length;\n\t    }\n\t\n\t    return user;\n\t}\n\t\n\tfunction getEmoji(word) {\n\t    var wordData = (0, _compromise2.default)(word);\n\t    if (wordData.match('#Emoji').out() !== \"\") {\n\t        return wordData.out();\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction analyze(message) {\n\t    var colors = ['rgba(255,0,0,0.3)', 'rgba(0,255,0,0.3)', 'rgba(0,0,255,0.3)', 'rgba(192,192,192,0.3)', 'rgba(255,255,0,0.3)', 'rgba(255,0,255,0.3)', 'rgba(100,140,250,0.3)', 'rgba(241,190,255,0.3)', 'rgba(0,0,70,0.3)', 'rgba(255,90,70,0.3)', 'rgba(12,90,12,0.3)'];\n\t    var words = {};\n\t    var emojis = {};\n\t\n\t    var m = message.message;\n\t    var name = message.name;\n\t\n\t    m.split(\" \").forEach(function (word) {\n\t        var emoji = getEmoji(word);\n\t        if (emoji) {\n\t            if (emojis[emoji]) {\n\t                emojis[emoji] += 1;\n\t            } else {\n\t                emojis[emoji] = 1;\n\t            }\n\t        }\n\t        var w = word.toLowerCase();\n\t        if (words[w]) {\n\t            words[w] += 1;\n\t        } else {\n\t            words[w] = 1;\n\t        }\n\t    });\n\t\n\t    totalMessages++;\n\t\n\t    var numWords = m.split(\" \").length;\n\t    var messageLength = m.length;\n\t    var sentiment = (0, _sentimentAnalysis2.default)(m);\n\t    var sentiments = sentiment ? [sentiment] : [];\n\t    if (!users[name]) {\n\t        users[name] = {\n\t            words: words,\n\t            emojis: emojis,\n\t            numWords: [numWords],\n\t            messageLengths: [messageLength],\n\t            sentiments: sentiments,\n\t            averageNumberWordsInMessage: numWords,\n\t            averageMessageLength: messageLength,\n\t            userColor: colors[userCount],\n\t            averageSentiment: sentiment,\n\t            totalMessages: 1\n\t        };\n\t        userCount += 1;\n\t        if (userCount > colors.length - 1) {\n\t            userCount = 0;\n\t        }\n\t    } else {\n\t        update(users[name], words, emojis, numWords, messageLength, sentiment);\n\t    }\n\t}\n\t\n\tonmessage = function onmessage(e) {\n\t    // eslint-disable-line no-undef\n\t    console.log(\"Analyzer Worker starting: \");\n\t\n\t    var messages = JSON.parse(e.data.value);\n\t\n\t    messages.forEach(function (message) {\n\t        analyze(message);\n\t    });\n\t    postMessage({ type: \"done\", value: {\n\t            users: JSON.stringify(users),\n\t            totalMessages: totalMessages\n\t        } });\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/* WEBPACK VAR INJECTION */(function(global) {(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.nlp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\tmodule.exports={\n\t  \"author\": \"Spencer Kelly <spencermountain@gmail.com> (http://spencermounta.in)\",\n\t  \"name\": \"compromise\",\n\t  \"description\": \"natural language processing in the browser\",\n\t  \"version\": \"8.0.2\",\n\t  \"main\": \"./builds/compromise.js\",\n\t  \"repository\": {\n\t    \"type\": \"git\",\n\t    \"url\": \"git://github.com/nlp-compromise/compromise.git\"\n\t  },\n\t  \"scripts\": {\n\t    \"test\": \"node ./scripts/test.js\",\n\t    \"browsertest\": \"node ./scripts/browserTest.js\",\n\t    \"build\": \"node ./scripts/build.js\",\n\t    \"demo\": \"node ./scripts/demo.js\",\n\t    \"watch\": \"node ./scripts/watch.js\",\n\t    \"filesize\": \"node ./scripts/filesize.js\",\n\t    \"coverage\": \"node ./scripts/coverage.js\"\n\t  },\n\t  \"files\": [\n\t    \"builds/\",\n\t    \"docs/\"\n\t  ],\n\t  \"dependencies\": {},\n\t  \"devDependencies\": {\n\t    \"babel-plugin-transform-es3-member-expression-literals\": \"^6.22.0\",\n\t    \"babel-plugin-transform-es3-property-literals\": \"^6.22.0\",\n\t    \"babel-preset-es2015\": \"6.9.0\",\n\t    \"babel-preset-stage-2\": \"^6.11.0\",\n\t    \"babelify\": \"7.3.0\",\n\t    \"babili\": \"0.0.11\",\n\t    \"browserify\": \"13.0.1\",\n\t    \"browserify-glob\": \"^0.2.0\",\n\t    \"chalk\": \"^1.1.3\",\n\t    \"codacy-coverage\": \"^2.0.0\",\n\t    \"derequire\": \"^2.0.3\",\n\t    \"efrt\": \"0.0.2\",\n\t    \"eslint\": \"^3.1.1\",\n\t    \"gaze\": \"^1.1.1\",\n\t    \"http-server\": \"0.9.0\",\n\t    \"nlp-corpus\": \"latest\",\n\t    \"nyc\": \"^8.4.0\",\n\t    \"shelljs\": \"^0.7.2\",\n\t    \"tap-min\": \"^1.1.0\",\n\t    \"tap-spec\": \"4.1.1\",\n\t    \"tape\": \"4.6.0\",\n\t    \"uglify-js\": \"2.7.0\"\n\t  },\n\t  \"license\": \"MIT\"\n\t}\n\t\n\t},{}],2:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('../fns');\n\t\n\tvar compressed = {\n\t  erate: 'degen,delib,desp,lit,mod',\n\t  icial: 'artif,benef,off,superf',\n\t  ntial: 'esse,influe,pote,substa',\n\t  teful: 'gra,ha,tas,was',\n\t  stant: 'con,di,in,resi',\n\t  hing: 'astonis,das,far-reac,refres,scat,screec,self-loat,soot',\n\t  eful: 'car,grac,peac,sham,us,veng',\n\t  ming: 'alar,cal,glea,unassu,unbeco,upco',\n\t  cial: 'commer,cru,finan,ra,so,spe',\n\t  ure: 'insec,miniat,obsc,premat,sec,s',\n\t  uent: 'congr,fl,freq,subseq',\n\t  rate: 'accu,elabo,i,sepa',\n\t  ific: 'horr,scient,spec,terr',\n\t  rary: 'arbit,contempo,cont,tempo',\n\t  ntic: 'authe,fra,giga,roma',\n\t  nant: 'domi,malig,preg,reso',\n\t  nent: 'emi,immi,perma,promi',\n\t  iant: 'brill,def,g,luxur',\n\t  ging: 'dama,encoura,han,lon',\n\t  iate: 'appropr,immed,inappropr,intermed',\n\t  rect: 'cor,e,incor,indi',\n\t  zing: 'agoni,ama,appeti,free',\n\t  ine: 'div,femin,genu,mascul,prist,rout',\n\t  ute: 'absol,ac,c,m,resol',\n\t  ern: 'east,north,south,st,west',\n\t  tful: 'deligh,doub,fre,righ,though,wis',\n\t  ant: 'abund,arrog,eleg,extravag,exult,hesit,irrelev,miscre,nonchal,obeis,observ,pl,pleas,redund,relev,reluct,signific,vac,verd',\n\t  ing: 'absorb,car,coo,liv,lov,ly,menac,perplex,shock,stand,surpris,tell,unappeal,unconvinc,unend,unsuspect,vex,want',\n\t  ate: 'adequ,delic,fortun,inadequ,inn,intim,legitim,priv,sed,ultim'\n\t};\n\tvar arr = ['absurd', 'aggressive', 'alert', 'alive', 'angry', 'attractive', 'awesome', 'beautiful', 'big', 'bitter', 'black', 'blue', 'bored', 'boring', 'brash', 'brave', 'brief', 'brown', 'calm', 'charming', 'cheap', 'check', 'clean', 'clear', 'close', 'cold', 'cool', 'cruel', 'curly', 'cute', 'dangerous', 'dear', 'dirty', 'drunk', 'dry', 'dull', 'eager', 'early', 'easy', 'efficient', 'empty', 'even', 'extreme', 'faint', 'fair', 'fanc', 'feeble', 'few', 'fierce', 'fine', 'firm', 'forgetful', 'formal', 'frail', 'free', 'full', 'funny', 'gentle', 'glad', 'glib', 'glad', 'grand', 'green', 'gruesome', 'handsome', 'happy', 'harsh', 'heavy', 'high', 'hollow', 'hot', 'hungry', 'impolite', 'important', 'innocent', 'intellegent', 'interesting', 'keen', 'kind', 'lame', 'large', 'late', 'lean', 'little', 'long', 'loud', 'low', 'lucky', 'lush', 'macho', 'mature', 'mean', 'meek', 'mellow', 'mundane', 'narrow', 'near', 'neat', 'new', 'nice', 'noisy', 'normal', 'odd', 'old', 'orange', 'pale', 'pink', 'plain', 'poor', 'proud', 'pure', 'purple', 'rapid', 'rare', 'raw', 'rich', 'rotten', 'round', 'rude', 'safe', 'scarce', 'scared', 'shallow', 'shrill', 'simple', 'slim', 'slow', 'small', 'smooth', 'solid', 'soon', 'sore', 'sour', 'square', 'stale', 'steep', 'strange', 'strict', 'strong', 'swift', 'tall', 'tame', 'tart', 'tender', 'tense', 'thin', 'thirsty', 'tired', 'true', 'vague', 'vast', 'vulgar', 'warm', 'weird', 'wet', 'wild', 'windy', 'wise', 'yellow', 'young'];\n\t\n\tmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\t// console.log(JSON.stringify(module.exports.sort(), null, 2));\n\t\n\t},{\"../fns\":5}],3:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//adjectives that become verbs with +'en' (short->shorten)\n\t\n\t//ones that also become superlative/comparative (short -> shortest)\n\tmodule.exports = ['bright', 'broad', 'coarse', 'damp', 'dark', 'dead', 'deaf', 'deep', 'fast', 'fat', 'flat', 'fresh', 'great', 'hard', 'light', 'loose', 'mad', 'moist', 'quick', 'quiet', 'red', 'ripe', 'rough', 'sad', 'sharp', 'short', 'sick', 'smart', 'soft', 'stiff', 'straight', 'sweet', 'thick', 'tight', 'tough', 'weak', 'white', 'wide'];\n\t\n\t},{}],4:[function(_dereq_,module,exports){\n\t'use strict';\n\t//terms that are 'Date' term\n\t\n\tvar months = ['january', 'february',\n\t// \"march\",  //ambig\n\t'april',\n\t// \"may\",   //ambig\n\t'june', 'july', 'august', 'september', 'october', 'november', 'december', 'jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec', 'sept', 'sep'];\n\t\n\tvar days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n\t//add plural eg.'mondays'\n\tfor (var i = 0; i <= 6; i++) {\n\t  days.push(days[i] + 's');\n\t}\n\t\n\tvar durations = ['millisecond',\n\t// 'second',\n\t'minute', 'hour', 'day', 'week', 'month', 'year', 'decade'];\n\t//add their plurals\n\tvar len = durations.length;\n\tfor (var _i = 0; _i < len; _i++) {\n\t  durations.push(durations[_i]);\n\t  durations.push(durations[_i] + 's');\n\t}\n\tdurations.push('century');\n\tdurations.push('centuries');\n\tdurations.push('seconds');\n\t\n\tvar relative = ['yesterday', 'today', 'tomorrow',\n\t// 'week',\n\t'weekend', 'tonight'];\n\t\n\tmodule.exports = {\n\t  days: days,\n\t  months: months,\n\t  durations: durations,\n\t  relative: relative\n\t};\n\t\n\t},{}],5:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//shallow-merge an object\n\t\n\texports.extendObj = function (o, o2) {\n\t  Object.keys(o2).forEach(function (k) {\n\t    o[k] = o2[k];\n\t  });\n\t  return o;\n\t};\n\t\n\t//uncompress data in the adhoc compressed form {'ly':'kind,quick'}\n\texports.uncompress_suffixes = function (list, obj) {\n\t  var keys = Object.keys(obj);\n\t  var l = keys.length;\n\t  for (var i = 0; i < l; i++) {\n\t    var arr = obj[keys[i]].split(',');\n\t    for (var i2 = 0; i2 < arr.length; i2++) {\n\t      list.push(arr[i2] + keys[i]);\n\t    }\n\t  }\n\t  return list;\n\t};\n\t\n\t//uncompress data in the adhoc compressed form {'over':'blown,kill'}\n\texports.uncompress_prefixes = function (list, obj) {\n\t  var keys = Object.keys(obj);\n\t  var l = keys.length;\n\t  for (var i = 0; i < l; i++) {\n\t    var arr = obj[keys[i]].split(',');\n\t    for (var i2 = 0; i2 < arr.length; i2++) {\n\t      list.push(keys[i] + arr[i2]);\n\t    }\n\t  }\n\t  return list;\n\t};\n\t\n\t},{}],6:[function(_dereq_,module,exports){\n\t'use strict';\n\t//the data is all variously compressed and sorted\n\t//this is just a helper file for the main file paths..\n\t\n\tmodule.exports = {\n\t  'notable_people': _dereq_('./people/notable'),\n\t  'titles': _dereq_('./people/titles'),\n\t\n\t  'currencies': _dereq_('./values/currencies'),\n\t  'numbers': _dereq_('./values/numbers'),\n\t  'ordinalMap': _dereq_('./values/ordinalMap'),\n\t  'units': _dereq_('./values/units'),\n\t  'dates': _dereq_('./dates/dates'),\n\t\n\t  'abbreviations': _dereq_('./nouns/abbreviations'),\n\t  'irregular_plurals': _dereq_('./nouns/irregular_plurals'),\n\t  // 'nouns': require('./nouns/nouns'),\n\t\n\t  'superlatives': _dereq_('./adjectives/superlatives'),\n\t  'verbConverts': _dereq_('./adjectives/verbConverts'),\n\t\n\t  'irregular_verbs': _dereq_('./verbs/irregular_verbs'),\n\t  'verbs': _dereq_('./verbs/verbs'),\n\t\n\t  'misc': _dereq_('./misc/misc')\n\t};\n\t\n\t},{\"./adjectives/superlatives\":2,\"./adjectives/verbConverts\":3,\"./dates/dates\":4,\"./misc/misc\":9,\"./nouns/abbreviations\":10,\"./nouns/irregular_plurals\":11,\"./people/notable\":12,\"./people/titles\":13,\"./values/currencies\":14,\"./values/numbers\":15,\"./values/ordinalMap\":16,\"./values/units\":17,\"./verbs/irregular_verbs\":18,\"./verbs/verbs\":20}],7:[function(_dereq_,module,exports){\n\t'use strict';\n\t//a lexicon is a giant object of known words and their assumed pos-tag.\n\t//the way we make it rn is a bit of a mess.\n\t\n\tvar data = _dereq_('./index');\n\tvar fns = _dereq_('./fns');\n\tvar adj = _dereq_('../result/subset/adjectives/methods/index');\n\tvar toAdjective = _dereq_('../result/subset/verbs/methods/toAdjective');\n\tvar fastConjugate = _dereq_('../result/subset/verbs/methods/conjugate/faster');\n\tvar lexicon = {};\n\t// console.time('lexicon');\n\t\n\tvar addObj = function addObj(o) {\n\t  fns.extendObj(lexicon, o);\n\t};\n\tvar addArr = function addArr(arr, tag) {\n\t  var l = arr.length;\n\t  for (var i = 0; i < l; i++) {\n\t    lexicon[arr[i]] = tag;\n\t  }\n\t};\n\t\n\t//let a rip\n\t// addArr(data.uncountables, 'Noun');\n\tvar units = data.units.words.filter(function (s) {\n\t  return s.length > 1;\n\t});\n\taddArr(units, 'Unit');\n\taddArr(data.dates.durations, 'Duration');\n\t\n\taddObj(data.abbreviations);\n\t//number-words are well-structured\n\tvar obj = data.numbers.ordinal;\n\taddArr(Object.keys(obj.ones), 'Ordinal');\n\taddArr(Object.keys(obj.teens), 'Ordinal');\n\taddArr(Object.keys(obj.tens), 'Ordinal');\n\taddArr(Object.keys(obj.multiples), 'Ordinal');\n\tobj = data.numbers.cardinal;\n\taddArr(Object.keys(obj.ones), 'Cardinal');\n\taddArr(Object.keys(obj.teens), 'Cardinal');\n\taddArr(Object.keys(obj.tens), 'Cardinal');\n\taddArr(Object.keys(obj.multiples), 'Cardinal');\n\taddArr(Object.keys(data.numbers.prefixes), 'Cardinal');\n\t//singular/plural\n\taddArr(Object.keys(data.irregular_plurals.toPlural), 'Singular');\n\taddArr(Object.keys(data.irregular_plurals.toSingle), 'Plural');\n\t\n\t//dates are well-structured\n\taddArr(data.dates.days, 'WeekDay');\n\taddArr(data.dates.months, 'Month');\n\taddArr(data.dates.relative, 'RelativeDay');\n\t// addArr(data.holidays, 'Holiday');\n\t\n\t// addArr(data.professions, 'Actor'); //?\n\t// addArr(data.demonyms, 'Demonym');\n\t// addArr(data.sportsTeams, 'SportsTeam');\n\t// addArr(data.bands, 'Organization');\n\t// addArr(data.orgWords, 'Noun');\n\t\n\t//irregular verbs\n\tObject.keys(data.irregular_verbs).forEach(function (inf) {\n\t  lexicon[inf] = 'Infinitive';\n\t  var conj = data.irregular_verbs[inf];\n\t  Object.keys(conj).forEach(function (k2) {\n\t    if (conj[k2]) {\n\t      lexicon[conj[k2]] = k2;\n\t    }\n\t  });\n\t  var o = fastConjugate(inf);\n\t  Object.keys(o).forEach(function (k) {\n\t    if (o[k] && !lexicon[o[k]]) {\n\t      lexicon[o[k]] = k;\n\t    }\n\t  });\n\t});\n\t\n\t//conjugate verblist\n\tdata.verbs.forEach(function (v) {\n\t  var o = fastConjugate(v);\n\t  Object.keys(o).forEach(function (k) {\n\t    if (o[k] && !lexicon[o[k]]) {\n\t      lexicon[o[k]] = k;\n\t    }\n\t  });\n\t  lexicon[toAdjective(v)] = 'Adjective';\n\t});\n\t\n\t//conjugate adjectives\n\tdata.superlatives.forEach(function (a) {\n\t  lexicon[adj.toNoun(a)] = 'Noun';\n\t  lexicon[adj.toAdverb(a)] = 'Adverb';\n\t  lexicon[adj.toSuperlative(a)] = 'Superlative';\n\t  lexicon[adj.toComparative(a)] = 'Comparative';\n\t});\n\t\n\t//even more expressive adjectives\n\tdata.verbConverts.forEach(function (a) {\n\t  lexicon[adj.toNoun(a)] = 'Noun';\n\t  lexicon[adj.toAdverb(a)] = 'Adverb';\n\t  lexicon[adj.toSuperlative(a)] = 'Superlative';\n\t  lexicon[adj.toComparative(a)] = 'Comparative';\n\t\n\t  var v = adj.toVerb(a);\n\t  lexicon[v] = 'Verb';\n\t  //now conjugate it\n\t  var o = fastConjugate(v);\n\t  Object.keys(o).forEach(function (k) {\n\t    if (o[k] && !lexicon[o[k]]) {\n\t      lexicon[o[k]] = k;\n\t    }\n\t  });\n\t});\n\t\n\t//inflect nouns\n\t// data.nouns.forEach((n) => {\n\t//   lexicon[n] = 'Singular';\n\t//   let plural = toPlural(n);\n\t//   lexicon[plural] = 'Plural';\n\t// });\n\t\n\t//let a rip.\n\t// addObj(data.firstnames);\n\taddArr(data.notable_people.female, 'FemaleName');\n\taddArr(data.notable_people.male, 'MaleName');\n\taddArr(data.titles, 'Singular');\n\t// addArr(data.lastnames, 'LastName');\n\t// addArr(data.places.airports, 'Place');\n\t// addArr(data.places.cities, 'City');\n\t// addArr(data.places.countries, 'Country');\n\t// addArr(data.organizations, 'Organization');\n\t// addArr(data.adjectives, 'Adjective');\n\taddArr(data.verbConverts, 'Adjective');\n\taddArr(data.superlatives, 'Adjective');\n\taddArr(data.currencies, 'Currency');\n\t//these ad-hoc manual ones have priority\n\taddObj(data.misc);\n\t\n\t//for safety (these are sneaky)\n\tdelete lexicon[''];\n\tdelete lexicon[' '];\n\tdelete lexicon[null];\n\tmodule.exports = lexicon;\n\t\n\t// console.log(lexicon['ugh']);\n\t// console.log(fastConjugate('make'));\n\t// let t = new Term('shake');\n\t// t.tag.Verb = true;\n\t// console.timeEnd('lexicon');\n\t// console.log(Object.keys(lexicon).length);\n\t\n\t},{\"../result/subset/adjectives/methods/index\":41,\"../result/subset/verbs/methods/conjugate/faster\":114,\"../result/subset/verbs/methods/toAdjective\":125,\"./fns\":5,\"./index\":6}],8:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = ['this', 'any', 'enough', 'each', 'whatever', 'every', 'these', 'another', 'plenty', 'whichever', 'neither', 'an', 'a', 'least', 'own', 'few', 'both', 'those', 'the', 'that', 'various', 'either', 'much', 'some', 'else',\n\t//some other languages (what could go wrong?)\n\t'la', 'le', 'les', 'des', 'de', 'du', 'el'];\n\t\n\t},{}],9:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar misc = {\n\t  'here': 'Noun',\n\t  'better': 'Comparative',\n\t  'earlier': 'Superlative',\n\t  'make sure': 'Verb',\n\t  'keep tabs': 'Verb',\n\t  'gonna': 'Verb',\n\t  'cannot': 'Verb',\n\t  'has': 'Verb',\n\t  'sounds': 'PresentTense',\n\t  //special case for took/taken\n\t  'taken': 'PastTense',\n\t  'msg': 'Verb', //slang\n\t  'a few': 'Value', //different than 'few people'\n\t  'years old': 'Unit', //special case\n\t  'not': 'Negative',\n\t  'non': 'Negative',\n\t  'never': 'Negative',\n\t  'no': 'Negative',\n\t  'no doubt': 'Noun',\n\t  'not only': 'Adverb',\n\t  'how\\'s': 'QuestionWord' //not conjunction\n\t};\n\t\n\tvar compact = {\n\t  Organization: ['20th century fox', '3m', '7-eleven', 'g8', 'motel 6', 'vh1'],\n\t  Adjective: ['so called', //?\n\t  'on board', 'vice versa', 'en route', 'upside down', 'up front', 'in front', 'in situ', 'in vitro', 'ad hoc', 'de facto', 'ad infinitum', 'for keeps', 'a priori', 'off guard', 'spot on', 'ipso facto', 'fed up', 'brand new', 'old fashioned', 'bona fide', 'well off', 'far off', 'straight forward', 'hard up', 'sui generis', 'en suite', 'avant garde', 'sans serif', 'gung ho', 'super duper', 'bourgeois'],\n\t\n\t  Verb: ['lengthen', 'heighten', 'worsen', 'lessen', 'awaken', 'frighten', 'threaten', 'hasten', 'strengthen', 'given',\n\t  //misc\n\t  'known', 'shown', 'seen', 'born'],\n\t\n\t  Place: ['new england', 'new hampshire', 'new jersey', 'new mexico', 'united states', 'united kingdom', 'great britain', 'great lakes', 'pacific ocean', 'atlantic ocean', 'indian ocean', 'arctic ocean', 'antarctic ocean', 'everglades'],\n\t  //conjunctions\n\t  'Conjunction': ['yet', 'therefore', 'or', 'while', 'nor', 'whether', 'though', 'tho', 'because', 'cuz', 'but', 'for', 'and', 'however', 'before', 'although', 'how', 'plus', 'versus', 'otherwise'],\n\t  Time: [\n\t  //date\n\t  'noon', 'midnight', 'now', 'morning', 'evening', 'afternoon', 'night', 'breakfast time', 'lunchtime', 'dinnertime', 'ago', 'sometime', 'eod', 'oclock'],\n\t  Date: [\n\t  //end of day, end of month\n\t  'eom', 'standard time', 'daylight time'],\n\t  'Condition': ['if', 'unless', 'notwithstanding'],\n\t\n\t  'PastTense': ['said', 'had', 'been', 'began', 'came', 'did', 'meant', 'went'],\n\t\n\t  'Gerund': ['going', 'being', 'according', 'resulting', 'developing', 'staining'],\n\t\n\t  'Copula': ['is', 'are', 'was', 'were', 'am'],\n\t\n\t  //determiners\n\t  'Determiner': _dereq_('./determiners'),\n\t\n\t  //modal verbs\n\t  'Modal': ['can', 'may', 'could', 'might', 'will', 'ought to', 'would', 'must', 'shall', 'should', 'ought', 'shant', 'lets'],\n\t\n\t  //Possessive pronouns\n\t  'Possessive': ['mine', 'something', 'none', 'anything', 'anyone', 'theirs', 'himself', 'ours', 'his', 'my', 'their', 'yours', 'your', 'our', 'its', 'herself', 'hers', 'themselves', 'myself', 'her'],\n\t\n\t  //personal pronouns (nouns)\n\t  'Pronoun': ['it', 'they', 'i', 'them', 'you', 'she', 'me', 'he', 'him', 'ourselves', 'us', 'we', 'thou', 'il', 'elle', 'yourself', '\\'em', 'he\\'s', 'she\\'s'],\n\t  //questions are awkward pos. are clarified in question_pass\n\t  'QuestionWord': ['where', 'why', 'when', 'who', 'whom', 'whose', 'what', 'which'],\n\t\n\t  //family-terms are people\n\t  Person: ['father', 'mother', 'mom', 'dad', 'mommy', 'daddy', 'sister', 'brother', 'aunt', 'uncle', 'grandfather', 'grandmother', 'cousin', 'stepfather', 'stepmother', 'boy', 'girl', 'man', 'woman', 'guy', 'dude', 'bro', 'gentleman', 'someone']\n\t};\n\t//unpack the compact terms into the misc lexicon..\n\tvar keys = Object.keys(compact);\n\tfor (var i = 0; i < keys.length; i++) {\n\t  var arr = compact[keys[i]];\n\t  for (var i2 = 0; i2 < arr.length; i2++) {\n\t    misc[arr[i2]] = keys[i];\n\t  }\n\t}\n\tmodule.exports = misc;\n\t\n\t},{\"./determiners\":8}],10:[function(_dereq_,module,exports){\n\t//these are common word shortenings used in the lexicon and sentence segmentation methods\n\t//there are all nouns,or at the least, belong beside one.\n\t'use strict';\n\t\n\t//common abbreviations\n\t\n\tvar compact = {\n\t  Noun: ['arc', 'al', 'exp', 'fy', 'pd', 'pl', 'plz', 'tce', 'bl', 'ma', 'ba', 'lit', 'ex', 'eg', 'ie', 'ca', 'cca', 'vs', 'etc', 'esp', 'ft',\n\t  //these are too ambiguous\n\t  'bc', 'ad', 'md', 'corp', 'col'],\n\t  Organization: ['dept', 'univ', 'assn', 'bros', 'inc', 'ltd', 'co',\n\t  //proper nouns with exclamation marks\n\t  'yahoo', 'joomla', 'jeopardy'],\n\t\n\t  Place: ['rd', 'st', 'dist', 'mt', 'ave', 'blvd', 'cl', 'ct', 'cres', 'hwy',\n\t  //states\n\t  'ariz', 'cal', 'calif', 'colo', 'conn', 'fla', 'fl', 'ga', 'ida', 'ia', 'kan', 'kans', 'minn', 'neb', 'nebr', 'okla', 'penna', 'penn', 'pa', 'dak', 'tenn', 'tex', 'ut', 'vt', 'va', 'wis', 'wisc', 'wy', 'wyo', 'usafa', 'alta', 'ont', 'que', 'sask'],\n\t\n\t  Date: ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'sept', 'oct', 'nov', 'dec', 'circa'],\n\t\n\t  //Honorifics\n\t  Honorific: ['adj', 'adm', 'adv', 'asst', 'atty', 'bldg', 'brig', 'capt', 'cmdr', 'comdr', 'cpl', 'det', 'dr', 'esq', 'gen', 'gov', 'hon', 'jr', 'llb', 'lt', 'maj', 'messrs', 'mister', 'mlle', 'mme', 'mr', 'mrs', 'ms', 'mstr', 'op', 'ord', 'phd', 'prof', 'pvt', 'rep', 'reps', 'res', 'rev', 'sen', 'sens', 'sfc', 'sgt', 'sir', 'sr', 'supt', 'surg'\n\t  //miss\n\t  //misses\n\t  ]\n\t\n\t};\n\t\n\t//unpack the compact terms into the misc lexicon..\n\tvar abbreviations = {};\n\tvar keys = Object.keys(compact);\n\tfor (var i = 0; i < keys.length; i++) {\n\t  var arr = compact[keys[i]];\n\t  for (var i2 = 0; i2 < arr.length; i2++) {\n\t    abbreviations[arr[i2]] = keys[i];\n\t  }\n\t}\n\tmodule.exports = abbreviations;\n\t\n\t},{}],11:[function(_dereq_,module,exports){\n\t//nouns with irregular plural/singular forms\n\t//used in noun.inflect, and also in the lexicon.\n\t//compressed with '_' to reduce some redundancy.\n\t'use strict';\n\t\n\tvar main = [['child', '_ren'], ['person', 'people'], ['leaf', 'leaves'], ['database', '_s'], ['quiz', '_zes'], ['stomach', '_s'], ['sex', '_es'], ['move', '_s'], ['shoe', '_s'], ['goose', 'geese'], ['phenomenon', 'phenomena'], ['barracks', '_'], ['deer', '_'], ['syllabus', 'syllabi'], ['index', 'indices'], ['appendix', 'appendices'], ['criterion', 'criteria'], ['man', 'men'], ['rodeo', '_s'], ['epoch', '_s'], ['zero', '_s'], ['avocado', '_s'], ['halo', '_s'], ['tornado', '_s'], ['tuxedo', '_s'], ['sombrero', '_s'], ['addendum', 'addenda'], ['alga', '_e'], ['alumna', '_e'], ['alumnus', 'alumni'], ['bacillus', 'bacilli'], ['cactus', 'cacti'], ['beau', '_x'], ['château', '_x'], ['chateau', '_x'], ['tableau', '_x'], ['corpus', 'corpora'], ['curriculum', 'curricula'], ['echo', '_es'], ['embargo', '_es'], ['foot', 'feet'], ['genus', 'genera'], ['hippopotamus', 'hippopotami'], ['larva', '_e'], ['libretto', 'libretti'], ['loaf', 'loaves'], ['matrix', 'matrices'], ['memorandum', 'memoranda'], ['mosquito', '_es'], ['opus', 'opera'], ['ovum', 'ova'], ['ox', '_en'], ['radius', 'radii'], ['referendum', 'referenda'], ['thief', 'thieves'], ['tooth', 'teeth']];\n\t//decompress it\n\tmain = main.map(function (a) {\n\t  a[1] = a[1].replace('_', a[0]);\n\t  return a;\n\t});\n\t//build-out two mappings\n\tvar toSingle = main.reduce(function (h, a) {\n\t  h[a[1]] = a[0];\n\t  return h;\n\t}, {});\n\tvar toPlural = main.reduce(function (h, a) {\n\t  h[a[0]] = a[1];\n\t  return h;\n\t}, {});\n\t\n\tmodule.exports = {\n\t  toSingle: toSingle,\n\t  toPlural: toPlural\n\t};\n\t\n\t},{}],12:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//notable people with names that aren't caught by the ordinary person-name rules\n\texports.male = ['messiaen', 'saddam hussain', 'virgin mary', 'van gogh', 'mitt romney', 'barack obama', 'kanye west', 'mubarek', 'lebron james', 'emeril lagasse', 'rush limbaugh', 'carson palmer', 'ray romano', 'ronaldinho', 'valentino rossi', 'rod stewart', 'kiefer sutherland', 'denzel washington', 'dick wolf', 'tiger woods', 'adolf hitler', 'hulk hogan', 'ashton kutcher', 'kobe bryant', 'cardinal wolsey', 'slobodan milosevic'];\n\t\n\texports.female = ['jk rowling', 'oprah winfrey', 'reese witherspoon', 'tyra banks', 'halle berry', 'paris hilton', 'scarlett johansson'];\n\t\n\t},{}],13:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//extend to person-names if infront of a name - 'Professor Frink'\n\tmodule.exports = ['lord', 'lady', 'king', 'queen', 'prince', 'princess', 'dutchess', 'president', 'excellency', 'professor', 'chancellor', 'father', 'pastor', 'brother', 'sister', 'doctor', 'captain', 'commander', 'general', 'lieutenant', 'reverend', 'rabbi', 'ayatullah', 'councillor', 'secretary', 'sultan', 'mayor', 'congressman', 'congresswoman'];\n\t\n\t},{}],14:[function(_dereq_,module,exports){\n\t'use strict';\n\t//some most-common iso-codes (most are too ambiguous)\n\t\n\tvar shortForms = ['usd', 'cad', 'aud', 'gbp', 'krw', 'inr', 'hkd', 'dkk', 'cny', 'xaf', 'xof', 'eur', 'jpy',\n\t//currency symbols\n\t'€', '$', '¥', '£', 'лв', '₡', 'kn', 'kr', '¢', 'Ft', 'Rp', '﷼', '₭', 'ден', '₨', 'zł', 'lei', 'руб', '฿'];\n\t\n\t//some common, unambiguous currency names\n\tvar longForms = ['denar', 'dobra', 'forint', 'kwanza', 'kyat', 'lempira', 'pound sterling', 'riel', 'yen', 'zloty',\n\t//colloquial currency names\n\t'dollar', 'cent', 'penny', 'dime', 'dinar', 'euro', 'lira', 'pound', 'pence', 'peso', 'baht', 'sterling', 'rouble', 'shekel', 'sheqel', 'yuan', 'franc', 'rupee', 'shilling', 'krona', 'dirham', 'bitcoin'];\n\tvar irregularPlurals = {\n\t  yen: 'yen',\n\t  baht: 'baht',\n\t  riel: 'riel',\n\t  penny: 'pennies'\n\t};\n\t\n\t//add plural forms - 'euros'\n\tvar l = longForms.length;\n\tfor (var i = 0; i < l; i++) {\n\t  if (irregularPlurals[longForms[i]]) {\n\t    longForms.push(irregularPlurals[longForms[i]]);\n\t  } else {\n\t    longForms.push(longForms[i] + 's');\n\t  }\n\t}\n\t\n\tmodule.exports = shortForms.concat(longForms);\n\t\n\t},{}],15:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar cardinal = {\n\t  ones: {\n\t    // 'a': 1,\n\t    'zero': 0,\n\t    'one': 1,\n\t    'two': 2,\n\t    'three': 3,\n\t    'four': 4,\n\t    'five': 5,\n\t    'six': 6,\n\t    'seven': 7,\n\t    'eight': 8,\n\t    'nine': 9\n\t  },\n\t  teens: {\n\t    'ten': 10,\n\t    'eleven': 11,\n\t    'twelve': 12,\n\t    'thirteen': 13,\n\t    'fourteen': 14,\n\t    'fifteen': 15,\n\t    'sixteen': 16,\n\t    'seventeen': 17,\n\t    'eighteen': 18,\n\t    'nineteen': 19\n\t  },\n\t  tens: {\n\t    'twenty': 20,\n\t    'thirty': 30,\n\t    'forty': 40,\n\t    'fifty': 50,\n\t    'sixty': 60,\n\t    'seventy': 70,\n\t    'eighty': 80,\n\t    'ninety': 90\n\t  },\n\t  multiples: {\n\t    'hundred': 1e2,\n\t    'thousand': 1e3,\n\t    'grand': 1e3,\n\t    'million': 1e6,\n\t    'billion': 1e9,\n\t    'trillion': 1e12,\n\t    'quadrillion': 1e15,\n\t    'quintillion': 1e18,\n\t    'sextillion': 1e21,\n\t    'septillion': 1e24\n\t  }\n\t};\n\t\n\tvar ordinal = {\n\t  ones: {\n\t    'zeroth': 0,\n\t    'first': 1,\n\t    'second': 2,\n\t    'third': 3,\n\t    'fourth': 4,\n\t    'fifth': 5,\n\t    'sixth': 6,\n\t    'seventh': 7,\n\t    'eighth': 8,\n\t    'ninth': 9\n\t  },\n\t  teens: {\n\t    'tenth': 10,\n\t    'eleventh': 11,\n\t    'twelfth': 12,\n\t    'thirteenth': 13,\n\t    'fourteenth': 14,\n\t    'fifteenth': 15,\n\t    'sixteenth': 16,\n\t    'seventeenth': 17,\n\t    'eighteenth': 18,\n\t    'nineteenth': 19\n\t  },\n\t  tens: {\n\t    'twentieth': 20,\n\t    'thirtieth': 30,\n\t    'fourtieth': 40,\n\t    'fiftieth': 50,\n\t    'sixtieth': 60,\n\t    'seventieth': 70,\n\t    'eightieth': 80,\n\t    'ninetieth': 90\n\t  },\n\t  multiples: {\n\t    'hundredth': 1e2,\n\t    'thousandth': 1e3,\n\t    'millionth': 1e6,\n\t    'billionth': 1e9,\n\t    'trillionth': 1e12,\n\t    'quadrillionth': 1e15,\n\t    'quintillionth': 1e18,\n\t    'sextillionth': 1e21,\n\t    'septillionth': 1e24\n\t  }\n\t};\n\t\n\t//used for the units\n\tvar prefixes = {\n\t  'yotta': 1,\n\t  'zetta': 1,\n\t  'exa': 1,\n\t  'peta': 1,\n\t  'tera': 1,\n\t  'giga': 1,\n\t  'mega': 1,\n\t  'kilo': 1,\n\t  'hecto': 1,\n\t  'deka': 1,\n\t  'deci': 1,\n\t  'centi': 1,\n\t  'milli': 1,\n\t  'micro': 1,\n\t  'nano': 1,\n\t  'pico': 1,\n\t  'femto': 1,\n\t  'atto': 1,\n\t  'zepto': 1,\n\t  'yocto': 1,\n\t\n\t  'square': 1,\n\t  'cubic': 1,\n\t  'quartic': 1\n\t};\n\t\n\tmodule.exports = {\n\t  cardinal: cardinal,\n\t  ordinal: ordinal,\n\t  prefixes: prefixes\n\t};\n\t\n\t},{}],16:[function(_dereq_,module,exports){\n\t'use strict';\n\t//create an easy mapping between ordinal-cardinal\n\t\n\tvar numbers = _dereq_('./numbers');\n\tvar toOrdinal = {};\n\tvar toCardinal = {};\n\tObject.keys(numbers.ordinal).forEach(function (k) {\n\t  var ordinal = Object.keys(numbers.ordinal[k]);\n\t  var cardinal = Object.keys(numbers.cardinal[k]);\n\t  for (var i = 0; i < ordinal.length; i++) {\n\t    toOrdinal[cardinal[i]] = ordinal[i];\n\t    toCardinal[ordinal[i]] = cardinal[i];\n\t  }\n\t});\n\tmodule.exports = {\n\t  toOrdinal: toOrdinal,\n\t  toCardinal: toCardinal\n\t};\n\t\n\t},{\"./numbers\":15}],17:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar units = {\n\t  'Temperature': {\n\t    '°c': 'Celsius',\n\t    '°f': 'Fahrenheit',\n\t    'k': 'Kelvin',\n\t    '°re': 'Reaumur',\n\t    '°n': 'Newton',\n\t    '°ra': 'Rankine'\n\t  },\n\t  'Volume': {\n\t    'm³': 'cubic meter',\n\t    'm3': 'cubic meter',\n\t    'dm³': 'cubic decimeter',\n\t    'dm3': 'cubic decimeter',\n\t    'cm³': 'cubic centimeter',\n\t    'cm3': 'cubic centimeter',\n\t    'l': 'liter',\n\t    'dl': 'deciliter',\n\t    'cl': 'centiliter',\n\t    'ml': 'milliliter',\n\t    'in³': 'cubic inch',\n\t    'in3': 'cubic inch',\n\t    'ft³': 'cubic foot',\n\t    'ft3': 'cubic foot',\n\t    'yd³': 'cubic yard',\n\t    'yd3': 'cubic yard',\n\t    'gal': 'gallon',\n\t    'bbl': 'petroleum barrel',\n\t    'pt': 'pint',\n\t    'qt': 'quart',\n\t    'tbl': 'tablespoon',\n\t    'tsp': 'teaspoon',\n\t    'tbsp': 'tablespoon',\n\t    'cup': 'cup',\n\t    'fl oz': 'fluid ounce'\n\t  },\n\t  'Distance': {\n\t    'km': 'kilometer',\n\t    'm': 'meter',\n\t    'dm': 'decimeter',\n\t    'cm': 'centimeter',\n\t    'mm': 'millimeter',\n\t    'mi': 'mile',\n\t    // 'in': 'inch',\n\t    'ft': 'foot',\n\t    'yd': 'yard'\n\t  },\n\t  'Weight': {\n\t    't': 'tonne',\n\t    'kg': 'kilogram',\n\t    'hg': 'hectogram',\n\t    'g': 'gram',\n\t    'dg': 'decigram',\n\t    'cg': 'centigram',\n\t    'mg': 'milligram',\n\t    'µg': 'microgram',\n\t    'carat': 'carat',\n\t    'grain': 'grain',\n\t    'oz': 'ounce',\n\t    'lb': 'pound',\n\t    'ton': 'tonne'\n\t  },\n\t  'Area': {\n\t    'km²': 'square kilometer',\n\t    'km2': 'square kilometer',\n\t    'm²': 'square meter',\n\t    'm2': 'square meter',\n\t    'dm²': 'square decimeter',\n\t    'dm2': 'square decimeter',\n\t    'cm²': 'square centimeter',\n\t    'cm2': 'square centimeter',\n\t    'mm²': 'square millimeter',\n\t    'mm2': 'square millimeter',\n\t    'ha': 'hectare',\n\t    'mile²': 'square mile',\n\t    'mile2': 'square mile',\n\t    'in²': 'square inch',\n\t    'in2': 'square inch',\n\t    'yd²': 'square yard',\n\t    'yd2': 'square yard',\n\t    'ft²': 'square foot',\n\t    'sq ft': 'square feet',\n\t    'ft2': 'square foot',\n\t    'acre': 'acre'\n\t  },\n\t  'Frequency': {\n\t    'hz': 'hertz'\n\t  },\n\t  'Speed': {\n\t    'km/h': 'kilometer per hour',\n\t    'kmph': 'kilometer per hour',\n\t    'mps': 'meter per second',\n\t    'm/s': 'meter per second',\n\t    'mph': 'mile per hour',\n\t    'mi/h': 'mile per hour',\n\t    'knot': 'knot'\n\t  },\n\t  'Data': {\n\t    'b': 'byte',\n\t    'kb': 'kilobyte',\n\t    'mb': 'megabyte',\n\t    'gb': 'gigabyte',\n\t    'tb': 'terabyte',\n\t    'pt': 'petabyte',\n\t    'eb': 'exabyte',\n\t    'zb': 'zettabyte',\n\t    'yb': 'yottabyte'\n\t  },\n\t  'Energy': {\n\t    'j': 'joule',\n\t    'pa': 'pascal',\n\t    'w': 'watt',\n\t    'n': 'newton',\n\t    'wb': 'weber',\n\t    'h': 'henry',\n\t    'c': 'coulomb',\n\t    'v': 'volt',\n\t    'f': 'farad',\n\t    's': 'siemens',\n\t    'o': 'ohm',\n\t    'lx': 'lux',\n\t    'lm': 'lumen'\n\t  },\n\t  'Time': {\n\t    'year': 'year',\n\t    'week': 'week',\n\t    'day': 'day',\n\t    'h': 'hour',\n\t    'min': 'minute',\n\t    's': 'second',\n\t    'ms': 'millisecond',\n\t    'µs': 'microsecond',\n\t    'nanosecond': 'nanosecond',\n\t    'picosecond': 'picosecond',\n\t    'femtosecond': 'femtosecond',\n\t    'attosecond': 'attosecond'\n\t  }\n\t};\n\t\n\t//prepare a list of them, for the lexicon\n\tvar words = {};\n\tObject.keys(units).forEach(function (k) {\n\t  Object.keys(units[k]).forEach(function (shorter) {\n\t    if (shorter.length > 1) {\n\t      words[shorter] = true;\n\t    }\n\t    var longer = units[k][shorter];\n\t    words[longer] = true;\n\t    words[longer + 's'] = true;\n\t  });\n\t});\n\twords = Object.keys(words);\n\t\n\tmodule.exports = {\n\t  words: words,\n\t  units: units\n\t};\n\t\n\t},{}],18:[function(_dereq_,module,exports){\n\t//a list of exceptions to the verb rules\n\t'use strict';\n\t\n\tvar participles = _dereq_('./participles');\n\t\n\tvar irregular = {\n\t  take: {\n\t    PerfectTense: 'have taken',\n\t    pluPerfectTense: 'had taken',\n\t    FuturePerfect: 'will have taken'\n\t  },\n\t  can: {\n\t    Gerund: '',\n\t    PresentTense: 'can',\n\t    PastTense: 'could',\n\t    FutureTense: 'can',\n\t    PerfectTense: 'could',\n\t    pluPerfectTense: 'could',\n\t    FuturePerfect: 'can',\n\t    Actor: ''\n\t  },\n\t  free: {\n\t    Gerund: 'freeing',\n\t    Actor: ''\n\t  },\n\t  arise: {\n\t    PastTense: 'arose',\n\t    Participle: 'arisen'\n\t  },\n\t  babysit: {\n\t    PastTense: 'babysat',\n\t    Actor: 'babysitter'\n\t  },\n\t  be: { // this is crazy-hard and shouldn't be here\n\t    PastTense: 'was',\n\t    Participle: 'been',\n\t    PresentTense: 'is',\n\t    // FutureTense: 'will be',\n\t    Actor: '',\n\t    Gerund: 'am'\n\t  },\n\t  // will: {\n\t  //   PastTense: 'will',\n\t  // },\n\t  is: {\n\t    PastTense: 'was',\n\t    PresentTense: 'is',\n\t    // FutureTense: 'will be',\n\t    // PerfectTense: 'have been',\n\t    // pluPerfectTense: 'had been',\n\t    // FuturePerfect: 'will have been',\n\t    Actor: '',\n\t    Gerund: 'being'\n\t  },\n\t  beat: {\n\t    Gerund: 'beating',\n\t    Actor: 'beater',\n\t    Participle: 'beaten'\n\t  },\n\t  begin: {\n\t    Gerund: 'beginning',\n\t    PastTense: 'began'\n\t  },\n\t  ban: {\n\t    PastTense: 'banned',\n\t    Gerund: 'banning',\n\t    Actor: ''\n\t  },\n\t  bet: {\n\t    Actor: 'better'\n\t  },\n\t  bite: {\n\t    Gerund: 'biting',\n\t    PastTense: 'bit'\n\t  },\n\t  bleed: {\n\t    PastTense: 'bled'\n\t  },\n\t  breed: {\n\t    PastTense: 'bred'\n\t  },\n\t  bring: {\n\t    PastTense: 'brought'\n\t  },\n\t  broadcast: {\n\t    PastTense: 'broadcast'\n\t  },\n\t  build: {\n\t    PastTense: 'built'\n\t  },\n\t  buy: {\n\t    PastTense: 'bought'\n\t  },\n\t  choose: {\n\t    Gerund: 'choosing',\n\t    PastTense: 'chose'\n\t  },\n\t  cost: {\n\t    PastTense: 'cost'\n\t  },\n\t  deal: {\n\t    PastTense: 'dealt'\n\t  },\n\t  die: {\n\t    PastTense: 'died',\n\t    Gerund: 'dying'\n\t  },\n\t  dig: {\n\t    Gerund: 'digging',\n\t    PastTense: 'dug'\n\t  },\n\t  draw: {\n\t    PastTense: 'drew'\n\t  },\n\t  drink: {\n\t    PastTense: 'drank',\n\t    Participle: 'drunk'\n\t  },\n\t  drive: {\n\t    Gerund: 'driving',\n\t    PastTense: 'drove'\n\t  },\n\t  eat: {\n\t    Gerund: 'eating',\n\t    PastTense: 'ate',\n\t    Actor: 'eater',\n\t    Participle: 'eaten'\n\t  },\n\t  fall: {\n\t    PastTense: 'fell'\n\t  },\n\t  feed: {\n\t    PastTense: 'fed'\n\t  },\n\t  feel: {\n\t    PastTense: 'felt',\n\t    Actor: 'feeler'\n\t  },\n\t  fight: {\n\t    PastTense: 'fought'\n\t  },\n\t  find: {\n\t    PastTense: 'found'\n\t  },\n\t  fly: {\n\t    PastTense: 'flew',\n\t    Participle: 'flown'\n\t  },\n\t  blow: {\n\t    PastTense: 'blew',\n\t    Participle: 'blown'\n\t  },\n\t  forbid: {\n\t    PastTense: 'forbade'\n\t  },\n\t  forget: {\n\t    Gerund: 'forgeting',\n\t    PastTense: 'forgot'\n\t  },\n\t  forgive: {\n\t    Gerund: 'forgiving',\n\t    PastTense: 'forgave'\n\t  },\n\t  freeze: {\n\t    Gerund: 'freezing',\n\t    PastTense: 'froze'\n\t  },\n\t  get: {\n\t    PastTense: 'got'\n\t  },\n\t  give: {\n\t    Gerund: 'giving',\n\t    PastTense: 'gave'\n\t  },\n\t  go: {\n\t    PastTense: 'went',\n\t    PresentTense: 'goes'\n\t  },\n\t  hang: {\n\t    PastTense: 'hung'\n\t  },\n\t  have: {\n\t    Gerund: 'having',\n\t    PastTense: 'had',\n\t    PresentTense: 'has'\n\t  },\n\t  hear: {\n\t    PastTense: 'heard'\n\t  },\n\t  hide: {\n\t    PastTense: 'hid'\n\t  },\n\t  hold: {\n\t    PastTense: 'held'\n\t  },\n\t  hurt: {\n\t    PastTense: 'hurt'\n\t  },\n\t  lay: {\n\t    PastTense: 'laid'\n\t  },\n\t  lead: {\n\t    PastTense: 'led'\n\t  },\n\t  leave: {\n\t    PastTense: 'left'\n\t  },\n\t  lie: {\n\t    Gerund: 'lying',\n\t    PastTense: 'lay'\n\t  },\n\t  light: {\n\t    PastTense: 'lit'\n\t  },\n\t  lose: {\n\t    Gerund: 'losing',\n\t    PastTense: 'lost'\n\t  },\n\t  make: {\n\t    PastTense: 'made'\n\t  },\n\t  mean: {\n\t    PastTense: 'meant'\n\t  },\n\t  meet: {\n\t    Gerund: 'meeting',\n\t    PastTense: 'met',\n\t    Actor: 'meeter'\n\t  },\n\t  pay: {\n\t    PastTense: 'paid'\n\t  },\n\t  read: {\n\t    PastTense: 'read'\n\t  },\n\t  ring: {\n\t    PastTense: 'rang'\n\t  },\n\t  rise: {\n\t    PastTense: 'rose',\n\t    Gerund: 'rising',\n\t    pluPerfectTense: 'had risen',\n\t    FuturePerfect: 'will have risen'\n\t  },\n\t  run: {\n\t    Gerund: 'running',\n\t    PastTense: 'ran'\n\t  },\n\t  say: {\n\t    PastTense: 'said'\n\t  },\n\t  see: {\n\t    PastTense: 'saw'\n\t  },\n\t  sell: {\n\t    PastTense: 'sold'\n\t  },\n\t  shine: {\n\t    PastTense: 'shone'\n\t  },\n\t  shoot: {\n\t    PastTense: 'shot'\n\t  },\n\t  show: {\n\t    PastTense: 'showed'\n\t  },\n\t  sing: {\n\t    PastTense: 'sang',\n\t    Participle: 'sung'\n\t  },\n\t  sink: {\n\t    PastTense: 'sank',\n\t    pluPerfectTense: 'had sunk'\n\t  },\n\t  sit: {\n\t    PastTense: 'sat'\n\t  },\n\t  slide: {\n\t    PastTense: 'slid'\n\t  },\n\t  speak: {\n\t    PastTense: 'spoke',\n\t    PerfectTense: 'have spoken',\n\t    pluPerfectTense: 'had spoken',\n\t    FuturePerfect: 'will have spoken'\n\t  },\n\t  spin: {\n\t    Gerund: 'spinning',\n\t    PastTense: 'spun'\n\t  },\n\t  stand: {\n\t    PastTense: 'stood'\n\t  },\n\t  steal: {\n\t    PastTense: 'stole',\n\t    Actor: 'stealer'\n\t  },\n\t  stick: {\n\t    PastTense: 'stuck'\n\t  },\n\t  sting: {\n\t    PastTense: 'stung'\n\t  },\n\t  stream: {\n\t    Actor: 'streamer'\n\t  },\n\t  strike: {\n\t    Gerund: 'striking',\n\t    PastTense: 'struck'\n\t  },\n\t  swear: {\n\t    PastTense: 'swore'\n\t  },\n\t  swim: {\n\t    PastTense: 'swam'\n\t  },\n\t  swing: {\n\t    PastTense: 'swung'\n\t  },\n\t  teach: {\n\t    PastTense: 'taught',\n\t    PresentTense: 'teaches'\n\t  },\n\t  tear: {\n\t    PastTense: 'tore'\n\t  },\n\t  tell: {\n\t    PastTense: 'told'\n\t  },\n\t  think: {\n\t    PastTense: 'thought'\n\t  },\n\t  understand: {\n\t    PastTense: 'understood'\n\t  },\n\t  wake: {\n\t    PastTense: 'woke'\n\t  },\n\t  wear: {\n\t    PastTense: 'wore'\n\t  },\n\t  win: {\n\t    Gerund: 'winning',\n\t    PastTense: 'won'\n\t  },\n\t  withdraw: {\n\t    PastTense: 'withdrew'\n\t  },\n\t  write: {\n\t    Gerund: 'writing',\n\t    PastTense: 'wrote',\n\t    Participle: 'written'\n\t  },\n\t  tie: {\n\t    Gerund: 'tying',\n\t    PastTense: 'tied'\n\t  },\n\t  ski: {\n\t    PastTense: 'skiied'\n\t  },\n\t  boil: {\n\t    Actor: 'boiler'\n\t  },\n\t  miss: {\n\t    PresentTense: 'miss'\n\t  },\n\t  act: {\n\t    Actor: 'actor'\n\t  },\n\t  compete: {\n\t    Gerund: 'competing',\n\t    PastTense: 'competed',\n\t    Actor: 'competitor'\n\t  },\n\t  being: {\n\t    Gerund: 'are',\n\t    PastTense: 'were',\n\t    PresentTense: 'are'\n\t  },\n\t  imply: {\n\t    PastTense: 'implied',\n\t    PresentTense: 'implies'\n\t  },\n\t  ice: {\n\t    Gerund: 'icing',\n\t    PastTense: 'iced'\n\t  },\n\t  develop: {\n\t    PastTense: 'developed',\n\t    Actor: 'developer',\n\t    Gerund: 'developing'\n\t  },\n\t  wait: {\n\t    Gerund: 'waiting',\n\t    PastTense: 'waited',\n\t    Actor: 'waiter'\n\t  },\n\t  aim: {\n\t    Actor: 'aimer'\n\t  },\n\t  spill: {\n\t    PastTense: 'spilt'\n\t  },\n\t  drop: {\n\t    Gerund: 'dropping',\n\t    PastTense: 'dropped'\n\t  },\n\t  log: {\n\t    Gerund: 'logging',\n\t    PastTense: 'logged'\n\t  },\n\t  rub: {\n\t    Gerund: 'rubbing',\n\t    PastTense: 'rubbed'\n\t  },\n\t  smash: {\n\t    PresentTense: 'smashes'\n\t  },\n\t  suit: {\n\t    Gerund: 'suiting',\n\t    PastTense: 'suited',\n\t    Actor: 'suiter'\n\t  }\n\t};\n\t//fancy es3 literal support (ftw?)\n\tvar literals = [['break', {\n\t  PastTense: 'broke'\n\t}], ['catch', {\n\t  PastTense: 'caught'\n\t}], ['do', {\n\t  PastTense: 'did',\n\t  PresentTense: 'does'\n\t}], ['bind', {\n\t  PastTense: 'bound'\n\t}], ['spread', {\n\t  PastTense: 'spread'\n\t}]];\n\tliterals.forEach(function (a) {\n\t  irregular[a[0]] = a[1];\n\t});\n\t\n\tObject.keys(participles).forEach(function (inf) {\n\t  if (irregular[inf]) {\n\t    irregular[inf].Participle = participles[inf];\n\t  } else {\n\t    irregular[inf] = {\n\t      Participle: participles[inf]\n\t    };\n\t  }\n\t});\n\tmodule.exports = irregular;\n\t\n\t},{\"./participles\":19}],19:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//particples are a bit like past-tense, but used differently\n\t//map the infinitive to its irregular-participle\n\tmodule.exports = {\n\t  'become': 'become',\n\t  'begin': 'begun',\n\t  'bend': 'bent',\n\t  'bet': 'bet',\n\t  'bite': 'bitten',\n\t  'bleed': 'bled',\n\t  'brake': 'broken',\n\t  'bring': 'brought',\n\t  'build': 'built',\n\t  'burn': 'burned',\n\t  'burst': 'burst',\n\t  'buy': 'bought',\n\t  // 'catch': 'caught',\n\t  'choose': 'chosen',\n\t  'cling': 'clung',\n\t  'come': 'come',\n\t  'creep': 'crept',\n\t  'cut': 'cut',\n\t  'deal': 'dealt',\n\t  'dig': 'dug',\n\t  'dive': 'dived',\n\t  // 'do': 'done',\n\t  'draw': 'drawn',\n\t  'dream': 'dreamt',\n\t  'drive': 'driven',\n\t  'eat': 'eaten',\n\t  'fall': 'fallen',\n\t  'feed': 'fed',\n\t  'fight': 'fought',\n\t  'flee': 'fled',\n\t  'fling': 'flung',\n\t  'forget': 'forgotten',\n\t  'forgive': 'forgiven',\n\t  'freeze': 'frozen',\n\t  'got': 'gotten',\n\t  'give': 'given',\n\t  'go': 'gone',\n\t  'grow': 'grown',\n\t  'hang': 'hung',\n\t  'have': 'had',\n\t  'hear': 'heard',\n\t  'hide': 'hidden',\n\t  'hit': 'hit',\n\t  'hold': 'held',\n\t  'hurt': 'hurt',\n\t  'keep': 'kept',\n\t  'kneel': 'knelt',\n\t  'know': 'known',\n\t  'lay': 'laid',\n\t  'lead': 'led',\n\t  'leap': 'leapt',\n\t  'leave': 'left',\n\t  'lend': 'lent',\n\t  'light': 'lit',\n\t  'loose': 'lost',\n\t  'make': 'made',\n\t  'mean': 'meant',\n\t  'meet': 'met',\n\t  'pay': 'paid',\n\t  'prove': 'proven',\n\t  'put': 'put',\n\t  'quit': 'quit',\n\t  'read': 'read',\n\t  'ride': 'ridden',\n\t  'ring': 'rung',\n\t  'rise': 'risen',\n\t  'run': 'run',\n\t  'say': 'said',\n\t  'see': 'seen',\n\t  'seek': 'sought',\n\t  'sell': 'sold',\n\t  'send': 'sent',\n\t  'set': 'set',\n\t  'sew': 'sewn',\n\t  'shake': 'shaken',\n\t  'shave': 'shaved',\n\t  'shine': 'shone',\n\t  'shoot': 'shot',\n\t  'shut': 'shut',\n\t  'seat': 'sat',\n\t  'slay': 'slain',\n\t  'sleep': 'slept',\n\t  'slide': 'slid',\n\t  'sneak': 'snuck',\n\t  'speak': 'spoken',\n\t  'speed': 'sped',\n\t  'spend': 'spent',\n\t  'spill': 'spilled',\n\t  'spin': 'spun',\n\t  'spit': 'spat',\n\t  'split': 'split',\n\t  'spring': 'sprung',\n\t  'stink': 'stunk',\n\t  'strew': 'strewn',\n\t  'sware': 'sworn',\n\t  'sweep': 'swept',\n\t  'thrive': 'thrived',\n\t  // 'throw': 'thrown',\n\t  'undergo': 'undergone',\n\t  'upset': 'upset',\n\t  'weave': 'woven',\n\t  'weep': 'wept',\n\t  'wind': 'wound',\n\t  'wring': 'wrung'\n\t};\n\t\n\t},{}],20:[function(_dereq_,module,exports){\n\t//most-frequent non-irregular verbs, in infinitive form, to be conjugated for the lexicon\n\t//this list is the seed, from which various forms are conjugated\n\t'use strict';\n\t\n\tvar fns = _dereq_('../fns');\n\t\n\t//suffix-index adjectives\n\t//  {cial:'cru,spe'} -> 'crucial', 'special'\n\t\n\t//suffix-index adjectives\n\t//  {cial:'cru,spe'} -> 'crucial', 'special'\n\tvar compressed = {\n\t  prove: ',im,ap,disap',\n\t  serve: ',de,ob,re',\n\t  ress: 'exp,p,prog,st,add,d',\n\t  lect: 'ref,se,neg,col,e',\n\t  sist: 'in,con,per,re,as',\n\t  tain: 'ob,con,main,s,re',\n\t  mble: 'rese,gru,asse,stu',\n\t  ture: 'frac,lec,tor,fea',\n\t  port: 're,sup,ex,im',\n\t  ate: 'rel,oper,indic,cre,h,activ,estim,particip,d,anticip,evalu',\n\t  use: ',ca,over,ref,acc,am,pa',\n\t  ive: 'l,rece,d,arr,str,surv,thr,rel',\n\t  are: 'prep,c,comp,sh,st,decl,d,sc',\n\t  ine: 'exam,imag,determ,comb,l,decl,underm,def',\n\t  nce: 'annou,da,experie,influe,bou,convi,enha',\n\t  ain: 'tr,rem,expl,dr,compl,g,str',\n\t  ent: 'prev,repres,r,res,rel,inv',\n\t  age: 'dam,mess,man,encour,eng,discour',\n\t  rge: 'su,cha,eme,u,me',\n\t  ise: 'ra,exerc,prom,surpr,pra',\n\t  ect: 'susp,dir,exp,def,rej',\n\t  ter: 'en,mat,cen,ca,al',\n\t  end: ',t,dep,ext,att',\n\t  est: 't,sugg,prot,requ,r',\n\t  ock: 'kn,l,sh,bl,unl',\n\t  nge: 'cha,excha,ra,challe,plu',\n\t  ase: 'incre,decre,purch,b,ce',\n\t  ish: 'establ,publ,w,fin,distingu',\n\t  mit: 'per,ad,sub,li',\n\t  ure: 'fig,ens,end,meas',\n\t  der: 'won,consi,mur,wan',\n\t  ave: 's,sh,w,cr',\n\t  ire: 'requ,des,h,ret',\n\t  tch: 'scra,swi,ma,stre',\n\t  ack: 'att,l,p,cr',\n\t  ion: 'ment,quest,funct,envis',\n\t  ump: 'j,l,p,d',\n\t  ide: 'dec,prov,gu,s',\n\t  ush: 'br,cr,p,r',\n\t  eat: 'def,h,tr,ch',\n\t  ash: 'sm,spl,w,fl',\n\t  rry: 'ca,ma,hu,wo',\n\t  ear: 'app,f,b,disapp',\n\t  er: 'answ,rememb,off,suff,cov,discov,diff,gath,deliv,both,empow,with',\n\t  le: 'fi,sett,hand,sca,whist,enab,smi,ming,ru,sprink,pi',\n\t  st: 'exi,foreca,ho,po,twi,tru,li,adju,boa,contra,boo',\n\t  it: 'vis,ed,depos,sp,awa,inhib,cred,benef,prohib,inhab',\n\t  nt: 'wa,hu,pri,poi,cou,accou,confro,warra,pai',\n\t  ch: 'laun,rea,approa,sear,tou,ar,enri,atta',\n\t  ss: 'discu,gue,ki,pa,proce,cro,glo,dismi',\n\t  ll: 'fi,pu,ki,ca,ro,sme,reca,insta',\n\t  rn: 'tu,lea,conce,retu,bu,ea,wa,gove',\n\t  ce: 'redu,produ,divor,noti,for,repla',\n\t  te: 'contribu,uni,tas,vo,no,constitu,ci',\n\t  rt: 'sta,comfo,exe,depa,asse,reso,conve',\n\t  ck: 'su,pi,che,ki,tri,wre',\n\t  ct: 'intera,restri,predi,attra,depi,condu',\n\t  ke: 'sta,li,bra,overta,smo,disli',\n\t  se: 'collap,suppo,clo,rever,po,sen',\n\t  nd: 'mi,surrou,dema,remi,expa,comma',\n\t  ve: 'achie,invol,remo,lo,belie,mo',\n\t  rm: 'fo,perfo,confi,confo,ha',\n\t  or: 'lab,mirr,fav,monit,hon',\n\t  ue: 'arg,contin,val,iss,purs',\n\t  ow: 'all,foll,sn,fl,borr',\n\t  ay: 'pl,st,betr,displ,portr',\n\t  ze: 'recogni,reali,snee,ga,emphasi',\n\t  ip: 'cl,d,gr,sl,sk',\n\t  re: 'igno,sto,interfe,sco',\n\t  ng: 'spri,ba,belo,cli',\n\t  ew: 'scr,vi,revi,ch',\n\t  gh: 'cou,lau,outwei,wei',\n\t  ly: 'app,supp,re,multip',\n\t  ge: 'jud,acknowled,dod,alle',\n\t  en: 'list,happ,threat,strength',\n\t  ee: 'fors,agr,disagr,guarant',\n\t  et: 'budg,regr,mark,targ',\n\t  rd: 'rega,gua,rewa,affo',\n\t  am: 'dre,j,sl,ro',\n\t  ry: 'va,t,c,bu'\n\t};\n\tvar arr = ['abandon', 'accept', 'add', 'added', 'adopt', 'aid', 'appeal', 'applaud', 'archive', 'ask', 'assign', 'associate', 'assume', 'attempt', 'avoid', 'ban', 'become', 'bomb', 'cancel', 'claim', 'claw', 'come', 'control', 'convey', 'cook', 'copy', 'cut', 'deem', 'defy', 'deny', 'describe', 'design', 'destroy', 'die', 'divide', 'do', 'doubt', 'drag', 'drift', 'drop', 'echo', 'embody', 'enjoy', 'envy', 'excel', 'fall', 'fail', 'fix', 'float', 'flood', 'focus', 'fold', 'get', 'goes', 'grab', 'grasp', 'grow', 'happen', 'head', 'help', 'hold fast', 'hope', 'include', 'instruct', 'invest', 'join', 'keep', 'know', 'learn', 'let', 'lift', 'link', 'load', 'loan', 'look', 'make due', 'mark', 'melt', 'minus', 'multiply', 'name', 'need', 'occur', 'overcome', 'overlap', 'overwhelm', 'owe', 'pay', 'plan', 'plug', 'plus', 'pop', 'pour', 'proclaim', 'put', 'rank', 'reason', 'reckon', 'relax', 'repair', 'reply', 'reveal', 'revel', 'risk', 'rub', 'ruin', 'sail', 'seek', 'seem', 'send', 'set', 'shout', 'sleep', 'sneak', 'sort', 'spoil', 'stem', 'step', 'stop', 'study', 'take', 'talk', 'thank', 'took', 'trade', 'transfer', 'trap', 'travel', 'tune', 'undergo', 'undo', 'uplift', 'walk', 'watch', 'win', 'wipe', 'work', 'yawn', 'yield'];\n\t\n\tmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\t\n\t},{\"../fns\":5}],21:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar tagColors = _dereq_('./tags/colors');\n\t\n\t// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\n\tvar c = {\n\t  reset: '\\x1b[0m',\n\t  red: '\\x1b[31m',\n\t  green: '\\x1b[32m',\n\t  yellow: '\\x1b[33m',\n\t  blue: '\\x1b[34m',\n\t  magenta: '\\x1b[35m',\n\t  cyan: '\\x1b[36m',\n\t  black: '\\x1b[30m'\n\t};\n\t//dont use colors on client-side\n\tif (typeof module === 'undefined') {\n\t  Object.keys(c).forEach(function (k) {\n\t    c[k] = '';\n\t  });\n\t}\n\t\n\t//coerce any input into a string\n\texports.ensureString = function (input) {\n\t  if (typeof input === 'string') {\n\t    return input;\n\t  } else if (typeof input === 'number') {\n\t    return '' + input;\n\t  }\n\t  return '';\n\t};\n\t//coerce any input into a string\n\texports.ensureObject = function (input) {\n\t  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) !== 'object') {\n\t    return {};\n\t  }\n\t  if (input === null || input instanceof Array) {\n\t    return {};\n\t  }\n\t  return input;\n\t};\n\t//string utilities\n\texports.endsWith = function (str, suffix) {\n\t  if (str && str.substr(-suffix.length) === suffix) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\texports.startsWith = function (str, prefix) {\n\t  if (str && prefix) {\n\t    if (str.substr(0, prefix.length) === prefix) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\texports.titleCase = function (str) {\n\t  return str.charAt(0).toUpperCase() + str.substr(1);\n\t};\n\t\n\t//turn a nested array into one array\n\texports.flatten = function (arr) {\n\t  var all = [];\n\t  arr.forEach(function (a) {\n\t    all = all.concat(a);\n\t  });\n\t  return all;\n\t};\n\t\n\t//shallow-clone an object\n\texports.copy = function (o) {\n\t  var o2 = {};\n\t  o = exports.ensureObject(o);\n\t  Object.keys(o).forEach(function (k) {\n\t    o2[k] = o[k];\n\t  });\n\t  return o2;\n\t};\n\texports.extend = function (obj, a) {\n\t  obj = exports.copy(obj);\n\t  var keys = Object.keys(a);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    obj[keys[i]] = a[keys[i]];\n\t  }\n\t  return obj;\n\t};\n\t\n\t//colorization\n\texports.green = function (str) {\n\t  return c.green + str + c.reset;\n\t};\n\texports.red = function (str) {\n\t  return c.red + str + c.reset;\n\t};\n\texports.blue = function (str) {\n\t  return c.blue + str + c.reset;\n\t};\n\texports.magenta = function (str) {\n\t  return c.magenta + str + c.reset;\n\t};\n\texports.cyan = function (str) {\n\t  return c.cyan + str + c.reset;\n\t};\n\texports.yellow = function (str) {\n\t  return c.yellow + str + c.reset;\n\t};\n\texports.black = function (str) {\n\t  return c.black + str + c.reset;\n\t};\n\texports.printTag = function (tag) {\n\t  if (tagColors[tag]) {\n\t    return exports[tagColors[tag]](tag);\n\t  }\n\t  return tag;\n\t};\n\texports.printTerm = function (t) {\n\t  var tags = Object.keys(t.tag);\n\t  for (var i = 0; i < tags.length; i++) {\n\t    if (tagColors[tags[i]]) {\n\t      var color = tagColors[tags[i]];\n\t      return exports[color](t.plaintext);\n\t    }\n\t  }\n\t  return c.reset + t.plaintext + c.reset;\n\t};\n\t\n\texports.leftPad = function (str, width, char) {\n\t  char = char || ' ';\n\t  str = str.toString();\n\t  while (str.length < width) {\n\t    str += char;\n\t  }\n\t  return str;\n\t};\n\t\n\t},{\"./tags/colors\":173}],22:[function(_dereq_,module,exports){\n\t(function (global){\n\t'use strict';\n\t\n\tvar buildResult = _dereq_('./result/build');\n\tvar pkg = _dereq_('../package.json');\n\tvar log = _dereq_('./log');\n\t\n\t//the main thing\n\tvar nlp = function nlp(str, lexicon, tagSet) {\n\t  return buildResult(str, lexicon, tagSet);\n\t};\n\t\n\t//this is handy\n\tnlp.version = pkg.version;\n\t\n\t//so handy at times\n\tnlp.lexicon = function () {\n\t  return _dereq_('./data/lexicon');\n\t};\n\t\n\t//also this is much handy\n\tnlp.verbose = function (str) {\n\t  log.enable(str);\n\t};\n\t\n\t//and then all-the-exports...\n\tif (typeof self !== 'undefined') {\n\t  self.nlp = nlp; // Web Worker\n\t} else if (typeof window !== 'undefined') {\n\t  window.nlp = nlp; // Browser\n\t} else if (typeof global !== 'undefined') {\n\t  global.nlp = nlp; // NodeJS\n\t}\n\t//don't forget amd!\n\tif (typeof define === 'function' && define.amd) {\n\t  define(nlp);\n\t}\n\t//then for some reason, do this too!\n\tif (typeof module !== 'undefined') {\n\t  module.exports = nlp;\n\t}\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../package.json\":1,\"./data/lexicon\":7,\"./log\":23,\"./result/build\":24}],23:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar fns = _dereq_('../fns');\n\tvar _enable = false;\n\t\n\tmodule.exports = {\n\t  enable: function enable(str) {\n\t    if (str === undefined) {\n\t      str = true;\n\t    }\n\t    _enable = str;\n\t  },\n\t  here: function here(path) {\n\t    if (_enable === true || _enable === path) {\n\t      console.log('  ' + path);\n\t    }\n\t  },\n\t  tell: function tell(str, path) {\n\t    if (_enable === true || _enable === path) {\n\t      if ((typeof str === 'undefined' ? 'undefined' : _typeof(str)) === 'object') {\n\t        str = JSON.stringify(str);\n\t      }\n\t      str = '    ' + str;\n\t      console.log(str);\n\t    }\n\t  },\n\t  tagAs: function tagAs(t, pos, reason) {\n\t    if (_enable === true || _enable === 'tagger') {\n\t      var title = t.normal || '[' + t.silent_term + ']';\n\t      title = fns.yellow(title);\n\t      title = fns.leftPad('\\'' + title + '\\'', 20);\n\t      title += '  ->   ' + fns.printTag(pos);\n\t      title = fns.leftPad(title, 54);\n\t      console.log('       ' + title + '(' + fns.cyan(reason || '') + ')');\n\t    }\n\t  }\n\t};\n\t\n\t},{\"../fns\":21}],24:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar Text = _dereq_('./index');\n\tvar tokenize = _dereq_('./tokenize');\n\tvar Terms = _dereq_('./paths').Terms;\n\tvar normalize = _dereq_('../term/methods/normalize/normalize').normalize;\n\tvar tagArr = _dereq_('../tags');\n\t\n\t//basically really dirty and stupid.\n\tvar normalizeLex = function normalizeLex(lex) {\n\t  lex = lex || {};\n\t  return Object.keys(lex).reduce(function (h, k) {\n\t    //add natural form\n\t    h[k] = lex[k];\n\t    var normal = normalize(k);\n\t    if (k !== normal) {\n\t      //add it too\n\t      h[normal] = lex[k];\n\t    }\n\t    return h;\n\t  }, {});\n\t};\n\t\n\tvar extendTags = function extendTags(newTags) {\n\t  console.log(newTags);\n\t  console.log(tagArr);\n\t};\n\t\n\t//build a new pos-tagged Result obj from a string\n\tvar fromString = function fromString(str, lexicon, tagSet) {\n\t  var sentences = tokenize(str);\n\t  //make sure lexicon obeys standards\n\t  lexicon = normalizeLex(lexicon);\n\t  var list = sentences.map(function (s) {\n\t    return Terms.fromString(s, lexicon);\n\t  });\n\t  //extend tagset for this ref\n\t  if (tagSet) {\n\t    extendTags(tagSet);\n\t  }\n\t\n\t  var r = new Text(list, lexicon, null, tagSet);\n\t  //give each ts a ref to the result\n\t  r.list.forEach(function (ts) {\n\t    ts.refText = r;\n\t  });\n\t  return r;\n\t};\n\tmodule.exports = fromString;\n\t\n\t},{\"../tags\":175,\"../term/methods/normalize/normalize\":182,\"./index\":25,\"./paths\":37,\"./tokenize\":130}],25:[function(_dereq_,module,exports){\n\t'use strict';\n\t//a Text is an array of termLists\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Text = function () {\n\t  function Text(arr, lexicon, reference, tagSet) {\n\t    _classCallCheck(this, Text);\n\t\n\t    this.list = arr || [];\n\t    this.reference = reference;\n\t    this.tagSet = tagSet;\n\t  }\n\t  //getter/setters\n\t  /** did it find anything? */\n\t\n\t\n\t  _createClass(Text, [{\n\t    key: 'all',\n\t    value: function all() {\n\t      return this.parent;\n\t    }\n\t  }, {\n\t    key: 'index',\n\t    value: function index() {\n\t      return this.list.map(function (ts) {\n\t        return ts.index();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return {\n\t          normal: ts.out('normal'),\n\t          text: ts.out('text')\n\t        };\n\t      });\n\t    }\n\t  }, {\n\t    key: 'debug',\n\t    value: function debug(opts) {\n\t      return out(this, 'debug', opts);\n\t    }\n\t  }, {\n\t    key: 'found',\n\t    get: function get() {\n\t      return this.list.length > 0;\n\t    }\n\t    /** how many Texts are there?*/\n\t\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this.list.length;\n\t    }\n\t  }, {\n\t    key: 'isA',\n\t    get: function get() {\n\t      return 'Text';\n\t    }\n\t  }, {\n\t    key: 'parent',\n\t    get: function get() {\n\t      return this.reference || this;\n\t    },\n\t    set: function set(r) {\n\t      this.reference = r;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'whitespace',\n\t    get: function get() {\n\t      var _this = this;\n\t\n\t      return {\n\t        before: function before(str) {\n\t          _this.list.forEach(function (ts) {\n\t            ts.whitespace.before(str);\n\t          });\n\t          return _this;\n\t        },\n\t        after: function after(str) {\n\t          _this.list.forEach(function (ts) {\n\t            ts.whitespace.after(str);\n\t          });\n\t          return _this;\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Text;\n\t}();\n\t\n\tmodule.exports = Text;\n\tText = _dereq_('./methods/array')(Text);\n\tText = _dereq_('./methods/loops')(Text);\n\tText = _dereq_('./methods/match')(Text);\n\tText = _dereq_('./methods/out')(Text);\n\tText = _dereq_('./methods/sort')(Text);\n\tText = _dereq_('./methods/split')(Text);\n\tText = _dereq_('./methods/tag')(Text);\n\tText = _dereq_('./methods/normalize')(Text);\n\t\n\tvar subset = {\n\t  acronyms: _dereq_('./subset/acronyms'),\n\t  adjectives: _dereq_('./subset/adjectives'),\n\t  adverbs: _dereq_('./subset/adverbs'),\n\t  clauses: _dereq_('./subset/clauses'),\n\t  contractions: _dereq_('./subset/contractions'),\n\t  dates: _dereq_('./subset/dates'),\n\t  hashTags: _dereq_('./subset/hashTags'),\n\t  nouns: _dereq_('./subset/nouns'),\n\t  organizations: _dereq_('./subset/organizations'),\n\t  people: _dereq_('./subset/people'),\n\t  phoneNumbers: _dereq_('./subset/phoneNumbers'),\n\t  places: _dereq_('./subset/places'),\n\t  questions: _dereq_('./subset/sentences/questions'),\n\t  quotations: _dereq_('./subset/quotations'),\n\t  sentences: _dereq_('./subset/sentences'),\n\t  statements: _dereq_('./subset/sentences/statements'),\n\t  terms: _dereq_('./subset/terms'),\n\t  topics: _dereq_('./subset/topics'),\n\t  urls: _dereq_('./subset/urls'),\n\t  values: _dereq_('./subset/values'),\n\t  verbs: _dereq_('./subset/verbs'),\n\t  ngrams: _dereq_('./subset/ngrams'),\n\t  startGrams: _dereq_('./subset/ngrams/startGrams'),\n\t  endGrams: _dereq_('./subset/ngrams/endGrams')\n\t};\n\t//term subsets\n\tObject.keys(subset).forEach(function (k) {\n\t  Text.prototype[k] = function (num, arg) {\n\t    var sub = subset[k];\n\t    var m = sub.find(this, num, arg);\n\t    return new subset[k](m.list, this.lexicon, this.parent);\n\t  };\n\t});\n\t\n\t},{\"./methods/array\":26,\"./methods/loops\":27,\"./methods/match\":28,\"./methods/normalize\":29,\"./methods/out\":30,\"./methods/sort\":33,\"./methods/split\":35,\"./methods/tag\":36,\"./subset/acronyms\":38,\"./subset/adjectives\":39,\"./subset/adverbs\":47,\"./subset/clauses\":49,\"./subset/contractions\":53,\"./subset/dates\":55,\"./subset/hashTags\":62,\"./subset/ngrams\":66,\"./subset/ngrams/endGrams\":63,\"./subset/ngrams/startGrams\":67,\"./subset/nouns\":69,\"./subset/organizations\":78,\"./subset/people\":80,\"./subset/phoneNumbers\":82,\"./subset/places\":83,\"./subset/quotations\":85,\"./subset/sentences\":86,\"./subset/sentences/questions\":87,\"./subset/sentences/statements\":90,\"./subset/terms\":93,\"./subset/topics\":95,\"./subset/urls\":96,\"./subset/values\":97,\"./subset/verbs\":110}],26:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar Terms = _dereq_('../../terms');\n\t\n\tvar genericMethods = function genericMethods(Text) {\n\t\n\t  var methods = {\n\t\n\t    /**copy data properly so later transformations will have no effect*/\n\t    clone: function clone() {\n\t      var list = this.list.map(function (ts) {\n\t        return ts.clone();\n\t      });\n\t      // this.parent.list = this.parent.list.map((ts) => {\n\t      //   return ts.clone();\n\t      // });\n\t      // return this;\n\t      return new Text(list); //this.lexicon, this.parent\n\t    },\n\t\n\t    /** get the nth term of each result*/\n\t    term: function term(n) {\n\t      var _this = this;\n\t\n\t      var list = this.list.map(function (ts) {\n\t        var arr = [];\n\t        var el = ts.terms[n];\n\t        if (el) {\n\t          arr = [el];\n\t        }\n\t        return new Terms(arr, _this.lexicon, _this.refText, _this.refTerms);\n\t      });\n\t      return new Text(list, this.lexicon, this.parent);\n\t    },\n\t    firstTerm: function firstTerm() {\n\t      return this.match('^.');\n\t    },\n\t    lastTerm: function lastTerm() {\n\t      return this.match('.$');\n\t    },\n\t\n\t    /** grab a subset of the results*/\n\t    slice: function slice(start, end) {\n\t      this.list = this.list.slice(start, end);\n\t      return this;\n\t    },\n\t\n\t    /** use only the nth result*/\n\t    get: function get(n) {\n\t      //return an empty result\n\t      if (!n && n !== 0 || !this.list[n]) {\n\t        return new Text([], this.lexicon, this.parent);\n\t      }\n\t      var ts = this.list[n];\n\t      return new Text([ts], this.lexicon, this.parent);\n\t    },\n\t    /**use only the first result */\n\t    first: function first(n) {\n\t      if (!n && n !== 0) {\n\t        return this.get(0);\n\t      }\n\t      return new Text(this.list.slice(0, n), this.lexicon, this.parent);\n\t    },\n\t    /**use only the last result */\n\t    last: function last(n) {\n\t      if (!n && n !== 0) {\n\t        return this.get(this.list.length - 1);\n\t      }\n\t      var end = this.list.length;\n\t      var start = end - n;\n\t      return new Text(this.list.slice(start, end), this.lexicon, this.parent);\n\t    },\n\t\n\t    concat: function concat() {\n\t      //any number of params\n\t      for (var i = 0; i < arguments.length; i++) {\n\t        var p = arguments[i];\n\t        if ((typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object') {\n\t          //Text()\n\t          if (p.isA === 'Text' && p.list) {\n\t            this.list = this.list.concat(p.list);\n\t          }\n\t          //Terms()\n\t          if (p.isA === 'Terms') {\n\t            this.list.push(p);\n\t          }\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t    /** make it into one sentence/termlist */\n\t    flatten: function flatten() {\n\t      var terms = [];\n\t      this.list.forEach(function (ts) {\n\t        terms = terms.concat(ts.terms);\n\t      });\n\t      //dont create an empty ts\n\t      if (!terms.length) {\n\t        return new Text(null, this.lexicon, this.parent);\n\t      }\n\t      var ts = new Terms(terms, this.lexicon, this, null);\n\t      return new Text([ts], this.lexicon, this.parent);\n\t    }\n\t\n\t  };\n\t\n\t  Object.keys(methods).forEach(function (k) {\n\t    Text.prototype[k] = methods[k];\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = genericMethods;\n\t\n\t},{\"../../terms\":195}],27:[function(_dereq_,module,exports){\n\t'use strict';\n\t//this methods are simply loops around each termList object.\n\t\n\tvar foreach = ['toTitleCase', 'toUpperCase', 'toLowerCase', 'toCamelCase', 'hyphenate', 'dehyphenate', 'insertBefore', 'insertAfter', 'insertAt', 'replace', 'replaceWith', 'delete'];\n\t\n\tvar addMethods = function addMethods(Text) {\n\t\n\t  foreach.forEach(function (k) {\n\t    var myFn = function myFn() {\n\t      var args = arguments;\n\t      this.list.forEach(function (ts) {\n\t        ts[k].apply(ts, args);\n\t      });\n\t      return this;\n\t    };\n\t    Text.prototype[k] = myFn;\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],28:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar splitMethods = function splitMethods(Text) {\n\t\n\t  var methods = {\n\t\n\t    /** do a regex-like search through terms and return a subset */\n\t    match: function match(reg, verbose) {\n\t      var list = [];\n\t      this.list.forEach(function (ts) {\n\t        //an array of arrays\n\t        var matches = ts.match(reg, verbose);\n\t        matches.list.forEach(function (ms) {\n\t          list.push(ms);\n\t        });\n\t      });\n\t      var parent = this.parent || this;\n\t      return new Text(list, this.lexicon, parent);\n\t    },\n\t\n\t    not: function not(reg, verbose) {\n\t      var list = [];\n\t      this.list.forEach(function (ts) {\n\t        var found = ts.not(reg, verbose);\n\t        list = list.concat(found.list);\n\t      });\n\t      var parent = this.parent || this;\n\t      return new Text(list, this.lexicon, parent);\n\t    },\n\t\n\t    /** find the first result */\n\t    // matchOne: function (reg, verbose) {\n\t    //   for (let i = 0; i < this.list.length; i++) {\n\t    //     let ms = this.list[i].match(reg, verbose);\n\t    //     if (ms && ms.length) {\n\t    //       let parent = this.parent || this;\n\t    //       return new Text(ms, parent);\n\t    //     }\n\t    //   }\n\t    //   return null;\n\t    // },\n\t\n\t    /** true/false if it countains atleast one match*/\n\t    // has: function (reg, verbose) {\n\t    //   for (let i = 0; i < this.list.length; i++) {\n\t    //     let ms = this.list[i].match(reg, verbose);\n\t    //     if (ms && ms.length) {\n\t    //       return true;\n\t    //     }\n\t    //   }\n\t    //   return false;\n\t    // },\n\t\n\t    'if': function _if(reg, verbose) {\n\t      var list = [];\n\t      for (var i = 0; i < this.list.length; i++) {\n\t        var m = this.list[i].match(reg, verbose);\n\t        if (m.found) {\n\t          list.push(this.list[i]);\n\t        }\n\t      }\n\t      var parent = this.parent || this;\n\t      return new Text(list, this.lexicon, parent);\n\t    },\n\t\n\t    ifNo: function ifNo(reg, verbose) {\n\t      var list = [];\n\t      for (var i = 0; i < this.list.length; i++) {\n\t        var m = this.list[i].match(reg, verbose);\n\t        if (!m.found) {\n\t          list.push(this.list[i]);\n\t        }\n\t      }\n\t      var parent = this.parent || this;\n\t      return new Text(list, this.lexicon, parent);\n\t    }\n\t\n\t  };\n\t  //alias 'and'\n\t  methods.and = methods.match;\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Text.prototype[k] = methods[k];\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = splitMethods;\n\t\n\t},{}],29:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar defaultMethods = {\n\t  whitespace: true,\n\t  'case': true,\n\t  numbers: true,\n\t  punctuation: true,\n\t  unicode: true,\n\t  contractions: true\n\t};\n\t\n\tvar methods = {\n\t\n\t  /** make only one space between each word */\n\t  whitespace: function whitespace(r) {\n\t    r.terms().list.forEach(function (ts, i) {\n\t      var t = ts.terms[0];\n\t      if (i > 0) {\n\t        t.whitespace.before = ' ';\n\t      } else if (i === 0) {\n\t        t.whitespace.before = '';\n\t      }\n\t      t.whitespace.after = '';\n\t    });\n\t    return r;\n\t  },\n\t\n\t  /** make first-word titlecase, and people, places titlecase */\n\t  'case': function _case(r) {\n\t    r.list.forEach(function (ts) {\n\t      ts.terms.forEach(function (t, i) {\n\t        if (i === 0 || t.tag.Person || t.tag.Place || t.tag.Organization) {\n\t          ts.toTitleCase();\n\t        } else {\n\t          ts.toLowerCase();\n\t        }\n\t      });\n\t    });\n\t    return r;\n\t  },\n\t\n\t  /** turn 'five' to 5, and 'fifth' to 5th*/\n\t  numbers: function numbers(r) {\n\t    return r.values().toNumber();\n\t  },\n\t\n\t  /** remove commas, semicolons - but keep sentence-ending punctuation*/\n\t  punctuation: function punctuation(r) {\n\t    r.list.forEach(function (ts) {\n\t      //first-term punctuation\n\t      ts.terms[0]._text = ts.terms[0]._text.replace(/^¿/, '');\n\t      //middle-terms\n\t      for (var i = 0; i < ts.terms.length - 1; i++) {\n\t        var t = ts.terms[i];\n\t        //remove non-sentence-ending stuff\n\t        t._text = t._text.replace(/[:;,]$/, '');\n\t      }\n\t      //replace !!! with !\n\t      var last = ts.terms[ts.terms.length - 1];\n\t      last._text = last._text.replace(/\\.+$/, '.');\n\t      last._text = last._text.replace(/!+$/, '!');\n\t      last._text = last._text.replace(/\\?+!?$/, '?'); //support '?!'\n\t    });\n\t    return r;\n\t  },\n\t\n\t  contractions: function contractions(r) {\n\t    return r.contractions().expand();\n\t  }\n\t};\n\t\n\tvar addMethods = function addMethods(Text) {\n\t  Text.prototype.normalize = function (obj) {\n\t    var _this = this;\n\t\n\t    obj = obj || defaultMethods;\n\t    //do each type of normalization\n\t    Object.keys(obj).forEach(function (fn) {\n\t      if (methods[fn]) {\n\t        methods[fn](_this);\n\t      }\n\t    });\n\t    return this;\n\t  };\n\t  return Text;\n\t};\n\tmodule.exports = addMethods;\n\t\n\t},{}],30:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _topk = _dereq_('./topk');\n\tvar offset = _dereq_('./offset');\n\t\n\tvar methods = {\n\t  text: function text(r) {\n\t    return r.list.reduce(function (str, ts) {\n\t      str += ts.out('text');\n\t      return str;\n\t    }, '');\n\t  },\n\t  normal: function normal(r) {\n\t    return r.list.map(function (ts) {\n\t      var str = ts.out('normal');\n\t      var last = ts.last();\n\t      if (last) {\n\t        var punct = last.endPunctuation();\n\t        if (punct === '.' || punct === '!' || punct === '?') {\n\t          str += punct;\n\t        }\n\t      }\n\t      return str;\n\t    }).join(' ');\n\t  },\n\t  root: function root(r) {\n\t    return r.list.map(function (ts) {\n\t      return ts.out('root');\n\t    }).join(' ');\n\t  },\n\t  /** output where in the original output string they are*/\n\t  offsets: function offsets(r) {\n\t    return offset(r);\n\t  },\n\t  grid: function grid(r) {\n\t    return r.list.reduce(function (str, ts) {\n\t      str += ts.out('grid');\n\t      return str;\n\t    }, '');\n\t  },\n\t  color: function color(r) {\n\t    return r.list.reduce(function (str, ts) {\n\t      str += ts.out('color');\n\t      return str;\n\t    }, '');\n\t  },\n\t  array: function array(r) {\n\t    return r.list.reduce(function (arr, ts) {\n\t      arr.push(ts.out('normal'));\n\t      return arr;\n\t    }, []);\n\t  },\n\t  json: function json(r) {\n\t    return r.list.reduce(function (arr, ts) {\n\t      var terms = ts.terms.map(function (t) {\n\t        return {\n\t          text: t.text,\n\t          normal: t.normal,\n\t          tags: t.tag\n\t        };\n\t      });\n\t      arr.push(terms);\n\t      return arr;\n\t    }, []);\n\t  },\n\t  html: function html(r) {\n\t    var html = r.list.reduce(function (str, ts) {\n\t      var sentence = ts.terms.reduce(function (sen, t) {\n\t        sen += '\\n    ' + t.out('html');\n\t        return sen;\n\t      }, '');\n\t      return str += '\\n  <span>' + sentence + '\\n  </span>';\n\t    }, '');\n\t    return '<span> ' + html + '\\n</span>';\n\t  },\n\t  terms: function terms(r) {\n\t    var arr = [];\n\t    r.list.forEach(function (ts) {\n\t      ts.terms.forEach(function (t) {\n\t        arr.push({\n\t          text: t.text,\n\t          normal: t.normal,\n\t          tags: Object.keys(t.tag)\n\t        });\n\t      });\n\t    });\n\t    return arr;\n\t  },\n\t  debug: function debug(r) {\n\t    console.log('====');\n\t    r.list.forEach(function (ts) {\n\t      console.log('   --');\n\t      ts.debug();\n\t    });\n\t    return r;\n\t  },\n\t  topk: function topk(r) {\n\t    return _topk(r);\n\t  }\n\t};\n\tmethods.plaintext = methods.text;\n\tmethods.normalized = methods.normal;\n\tmethods.colors = methods.color;\n\tmethods.tags = methods.terms;\n\tmethods.offset = methods.offsets;\n\tmethods.frequency = methods.topk;\n\tmethods.freq = methods.topk;\n\tmethods.arr = methods.array;\n\t\n\tvar addMethods = function addMethods(Text) {\n\t  Text.prototype.out = function (fn) {\n\t    if (methods[fn]) {\n\t      return methods[fn](this);\n\t    }\n\t    return methods.text(this);\n\t  };\n\t  Text.prototype.debug = function () {\n\t    return methods.debug(this);\n\t  };\n\t  return Text;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{\"./offset\":31,\"./topk\":32}],31:[function(_dereq_,module,exports){\n\t'use strict';\n\t/** say where in the original output string they are found*/\n\t\n\tvar findOffset = function findOffset(parent, term) {\n\t  var sum = 0;\n\t  for (var i = 0; i < parent.list.length; i++) {\n\t    for (var o = 0; o < parent.list[i].terms.length; o++) {\n\t      var t = parent.list[i].terms[o];\n\t      if (t.uid === term.uid) {\n\t        return sum;\n\t      } else {\n\t        sum += t.whitespace.before.length + t._text.length + t.whitespace.after.length;\n\t      }\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\t//map over all-dem-results\n\tvar allOffset = function allOffset(r) {\n\t  var parent = r.all();\n\t  return r.list.map(function (ts) {\n\t    return {\n\t      text: ts.out('text'),\n\t      normal: ts.out('normal'),\n\t      offset: findOffset(parent, ts.terms[0]),\n\t      length: ts.out('text').length\n\t    };\n\t  });\n\t};\n\tmodule.exports = allOffset;\n\t\n\t},{}],32:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar topk = function topk(r, n) {\n\t  //count occurance\n\t  var count = {};\n\t  r.list.forEach(function (ts) {\n\t    var str = ts.out('root');\n\t    count[str] = count[str] || 0;\n\t    count[str] += 1;\n\t  });\n\t  //turn into an array\n\t  var all = [];\n\t  Object.keys(count).forEach(function (k) {\n\t    all.push({\n\t      normal: k,\n\t      count: count[k]\n\t    });\n\t  });\n\t  //add percentage\n\t  all.forEach(function (o) {\n\t    o.percent = parseFloat((o.count / r.list.length * 100).toFixed(2));\n\t  });\n\t  //sort by freq\n\t  all = all.sort(function (a, b) {\n\t    if (a.count > b.count) {\n\t      return -1;\n\t    }\n\t    return 1;\n\t  });\n\t  if (n) {\n\t    all = all.splice(0, n);\n\t  }\n\t  return all;\n\t};\n\t\n\tmodule.exports = topk;\n\t\n\t},{}],33:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar sorter = _dereq_('./methods');\n\t\n\tvar addMethods = function addMethods(Text) {\n\t\n\t  var fns = {\n\t\n\t    /**reorder result.list alphabetically */\n\t    sort: function sort(method) {\n\t      //default sort\n\t      method = method || 'alphabetical';\n\t      method = method.toLowerCase();\n\t      if (!method || method === 'alpha' || method === 'alphabetical') {\n\t        return sorter.alpha(this, Text);\n\t      }\n\t      if (method === 'chron' || method === 'chronological') {\n\t        return sorter.chron(this, Text);\n\t      }\n\t      if (method === 'length') {\n\t        return sorter.lengthFn(this, Text);\n\t      }\n\t      if (method === 'freq' || method === 'frequency') {\n\t        return sorter.freq(this, Text);\n\t      }\n\t      if (method === 'wordcount') {\n\t        return sorter.wordCount(this, Text);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**reverse the order of result.list */\n\t    reverse: function reverse() {\n\t      this.list = this.list.reverse();\n\t      return this;\n\t    },\n\t\n\t    unique: function unique() {\n\t      var obj = {};\n\t      this.list = this.list.filter(function (ts) {\n\t        var str = ts.out('root');\n\t        if (obj[str]) {\n\t          return false;\n\t        }\n\t        obj[str] = true;\n\t        return true;\n\t      });\n\t      return this;\n\t    }\n\t  };\n\t  //hook them into result.proto\n\t  Object.keys(fns).forEach(function (k) {\n\t    Text.prototype[k] = fns[k];\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{\"./methods\":34}],34:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//perform sort on pre-computed values\n\t\n\tvar sortEm = function sortEm(arr) {\n\t  arr = arr.sort(function (a, b) {\n\t    if (a.index > b.index) {\n\t      return 1;\n\t    }\n\t    if (a.index === b.index) {\n\t      return 0;\n\t    }\n\t    return -1;\n\t  });\n\t  //return ts objects\n\t  return arr.map(function (o) {\n\t    return o.ts;\n\t  });\n\t};\n\t\n\t//alphabetical sorting of a termlist array\n\texports.alpha = function (r) {\n\t  r.list.sort(function (a, b) {\n\t    //#1 performance speedup\n\t    if (a === b) {\n\t      return 0;\n\t    }\n\t    //#2 performance speedup\n\t    if (a.terms[0] && b.terms[0]) {\n\t      if (a.terms[0].root > b.terms[0].root) {\n\t        return 1;\n\t      }\n\t      if (a.terms[0].root < b.terms[0].root) {\n\t        return -1;\n\t      }\n\t    }\n\t    //regular compare\n\t    if (a.out('root') > b.out('root')) {\n\t      return 1;\n\t    }\n\t    return -1;\n\t  });\n\t  return r;\n\t};\n\t\n\t//the order they were recieved (chronological~)\n\texports.chron = function (r) {\n\t  //pre-compute indexes\n\t  var tmp = r.list.map(function (ts) {\n\t    return {\n\t      ts: ts,\n\t      index: ts.termIndex()\n\t    };\n\t  });\n\t  r.list = sortEm(tmp);\n\t  return r;\n\t};\n\t\n\t//shortest matches first\n\texports.lengthFn = function (r) {\n\t  //pre-compute indexes\n\t  var tmp = r.list.map(function (ts) {\n\t    return {\n\t      ts: ts,\n\t      index: ts.chars()\n\t    };\n\t  });\n\t  r.list = sortEm(tmp).reverse();\n\t  return r;\n\t};\n\t\n\t//count the number of terms in each match\n\texports.wordCount = function (r) {\n\t  //pre-compute indexes\n\t  var tmp = r.list.map(function (ts) {\n\t    return {\n\t      ts: ts,\n\t      index: ts.length\n\t    };\n\t  });\n\t  r.list = sortEm(tmp);\n\t  return r;\n\t};\n\t\n\t//sort by frequency (like topk)\n\texports.freq = function (r) {\n\t  //get counts\n\t  var count = {};\n\t  r.list.forEach(function (ts) {\n\t    var str = ts.out('root');\n\t    count[str] = count[str] || 0;\n\t    count[str] += 1;\n\t  });\n\t  //pre-compute indexes\n\t  var tmp = r.list.map(function (ts) {\n\t    var num = count[ts.out('root')] || 0;\n\t    return {\n\t      ts: ts,\n\t      index: num * -1 //quick-reverse it\n\t    };\n\t  });\n\t  r.list = sortEm(tmp);\n\t  return r;\n\t};\n\t\n\t},{}],35:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar splitMethods = function splitMethods(Text) {\n\t\n\t  var methods = {\n\t    /** turn result into two seperate results */\n\t    splitAfter: function splitAfter(reg, verbose) {\n\t      var list = [];\n\t      this.list.forEach(function (ts) {\n\t        ts.splitAfter(reg, verbose).forEach(function (mts) {\n\t          list.push(mts);\n\t        });\n\t      });\n\t      this.list = list;\n\t      return this;\n\t    },\n\t    /** turn result into two seperate results */\n\t    splitBefore: function splitBefore(reg, verbose) {\n\t      var list = [];\n\t      this.list.forEach(function (ts) {\n\t        ts.splitBefore(reg, verbose).forEach(function (mts) {\n\t          list.push(mts);\n\t        });\n\t      });\n\t      this.list = list;\n\t      return this;\n\t    },\n\t    /** turn result into two seperate results */\n\t    splitOn: function splitOn(reg, verbose) {\n\t      var list = [];\n\t      this.list.forEach(function (ts) {\n\t        ts.splitOn(reg, verbose).forEach(function (mts) {\n\t          list.push(mts);\n\t        });\n\t      });\n\t      this.list = list;\n\t      return this;\n\t    }\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Text.prototype[k] = methods[k];\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = splitMethods;\n\t\n\t},{}],36:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar splitMethods = function splitMethods(Text) {\n\t\n\t  var methods = {\n\t\n\t    /**tag all the terms in this result as something */\n\t    tag: function tag(_tag, reason) {\n\t      var _this = this;\n\t\n\t      this.list.forEach(function (ts) {\n\t        ts.tagAs(_tag, reason, _this.tagSet);\n\t      });\n\t      return this;\n\t    },\n\t    /**remove a tag in all the terms in this result (that had it) */\n\t    unTag: function unTag(tag, reason) {\n\t      var _this2 = this;\n\t\n\t      this.list.forEach(function (ts) {\n\t        ts.unTag(tag, reason, _this2.tagSet);\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /** see if these terms can become this tag*/\n\t    canBe: function canBe(tag) {\n\t      var _this3 = this;\n\t\n\t      this.list.forEach(function (ts) {\n\t        ts.terms = ts.terms.filter(function (t) {\n\t          return t.canBe(tag, _this3.tagSet);\n\t        });\n\t      });\n\t      return this;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Text.prototype[k] = methods[k];\n\t  });\n\t  return Text;\n\t};\n\t\n\tmodule.exports = splitMethods;\n\t\n\t},{}],37:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  fns: _dereq_('../fns'),\n\t  log: _dereq_('../log'),\n\t  data: _dereq_('../data'),\n\t  Terms: _dereq_('../terms'),\n\t  tags: _dereq_('../tags')\n\t};\n\t\n\t},{\"../data\":6,\"../fns\":21,\"../log\":23,\"../tags\":175,\"../terms\":195}],38:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Acronyms = function (_Text) {\n\t  _inherits(Acronyms, _Text);\n\t\n\t  function Acronyms() {\n\t    _classCallCheck(this, Acronyms);\n\t\n\t    return _possibleConstructorReturn(this, (Acronyms.__proto__ || Object.getPrototypeOf(Acronyms)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Acronyms, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.terms().list.map(function (ts) {\n\t        var t = ts.terms[0];\n\t        var parsed = t.text.toUpperCase().replace(/\\./g).split('');\n\t        return {\n\t          periods: parsed.join('.'),\n\t          normal: parsed.join(''),\n\t          text: t.text\n\t        };\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Acronym');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Acronyms;\n\t}(Text);\n\t\n\tmodule.exports = Acronyms;\n\t\n\t},{\"../../index\":25}],39:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar methods = _dereq_('./methods');\n\t\n\tvar Adjectives = function (_Text) {\n\t  _inherits(Adjectives, _Text);\n\t\n\t  function Adjectives() {\n\t    _classCallCheck(this, Adjectives);\n\t\n\t    return _possibleConstructorReturn(this, (Adjectives.__proto__ || Object.getPrototypeOf(Adjectives)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Adjectives, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      var _this2 = this;\n\t\n\t      return this.list.map(function (ts) {\n\t        var str = ts.out('normal');\n\t        return {\n\t          comparative: methods.toComparative(str),\n\t          superlative: methods.toSuperlative(str),\n\t          adverbForm: methods.toAdverb(str),\n\t          nounForm: methods.toNoun(str),\n\t          verbForm: methods.toVerb(str),\n\t          normal: str,\n\t          text: _this2.out('text')\n\t        };\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Adjective');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Adjectives;\n\t}(Text);\n\t\n\tmodule.exports = Adjectives;\n\t\n\t},{\"../../index\":25,\"./methods\":41}],40:[function(_dereq_,module,exports){\n\t'use strict';\n\t//an obj of adjectives that can be converted to superlative + comparative, via the lexicon data\n\t\n\tvar data = _dereq_('../../../../data');\n\t\n\tvar convertables = {};\n\tdata.superlatives.forEach(function (a) {\n\t  convertables[a] = true;\n\t});\n\tdata.verbConverts.forEach(function (a) {\n\t  convertables[a] = true;\n\t});\n\tmodule.exports = convertables;\n\t\n\t},{\"../../../../data\":6}],41:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  toNoun: _dereq_('./toNoun'),\n\t  toSuperlative: _dereq_('./toSuperlative'),\n\t  toComparative: _dereq_('./toComparative'),\n\t  toAdverb: _dereq_('./toAdverb'),\n\t  toVerb: _dereq_('./toVerb')\n\t};\n\t\n\t},{\"./toAdverb\":42,\"./toComparative\":43,\"./toNoun\":44,\"./toSuperlative\":45,\"./toVerb\":46}],42:[function(_dereq_,module,exports){\n\t//turn 'quick' into 'quickly'\n\t'use strict';\n\t\n\tvar adj_to_adv = function adj_to_adv(str) {\n\t  var irregulars = {\n\t    'idle': 'idly',\n\t    'public': 'publicly',\n\t    'vague': 'vaguely',\n\t    'day': 'daily',\n\t    'icy': 'icily',\n\t    'single': 'singly',\n\t    'female': 'womanly',\n\t    'male': 'manly',\n\t    'simple': 'simply',\n\t    'whole': 'wholly',\n\t    'special': 'especially',\n\t    'straight': 'straight',\n\t    'wrong': 'wrong',\n\t    'fast': 'fast',\n\t    'hard': 'hard',\n\t    'late': 'late',\n\t    'early': 'early',\n\t    'well': 'well',\n\t    'good': 'well',\n\t    'little': 'little',\n\t    'long': 'long',\n\t    'low': 'low',\n\t    'best': 'best',\n\t    'latter': 'latter',\n\t    'bad': 'badly'\n\t  };\n\t\n\t  var dont = {\n\t    'foreign': 1,\n\t    'black': 1,\n\t    'modern': 1,\n\t    'next': 1,\n\t    'difficult': 1,\n\t    'degenerate': 1,\n\t    'young': 1,\n\t    'awake': 1,\n\t    'back': 1,\n\t    'blue': 1,\n\t    'brown': 1,\n\t    'orange': 1,\n\t    'complex': 1,\n\t    'cool': 1,\n\t    'dirty': 1,\n\t    'done': 1,\n\t    'empty': 1,\n\t    'fat': 1,\n\t    'fertile': 1,\n\t    'frozen': 1,\n\t    'gold': 1,\n\t    'grey': 1,\n\t    'gray': 1,\n\t    'green': 1,\n\t    'medium': 1,\n\t    'parallel': 1,\n\t    'outdoor': 1,\n\t    'unknown': 1,\n\t    'undersized': 1,\n\t    'used': 1,\n\t    'welcome': 1,\n\t    'yellow': 1,\n\t    'white': 1,\n\t    'fixed': 1,\n\t    'mixed': 1,\n\t    'super': 1,\n\t    'guilty': 1,\n\t    'tiny': 1,\n\t    'able': 1,\n\t    'unable': 1,\n\t    'same': 1,\n\t    'adult': 1\n\t  };\n\t\n\t  var transforms = [{\n\t    reg: /al$/i,\n\t    repl: 'ally'\n\t  }, {\n\t    reg: /ly$/i,\n\t    repl: 'ly'\n\t  }, {\n\t    reg: /(.{3})y$/i,\n\t    repl: '$1ily'\n\t  }, {\n\t    reg: /que$/i,\n\t    repl: 'quely'\n\t  }, {\n\t    reg: /ue$/i,\n\t    repl: 'uly'\n\t  }, {\n\t    reg: /ic$/i,\n\t    repl: 'ically'\n\t  }, {\n\t    reg: /ble$/i,\n\t    repl: 'bly'\n\t  }, {\n\t    reg: /l$/i,\n\t    repl: 'ly'\n\t  }];\n\t\n\t  var not_matches = [/airs$/, /ll$/, /ee.$/, /ile$/];\n\t\n\t  if (dont[str]) {\n\t    return null;\n\t  }\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t  if (str.length <= 3) {\n\t    return null;\n\t  }\n\t  for (var i = 0; i < not_matches.length; i++) {\n\t    if (str.match(not_matches[i])) {\n\t      return null;\n\t    }\n\t  }\n\t  for (var _i = 0; _i < transforms.length; _i++) {\n\t    if (str.match(transforms[_i].reg)) {\n\t      return str.replace(transforms[_i].reg, transforms[_i].repl);\n\t    }\n\t  }\n\t  return str + 'ly';\n\t};\n\t// console.log(adj_to_adv('direct'))\n\t\n\tmodule.exports = adj_to_adv;\n\t\n\t},{}],43:[function(_dereq_,module,exports){\n\t//turn 'quick' into 'quickly'\n\t'use strict';\n\t\n\tvar convertables = _dereq_('./convertable');\n\t\n\tvar irregulars = {\n\t  'grey': 'greyer',\n\t  'gray': 'grayer',\n\t  'green': 'greener',\n\t  'yellow': 'yellower',\n\t  'red': 'redder',\n\t  'good': 'better',\n\t  'well': 'better',\n\t  'bad': 'worse',\n\t  'sad': 'sadder',\n\t  'big': 'bigger'\n\t};\n\t\n\tvar dont = {\n\t  'overweight': 1,\n\t  'main': 1,\n\t  'nearby': 1,\n\t  'asleep': 1,\n\t  'weekly': 1,\n\t  'secret': 1,\n\t  'certain': 1\n\t};\n\t\n\tvar transforms = [{\n\t  reg: /y$/i,\n\t  repl: 'ier'\n\t}, {\n\t  reg: /([aeiou])t$/i,\n\t  repl: '$1tter'\n\t}, {\n\t  reg: /([aeou])de$/i,\n\t  repl: '$1der'\n\t}, {\n\t  reg: /nge$/i,\n\t  repl: 'nger'\n\t}];\n\t\n\tvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/];\n\t\n\tvar not_matches = [/ary$/, /ous$/];\n\t\n\tvar to_comparative = function to_comparative(str) {\n\t  if (dont.hasOwnProperty(str)) {\n\t    return null;\n\t  }\n\t\n\t  if (irregulars.hasOwnProperty(str)) {\n\t    return irregulars[str];\n\t  }\n\t\n\t  for (var i = 0; i < transforms.length; i++) {\n\t    if (str.match(transforms[i].reg)) {\n\t      return str.replace(transforms[i].reg, transforms[i].repl);\n\t    }\n\t  }\n\t\n\t  if (convertables[str] !== undefined) {\n\t    if (str.match(/e$/)) {\n\t      return str + 'r';\n\t    }\n\t    return str + 'er';\n\t  }\n\t\n\t  for (var _i = 0; _i < not_matches.length; _i++) {\n\t    if (str.match(not_matches[_i])) {\n\t      return 'more ' + str;\n\t    }\n\t  }\n\t\n\t  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n\t    if (str.match(matches[_i2])) {\n\t      return str + 'er';\n\t    }\n\t  }\n\t  return 'more ' + str;\n\t};\n\t\n\t// console.log(to_comparative('big'));\n\t\n\tmodule.exports = to_comparative;\n\t\n\t},{\"./convertable\":40}],44:[function(_dereq_,module,exports){\n\t'use strict';\n\t//convert 'cute' to 'cuteness'\n\t\n\tvar to_noun = function to_noun(w) {\n\t  var irregulars = {\n\t    'clean': 'cleanliness',\n\t    'naivety': 'naivety',\n\t    hurt: 'hurt'\n\t  };\n\t  if (!w) {\n\t    return '';\n\t  }\n\t  if (irregulars.hasOwnProperty(w)) {\n\t    return irregulars[w];\n\t  }\n\t  if (w.match(' ')) {\n\t    return w;\n\t  }\n\t  if (w.match(/w$/)) {\n\t    return w;\n\t  }\n\t  var transforms = [{\n\t    'reg': /y$/,\n\t    'repl': 'iness'\n\t  }, {\n\t    'reg': /le$/,\n\t    'repl': 'ility'\n\t  }, {\n\t    'reg': /ial$/,\n\t    'repl': 'y'\n\t  }, {\n\t    'reg': /al$/,\n\t    'repl': 'ality'\n\t  }, {\n\t    'reg': /ting$/,\n\t    'repl': 'ting'\n\t  }, {\n\t    'reg': /ring$/,\n\t    'repl': 'ring'\n\t  }, {\n\t    'reg': /bing$/,\n\t    'repl': 'bingness'\n\t  }, {\n\t    'reg': /sing$/,\n\t    'repl': 'se'\n\t  }, {\n\t    'reg': /ing$/,\n\t    'repl': 'ment'\n\t  }, {\n\t    'reg': /ess$/,\n\t    'repl': 'essness'\n\t  }, {\n\t    'reg': /ous$/,\n\t    'repl': 'ousness'\n\t  }];\n\t\n\t  for (var i = 0; i < transforms.length; i++) {\n\t    if (w.match(transforms[i].reg)) {\n\t      return w.replace(transforms[i].reg, transforms[i].repl);\n\t    }\n\t  }\n\t\n\t  if (w.match(/s$/)) {\n\t    return w;\n\t  }\n\t  return w + 'ness';\n\t};\n\t\n\t// console.log(to_noun(\"great\"))\n\t\n\tmodule.exports = to_noun;\n\t\n\t},{}],45:[function(_dereq_,module,exports){\n\t//turn 'quick' into 'quickest'\n\t'use strict';\n\t\n\tvar convertables = _dereq_('./convertable');\n\t\n\tvar irregulars = {\n\t  'nice': 'nicest',\n\t  'late': 'latest',\n\t  'hard': 'hardest',\n\t  'inner': 'innermost',\n\t  'outer': 'outermost',\n\t  'far': 'furthest',\n\t  'worse': 'worst',\n\t  'bad': 'worst',\n\t  'good': 'best',\n\t  'big': 'biggest'\n\t};\n\t\n\tvar dont = {\n\t  'overweight': 1,\n\t  'ready': 1\n\t};\n\t\n\tvar transforms = [{\n\t  'reg': /y$/i,\n\t  'repl': 'iest'\n\t}, {\n\t  'reg': /([aeiou])t$/i,\n\t  'repl': '$1ttest'\n\t}, {\n\t  'reg': /([aeou])de$/i,\n\t  'repl': '$1dest'\n\t}, {\n\t  'reg': /nge$/i,\n\t  'repl': 'ngest'\n\t}];\n\t\n\tvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/];\n\t\n\tvar not_matches = [/ary$/];\n\t\n\tvar generic_transformation = function generic_transformation(s) {\n\t  if (s.match(/e$/)) {\n\t    return s + 'st';\n\t  }\n\t  return s + 'est';\n\t};\n\t\n\tvar to_superlative = function to_superlative(str) {\n\t  if (irregulars.hasOwnProperty(str)) {\n\t    return irregulars[str];\n\t  }\n\t  for (var i = 0; i < transforms.length; i++) {\n\t    if (str.match(transforms[i].reg)) {\n\t      return str.replace(transforms[i].reg, transforms[i].repl);\n\t    }\n\t  }\n\t\n\t  if (convertables.hasOwnProperty(str)) {\n\t    return generic_transformation(str);\n\t  }\n\t\n\t  if (dont.hasOwnProperty(str)) {\n\t    return 'most ' + str;\n\t  }\n\t\n\t  for (var _i = 0; _i < not_matches.length; _i++) {\n\t    if (str.match(not_matches[_i])) {\n\t      return 'most ' + str;\n\t    }\n\t  }\n\t\n\t  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n\t    if (str.match(matches[_i2])) {\n\t      if (irregulars.hasOwnProperty(str)) {\n\t        return irregulars[str];\n\t      }\n\t      return generic_transformation(str);\n\t    }\n\t  }\n\t  return 'most ' + str;\n\t};\n\t\n\t// console.log(to_superlative(\"great\"))\n\t\n\tmodule.exports = to_superlative;\n\t\n\t},{\"./convertable\":40}],46:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar data = _dereq_('../../../../data');\n\t//turn an adjective like 'soft' into a verb like 'soften'\n\t\n\tvar irregulars = {\n\t  red: 'redden',\n\t  sad: 'sadden',\n\t  fat: 'fatten'\n\t};\n\t\n\tvar convertable = data.verbConverts.reduce(function (h, str) {\n\t  h[str] = true;\n\t  return h;\n\t}, {});\n\t\n\tvar toVerb = function toVerb(str) {\n\t  //don't do words like 'green' -> 'greenen'\n\t  if (!convertable[str]) {\n\t    return str;\n\t  }\n\t  //irregulars\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t  if (str.match(/e$/)) {\n\t    return str + 'n';\n\t  }\n\t  return str + 'en';\n\t};\n\tmodule.exports = toVerb;\n\t\n\t},{\"../../../../data\":6}],47:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar toAdjective = _dereq_('./toAdjective');\n\t\n\tvar Adverbs = function (_Text) {\n\t  _inherits(Adverbs, _Text);\n\t\n\t  function Adverbs() {\n\t    _classCallCheck(this, Adverbs);\n\t\n\t    return _possibleConstructorReturn(this, (Adverbs.__proto__ || Object.getPrototypeOf(Adverbs)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Adverbs, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.terms().list.map(function (ts) {\n\t        var t = ts.terms[0];\n\t        return {\n\t          adjectiveForm: toAdjective(t.normal),\n\t          normal: t.normal,\n\t          text: t.text\n\t        };\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Adverb+');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Adverbs;\n\t}(Text);\n\t\n\tmodule.exports = Adverbs;\n\t\n\t},{\"../../index\":25,\"./toAdjective\":48}],48:[function(_dereq_,module,exports){\n\t//turns 'quickly' into 'quick'\n\t'use strict';\n\t\n\tvar irregulars = {\n\t  'idly': 'idle',\n\t  'sporadically': 'sporadic',\n\t  'basically': 'basic',\n\t  'grammatically': 'grammatical',\n\t  'alphabetically': 'alphabetical',\n\t  'economically': 'economical',\n\t  'conically': 'conical',\n\t  'politically': 'political',\n\t  'vertically': 'vertical',\n\t  'practically': 'practical',\n\t  'theoretically': 'theoretical',\n\t  'critically': 'critical',\n\t  'fantastically': 'fantastic',\n\t  'mystically': 'mystical',\n\t  'pornographically': 'pornographic',\n\t  'fully': 'full',\n\t  'jolly': 'jolly',\n\t  'wholly': 'whole'\n\t};\n\t\n\tvar transforms = [{\n\t  'reg': /bly$/i,\n\t  'repl': 'ble'\n\t}, {\n\t  'reg': /gically$/i,\n\t  'repl': 'gical'\n\t}, {\n\t  'reg': /([rsdh])ically$/i,\n\t  'repl': '$1ical'\n\t}, {\n\t  'reg': /ically$/i,\n\t  'repl': 'ic'\n\t}, {\n\t  'reg': /uly$/i,\n\t  'repl': 'ue'\n\t}, {\n\t  'reg': /ily$/i,\n\t  'repl': 'y'\n\t}, {\n\t  'reg': /(.{3})ly$/i,\n\t  'repl': '$1'\n\t}];\n\t\n\tvar toAdjective = function toAdjective(str) {\n\t  if (irregulars.hasOwnProperty(str)) {\n\t    return irregulars[str];\n\t  }\n\t  for (var i = 0; i < transforms.length; i++) {\n\t    if (str.match(transforms[i].reg)) {\n\t      return str.replace(transforms[i].reg, transforms[i].repl);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t// console.log(toAdjective('quickly') === 'quick')\n\t// console.log(toAdjective('marvelously') === 'marvelous')\n\tmodule.exports = toAdjective;\n\t\n\t},{}],49:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Clauses = function (_Text) {\n\t  _inherits(Clauses, _Text);\n\t\n\t  function Clauses() {\n\t    _classCallCheck(this, Clauses);\n\t\n\t    return _possibleConstructorReturn(this, (Clauses.__proto__ || Object.getPrototypeOf(Clauses)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Clauses, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.splitAfter('#ClauseEnd');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Clauses;\n\t}(Text);\n\t\n\tmodule.exports = Clauses;\n\t\n\t},{\"../../index\":25}],50:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//the plumbing to turn two words into a contraction\n\t\n\tvar combine = function combine(a, b) {\n\t  b.whitespace.after = a.whitespace.after;\n\t  a.whitespace.after = '';\n\t  b.whitespace.before = '';\n\t  a.silent_term = a.text;\n\t  b.silent_term = b.text;\n\t  b.text = '';\n\t  a.tagAs('Contraction', 'new-contraction');\n\t  b.tagAs('Contraction', 'new-contraction');\n\t};\n\t\n\tvar contract = function contract(ts) {\n\t  if (ts.expanded === false || ts.match('#Contraction').found) {\n\t    return ts;\n\t  }\n\t  //he is -> he's\n\t  ts.match('(#Noun|#QuestionWord) is').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'s';\n\t    ls.contracted = true;\n\t  });\n\t  //he did -> he'd\n\t  ts.match('#PronNoun did').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'d';\n\t    ls.contracted = true;\n\t  });\n\t  //how do -> how'd\n\t  ts.match('#QuestionWord (did|do)').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'d';\n\t    ls.contracted = true;\n\t  });\n\t\n\t  //he would -> he'd\n\t  ts.match('#Noun (could|would)').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'d';\n\t    ls.contracted = true;\n\t  });\n\t  //they are -> they're\n\t  ts.match('(they|we|you) are').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'re';\n\t    ls.contracted = true;\n\t  });\n\t  //i am -> i'm\n\t  ts.match('i am').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'m';\n\t    ls.contracted = true;\n\t  });\n\t  //they will -> they'll\n\t  ts.match('(#Noun|#QuestionWord) will').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'ll';\n\t    ls.contracted = true;\n\t  });\n\t  //they have -> they've\n\t  ts.match('(they|we|you|i) have').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += '\\'ve';\n\t    ls.contracted = true;\n\t  });\n\t  //is not -> isn't\n\t  ts.match('(#Copula|#Modal|do) not').list.forEach(function (ls) {\n\t    combine(ls.terms[0], ls.terms[1]);\n\t    ls.terms[0].text += 'n\\'t';\n\t    ls.contracted = true;\n\t  });\n\t  return ts;\n\t};\n\t\n\tmodule.exports = contract;\n\t\n\t},{}],51:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar _contract = _dereq_('./contract');\n\t\n\tvar _expand = function _expand(ts) {\n\t  if (ts.contracted === false) {\n\t    return ts;\n\t  }\n\t  ts.terms.forEach(function (t) {\n\t    if (t.silent_term) {\n\t      //this term also needs a space now too\n\t      if (!t.text) {\n\t        t.whitespace.before = ' ';\n\t      }\n\t      t._text = t.silent_term;\n\t      t.normalize();\n\t      t.silent_term = null;\n\t      t.unTag('Contraction', 'expanded');\n\t    }\n\t  });\n\t  return ts;\n\t};\n\t\n\tvar Contraction = function (_Terms) {\n\t  _inherits(Contraction, _Terms);\n\t\n\t  function Contraction() {\n\t    _classCallCheck(this, Contraction);\n\t\n\t    return _possibleConstructorReturn(this, (Contraction.__proto__ || Object.getPrototypeOf(Contraction)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Contraction, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      var expanded = _expand(this.clone());\n\t      var contracted = _contract(this.clone());\n\t      return {\n\t        text: this.out('text'),\n\t        normal: this.out('normal'),\n\t        expanded: {\n\t          normal: expanded.out('normal'),\n\t          text: expanded.out('text')\n\t        },\n\t        contracted: {\n\t          normal: contracted.out('normal'),\n\t          text: contracted.out('text')\n\t        },\n\t        isContracted: !!this.contracted\n\t      };\n\t    }\n\t  }, {\n\t    key: 'expand',\n\t    value: function expand() {\n\t      return _expand(this);\n\t    }\n\t  }, {\n\t    key: 'contract',\n\t    value: function contract() {\n\t      return _contract(this);\n\t    }\n\t  }]);\n\t\n\t  return Contraction;\n\t}(Terms);\n\t\n\tmodule.exports = Contraction;\n\t\n\t},{\"../../paths\":37,\"./contract\":50}],52:[function(_dereq_,module,exports){\n\t'use strict';\n\t//find contractable, expanded-contractions\n\t\n\tvar find = function find(r) {\n\t  var remain = r.not('#Contraction');\n\t  var m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)');\n\t  m.concat(remain.match('(they|we|you|i) have'));\n\t  m.concat(remain.match('i am'));\n\t  m.concat(remain.match('(#Copula|#Modal|do) not'));\n\t  m.list.forEach(function (ts) {\n\t    ts.expanded = true;\n\t  });\n\t  return m;\n\t};\n\tmodule.exports = find;\n\t\n\t},{}],53:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Contraction = _dereq_('./contraction');\n\tvar findPossible = _dereq_('./findPossible');\n\t\n\tvar Contractions = function (_Text) {\n\t  _inherits(Contractions, _Text);\n\t\n\t  function Contractions() {\n\t    _classCallCheck(this, Contractions);\n\t\n\t    return _possibleConstructorReturn(this, (Contractions.__proto__ || Object.getPrototypeOf(Contractions)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Contractions, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'contract',\n\t    value: function contract() {\n\t      this.list.forEach(function (ts) {\n\t        return ts.contract();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'expand',\n\t    value: function expand() {\n\t      this.list.forEach(function (ts) {\n\t        return ts.expand();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'contracted',\n\t    value: function contracted() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return ts.contracted;\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'expanded',\n\t    value: function expanded() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return !ts.contracted;\n\t      });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      //find currently-contracted\n\t      var found = r.match('#Contraction #Contraction #Contraction?');\n\t      found.list = found.list.map(function (ts) {\n\t        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t        c.contracted = true;\n\t        return c;\n\t      });\n\t      //find currently-expanded\n\t      var expanded = findPossible(r);\n\t      expanded.list.forEach(function (ts) {\n\t        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t        c.contracted = false;\n\t        found.list.push(c);\n\t      });\n\t      found.sort('chronological');\n\t      //get nth element\n\t      if (typeof n === 'number') {\n\t        found = found.get(n);\n\t      }\n\t      return found;\n\t    }\n\t  }]);\n\t\n\t  return Contractions;\n\t}(Text);\n\t\n\tmodule.exports = Contractions;\n\t\n\t},{\"../../index\":25,\"./contraction\":51,\"./findPossible\":52}],54:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\t// const parsePunt = require('./parsePunt');\n\t// const parseSection = require('./parseSection');\n\t// const parseRelative = require('./parseRelative');\n\tvar parseDate = _dereq_('./parseDate');\n\t\n\tvar Date = function (_Terms) {\n\t  _inherits(Date, _Terms);\n\t\n\t  function Date(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Date);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Date.__proto__ || Object.getPrototypeOf(Date)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.month = _this.match('#Month');\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Date, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return {\n\t        text: this.out('text'),\n\t        normal: this.out('normal'),\n\t        date: parseDate(this)\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Date;\n\t}(Terms);\n\t\n\tmodule.exports = Date;\n\t\n\t},{\"../../paths\":37,\"./parseDate\":58}],55:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Date = _dereq_('./date');\n\tvar weekdays = _dereq_('./weekday');\n\tvar months = _dereq_('./month');\n\t\n\tvar Dates = function (_Text) {\n\t  _inherits(Dates, _Text);\n\t\n\t  function Dates() {\n\t    _classCallCheck(this, Dates);\n\t\n\t    return _possibleConstructorReturn(this, (Dates.__proto__ || Object.getPrototypeOf(Dates)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Dates, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toShortForm',\n\t    value: function toShortForm() {\n\t      this.match('#Month').terms().list.forEach(function (ts) {\n\t        var t = ts.terms[0];\n\t        months.toShortForm(t);\n\t      });\n\t      this.match('#WeekDay').terms().list.forEach(function (ts) {\n\t        var t = ts.terms[0];\n\t        weekdays.toShortForm(t);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toLongForm',\n\t    value: function toLongForm() {\n\t      this.match('#Month').terms().list.forEach(function (ts) {\n\t        var t = ts.terms[0];\n\t        months.toLongForm(t);\n\t      });\n\t      this.match('#WeekDay').terms().list.forEach(function (ts) {\n\t        var t = ts.terms[0];\n\t        weekdays.toLongForm(t);\n\t      });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      var dates = r.match('#Date+');\n\t      if (typeof n === 'number') {\n\t        dates = dates.get(n);\n\t      }\n\t      dates.list = dates.list.map(function (ts) {\n\t        return new Date(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return dates;\n\t    }\n\t  }]);\n\t\n\t  return Dates;\n\t}(Text);\n\t\n\tmodule.exports = Dates;\n\t\n\t},{\"../../index\":25,\"./date\":54,\"./month\":57,\"./weekday\":61}],56:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//follow the javascript scheme\n\t//january is 0\n\texports.longMonths = {\n\t  'january': 0,\n\t  'february': 1,\n\t  'march': 2,\n\t  'april': 3,\n\t  'may': 4,\n\t  'june': 5,\n\t  'july': 6,\n\t  'august': 7,\n\t  'september': 8,\n\t  'october': 9,\n\t  'november': 10,\n\t  'december': 11\n\t};\n\texports.shortMonths = {\n\t  'jan': 0,\n\t  'feb': 1,\n\t  'febr': 1,\n\t  'mar': 2,\n\t  'apr': 3,\n\t  'may': 4,\n\t  'jun': 5,\n\t  'jul': 6,\n\t  'aug': 7,\n\t  'sep': 8,\n\t  'sept': 8,\n\t  'oct': 9,\n\t  'nov': 10,\n\t  'dec': 11\n\t};\n\t\n\t},{}],57:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar data = _dereq_('./data');\n\tvar shortMonths = data.shortMonths;\n\tvar longMonths = data.longMonths;\n\t\n\tmodule.exports = {\n\t  index: function index(t) {\n\t    if (t.tag.Month) {\n\t      if (longMonths[t.normal] !== undefined) {\n\t        return longMonths[t.normal];\n\t      }\n\t      if (shortMonths[t.normal] !== undefined) {\n\t        return shortMonths[t.normal];\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t  toShortForm: function toShortForm(t) {\n\t    if (t.tag.Month !== undefined) {\n\t      if (longMonths[t.normal] !== undefined) {\n\t        var shorten = Object.keys(shortMonths);\n\t        t.text = shorten[longMonths[t.normal]];\n\t      }\n\t    }\n\t    t.dirty = true;\n\t    return t;\n\t  },\n\t  toLongForm: function toLongForm(t) {\n\t    if (t.tag.Month !== undefined) {\n\t      if (shortMonths[t.normal] !== undefined) {\n\t        var longer = Object.keys(longMonths);\n\t        t.text = longer[shortMonths[t.normal]];\n\t      }\n\t    }\n\t    t.dirty = true;\n\t    return t;\n\t  }\n\t\n\t};\n\t\n\t},{\"./data\":56}],58:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar parseTime = _dereq_('./parseTime');\n\tvar weekdays = _dereq_('./weekday');\n\tvar months = _dereq_('./month');\n\t//a hugely-conservative and incomplete first-pass for parsing written-dates\n\t\n\t//validate a day-of-month\n\tvar isDate = function isDate(num) {\n\t  if (num && num < 31 && num > 0) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//please change this in one thousand years\n\tvar isYear = function isYear(num) {\n\t  if (num && num > 1000 && num < 3000) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//\n\tvar parseDate = function parseDate(r) {\n\t  var result = {\n\t    month: null,\n\t    date: null,\n\t    weekday: null,\n\t    year: null,\n\t    named: null,\n\t    time: null\n\t  };\n\t  var m = r.match('(#Holiday|today|tomorrow|yesterday)');\n\t  if (m.found) {\n\t    result.named = m.out('normal');\n\t  }\n\t  m = r.match('#Month');\n\t  if (m.found) {\n\t    result.month = months.index(m.list[0].terms[0]);\n\t  }\n\t  m = r.match('#WeekDay');\n\t  if (m.found) {\n\t    result.weekday = weekdays.index(m.list[0].terms[0]);\n\t  }\n\t  m = r.match('#Time');\n\t  if (m.found) {\n\t    result.time = parseTime(r);\n\t    r.not('#Time'); //unsure\n\t  }\n\t  //january fifth 1992\n\t  m = r.match('#Month #Value #Year');\n\t  if (m.found) {\n\t    var numbers = m.values().numbers();\n\t    if (isDate(numbers[0])) {\n\t      result.date = numbers[0];\n\t    }\n\t    var year = parseInt(r.match('#Year').out('normal'), 10);\n\t    if (isYear(year)) {\n\t      result.year = year;\n\t    }\n\t  }\n\t  if (!m.found) {\n\t    //january fifth,  january 1992\n\t    m = r.match('#Month #Value');\n\t    if (m.found) {\n\t      var _numbers = m.values().numbers();\n\t      var num = _numbers[0];\n\t      if (isDate(num)) {\n\t        result.date = num;\n\t      }\n\t    }\n\t    //january 1992\n\t    m = r.match('#Month #Year');\n\t    if (m.found) {\n\t      var _num = parseInt(r.match('#Year').out('normal'), 10);\n\t      if (isYear(_num)) {\n\t        result.year = _num;\n\t      }\n\t    }\n\t  }\n\t\n\t  //fifth of january\n\t  m = r.match('#Value of #Month');\n\t  if (m.found) {\n\t    var _num2 = m.values().numbers()[0];\n\t    if (isDate(_num2)) {\n\t      result.date = _num2;\n\t    }\n\t  }\n\t  return result;\n\t};\n\tmodule.exports = parseDate;\n\t\n\t},{\"./month\":57,\"./parseTime\":59,\"./weekday\":61}],59:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar isHour = function isHour(num) {\n\t  if (num && num > 0 && num < 25) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\tvar isMinute = function isMinute(num) {\n\t  if (num && num > 0 && num < 60) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar parseTime = function parseTime(r) {\n\t  var result = {\n\t    logic: null,\n\t    hour: null,\n\t    minute: null,\n\t    second: null,\n\t    timezone: null\n\t  };\n\t\n\t  var logic = r.match('(by|before|for|during|at|until|after) #Time').firstTerm();\n\t  if (logic.found) {\n\t    result.logic = logic.out('normal');\n\t  }\n\t\n\t  var time = r.match('#Time');\n\t  time.terms().list.forEach(function (ts) {\n\t    var t = ts.terms[0];\n\t    //3pm\n\t    var m = t.text.match(/([12]?[0-9]) ?(am|pm)/i);\n\t    if (m) {\n\t      result.hour = parseInt(m[1], 10);\n\t      if (m[2] === 'pm') {\n\t        result.hour += 12;\n\t      }\n\t      if (!isHour(result.hour)) {\n\t        result.hour = null;\n\t      }\n\t    }\n\t    //3:15\n\t    m = t.text.match(/([12]?[0-9]):([0-9][0-9]) ?(am|pm)?/i);\n\t    if (m) {\n\t      result.hour = parseInt(m[1], 10);\n\t      result.minute = parseInt(m[2], 10);\n\t      if (!isMinute(result.minute)) {\n\t        result.minute = null;\n\t      }\n\t      if (m[3] === 'pm') {\n\t        result.hour += 12;\n\t      }\n\t      if (!isHour(result.hour)) {\n\t        result.hour = null;\n\t      }\n\t    }\n\t  });\n\t  return result;\n\t};\n\tmodule.exports = parseTime;\n\t\n\t},{}],60:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//follow the javascript scheme\n\t//sunday is 0\n\texports.longDays = {\n\t  'sunday': 0,\n\t  'monday': 1,\n\t  'tuesday': 2,\n\t  'wednesday': 3,\n\t  'thursday': 4,\n\t  'friday': 5,\n\t  'saturday': 6\n\t};\n\texports.shortDays = {\n\t  'sun': 0,\n\t  'mon': 1,\n\t  'tues': 2,\n\t  'wed': 3,\n\t  'thurs': 4,\n\t  'fri': 5,\n\t  'sat': 6\n\t};\n\t\n\t},{}],61:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar data = _dereq_('./data');\n\tvar shortDays = data.shortDays;\n\tvar longDays = data.longDays;\n\t\n\tmodule.exports = {\n\t  index: function index(t) {\n\t    if (t.tag.WeekDay) {\n\t      if (longDays[t.normal] !== undefined) {\n\t        return longDays[t.normal];\n\t      }\n\t      if (shortDays[t.normal] !== undefined) {\n\t        return shortDays[t.normal];\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t  toShortForm: function toShortForm(t) {\n\t    if (t.tag.WeekDay) {\n\t      if (longDays[t.normal] !== undefined) {\n\t        var shorten = Object.keys(shortDays);\n\t        t.text = shorten[longDays[t.normal]];\n\t      }\n\t    }\n\t    return t;\n\t  },\n\t  toLongForm: function toLongForm(t) {\n\t    if (t.tag.WeekDay) {\n\t      if (shortDays[t.normal] !== undefined) {\n\t        var longer = Object.keys(longDays);\n\t        t.text = longer[shortDays[t.normal]];\n\t      }\n\t    }\n\t    return t;\n\t  }\n\t};\n\t\n\t},{\"./data\":60}],62:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar HashTags = function (_Text) {\n\t  _inherits(HashTags, _Text);\n\t\n\t  function HashTags() {\n\t    _classCallCheck(this, HashTags);\n\t\n\t    return _possibleConstructorReturn(this, (HashTags.__proto__ || Object.getPrototypeOf(HashTags)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(HashTags, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#HashTag').terms();\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return HashTags;\n\t}(Text);\n\t\n\tmodule.exports = HashTags;\n\t\n\t},{\"../../index\":25}],63:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Ngrams = _dereq_('./index');\n\tvar getGrams = _dereq_('./getGrams');\n\t\n\t//like an n-gram, but only the endings of matches\n\t\n\tvar EndGrams = function (_Ngrams) {\n\t  _inherits(EndGrams, _Ngrams);\n\t\n\t  function EndGrams() {\n\t    _classCallCheck(this, EndGrams);\n\t\n\t    return _possibleConstructorReturn(this, (EndGrams.__proto__ || Object.getPrototypeOf(EndGrams)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(EndGrams, null, [{\n\t    key: 'find',\n\t    value: function find(r, n, size) {\n\t      var opts = {\n\t        size: [1, 2, 3, 4],\n\t        edge: 'end'\n\t      };\n\t      //only look for bigrams, for example\n\t      if (size) {\n\t        opts.size = [size];\n\t      }\n\t      //fetch them\n\t      var arr = getGrams(r, opts);\n\t      r = new EndGrams(arr);\n\t      //default sort\n\t      r.sort();\n\t      //grab top one, or something\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return EndGrams;\n\t}(Ngrams);\n\t\n\tmodule.exports = EndGrams;\n\t\n\t},{\"./getGrams\":64,\"./index\":66}],64:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar Gram = _dereq_('./gram');\n\t\n\t//do all grams of one size, on one termList\n\tvar getGrams = function getGrams(fts, n) {\n\t  var terms = fts.terms;\n\t  if (terms.length < n) {\n\t    return [];\n\t  }\n\t  var arr = [];\n\t  for (var i = 0; i < terms.length - n + 1; i++) {\n\t    var gram = new Gram(terms.slice(i, i + n));\n\t    arr.push(gram);\n\t  }\n\t  return arr;\n\t};\n\t\n\t//left-sided grams\n\tvar startGram = function startGram(fts, n) {\n\t  var terms = fts.terms;\n\t  if (terms.length < n) {\n\t    return [];\n\t  }\n\t  var arr = [new Gram(terms.slice(0, n))];\n\t  return arr;\n\t};\n\t\n\t//right-sided grams\n\tvar endGram = function endGram(fts, n) {\n\t  var terms = fts.terms;\n\t  if (terms.length < n) {\n\t    return [];\n\t  }\n\t  var arr = [new Gram(terms.slice(terms.length - n, terms.length))];\n\t  return arr;\n\t};\n\t\n\t//ngrams are consecutive terms of a specific size\n\tvar buildGrams = function buildGrams(r, options) {\n\t  options = options || {};\n\t  options.size = options.size || [1, 2, 3];\n\t  if (typeof options.size === 'number') {\n\t    options.size = [options.size];\n\t  }\n\t  var obj = {};\n\t  //collect and count all grams\n\t  options.size.forEach(function (size) {\n\t    r.list.forEach(function (ts) {\n\t      var grams = [];\n\t      if (options.edge === 'start') {\n\t        grams = startGram(ts, size);\n\t      } else if (options.edge === 'end') {\n\t        grams = endGram(ts, size);\n\t      } else {\n\t        grams = getGrams(ts, size);\n\t      }\n\t      grams.forEach(function (g) {\n\t        if (obj[g.key]) {\n\t          obj[g.key].inc();\n\t        } else {\n\t          obj[g.key] = g;\n\t        }\n\t      });\n\t    });\n\t  });\n\t\n\t  //flatten to an array\n\t  var arr = Object.keys(obj).map(function (k) {\n\t    return obj[k];\n\t  });\n\t  return arr;\n\t};\n\t\n\tmodule.exports = buildGrams;\n\t\n\t},{\"./gram\":65}],65:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\t\n\t//this is one-or-more terms together, sorted by frequency\n\t\n\tvar Gram = function (_Terms) {\n\t  _inherits(Gram, _Terms);\n\t\n\t  function Gram(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Gram);\n\t\n\t    //string to sort/uniq by\n\t    var _this = _possibleConstructorReturn(this, (Gram.__proto__ || Object.getPrototypeOf(Gram)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.key = _this.out('normal');\n\t    //bigram/trigram/etc\n\t    _this.size = arr.length;\n\t    //number of occurances\n\t    _this.count = 1;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Gram, [{\n\t    key: 'inc',\n\t    value: function inc() {\n\t      this.count += 1;\n\t    }\n\t  }]);\n\t\n\t  return Gram;\n\t}(Terms);\n\t\n\tmodule.exports = Gram;\n\t\n\t},{\"../../paths\":37}],66:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar getGrams = _dereq_('./getGrams');\n\t\n\tvar Ngrams = function (_Text) {\n\t  _inherits(Ngrams, _Text);\n\t\n\t  function Ngrams() {\n\t    _classCallCheck(this, Ngrams);\n\t\n\t    return _possibleConstructorReturn(this, (Ngrams.__proto__ || Object.getPrototypeOf(Ngrams)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Ngrams, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return {\n\t          normal: ts.out('normal'),\n\t          count: ts.count,\n\t          size: ts.size\n\t        };\n\t      });\n\t    }\n\t  }, {\n\t    key: 'unigrams',\n\t    value: function unigrams() {\n\t      this.list = this.list.filter(function (g) {\n\t        return g.size === 1;\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'bigrams',\n\t    value: function bigrams() {\n\t      this.list = this.list.filter(function (g) {\n\t        return g.size === 2;\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'trigrams',\n\t    value: function trigrams() {\n\t      this.list = this.list.filter(function (g) {\n\t        return g.size === 3;\n\t      });\n\t      return this;\n\t    }\n\t\n\t    //default sort the ngrams\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort() {\n\t      this.list = this.list.sort(function (a, b) {\n\t        if (a.count > b.count) {\n\t          return -1;\n\t        }\n\t        //(tie-braker)\n\t        if (a.count === b.count && (a.size > b.size || a.key.length > b.key.length)) {\n\t          return -1;\n\t        }\n\t        return 1;\n\t      });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n, size) {\n\t      var opts = {\n\t        size: [1, 2, 3, 4]\n\t      };\n\t      //only look for bigrams, for example\n\t      if (size) {\n\t        opts.size = [size];\n\t      }\n\t      //fetch them\n\t      var arr = getGrams(r, opts);\n\t      r = new Ngrams(arr);\n\t      //default sort\n\t      r.sort();\n\t      //grab top one, or something\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Ngrams;\n\t}(Text);\n\t\n\tmodule.exports = Ngrams;\n\t\n\t},{\"../../index\":25,\"./getGrams\":64}],67:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Ngrams = _dereq_('./index');\n\tvar getGrams = _dereq_('./getGrams');\n\t\n\t//like an n-gram, but only the startings of matches\n\t\n\tvar StartGrams = function (_Ngrams) {\n\t  _inherits(StartGrams, _Ngrams);\n\t\n\t  function StartGrams() {\n\t    _classCallCheck(this, StartGrams);\n\t\n\t    return _possibleConstructorReturn(this, (StartGrams.__proto__ || Object.getPrototypeOf(StartGrams)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StartGrams, null, [{\n\t    key: 'find',\n\t    value: function find(r, n, size) {\n\t      var opts = {\n\t        size: [1, 2, 3, 4],\n\t        edge: 'start'\n\t      };\n\t      //only look for bigrams, for example\n\t      if (size) {\n\t        opts.size = [size];\n\t      }\n\t      //fetch them\n\t      var arr = getGrams(r, opts);\n\t      r = new StartGrams(arr);\n\t      //default sort\n\t      r.sort();\n\t      //grab top one, or something\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return StartGrams;\n\t}(Ngrams);\n\t\n\tmodule.exports = StartGrams;\n\t\n\t},{\"./getGrams\":64,\"./index\":66}],68:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar uncountables = _dereq_('../../../tries').utils.uncountable;\n\t\n\t//certain words can't be plural, like 'peace'\n\tvar hasPlural = function hasPlural(t) {\n\t  //end quick\n\t  if (!t.tag.Noun) {\n\t    return false;\n\t  }\n\t  if (t.tag.Plural) {\n\t    return true;\n\t  }\n\t  //is it potentially plural?\n\t  var noPlural = ['Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n\t  for (var i = 0; i < noPlural.length; i++) {\n\t    if (t.tag[noPlural[i]]) {\n\t      return false;\n\t    }\n\t  }\n\t  //terms known as un-inflectable, like 'peace'\n\t  if (uncountables.has(t.normal)) {\n\t    return false;\n\t  }\n\t  return true;\n\t};\n\t\n\tmodule.exports = hasPlural;\n\t\n\t},{\"../../../tries\":235}],69:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Noun = _dereq_('./noun');\n\t\n\tvar Nouns = function (_Text) {\n\t  _inherits(Nouns, _Text);\n\t\n\t  function Nouns() {\n\t    _classCallCheck(this, Nouns);\n\t\n\t    return _possibleConstructorReturn(this, (Nouns.__proto__ || Object.getPrototypeOf(Nouns)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Nouns, [{\n\t    key: 'isPlural',\n\t    value: function isPlural() {\n\t      return this.list.map(function (ts) {\n\t        return ts.isPlural();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'hasPlural',\n\t    value: function hasPlural() {\n\t      return this.list.map(function (ts) {\n\t        return ts.hasPlural();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toPlural',\n\t    value: function toPlural() {\n\t      this.list.forEach(function (ts) {\n\t        return ts.toPlural();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toSingular',\n\t    value: function toSingular() {\n\t      this.list.forEach(function (ts) {\n\t        return ts.toSingular();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.clauses();\n\t      r = r.match('#Noun+');\n\t      r = r.not('#Pronoun');\n\t      r = r.not('(#Month|#WeekDay)'); //allow Durations, Holidays\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Noun(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Nouns;\n\t}(Text);\n\t\n\tmodule.exports = Nouns;\n\t\n\t},{\"../../index\":25,\"./noun\":77}],70:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar irregulars = _dereq_('../../../data').irregular_plurals;\n\tvar rules = _dereq_('./methods/data/indicators');\n\t\n\tvar knownPlural = {\n\t  i: false,\n\t  he: false,\n\t  she: false,\n\t  we: true,\n\t  they: true\n\t};\n\t\n\t//is it potentially plural?\n\tvar noPlural = ['Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n\t//first, try to guess based on existing tags\n\tvar couldEvenBePlural = function couldEvenBePlural(t) {\n\t  for (var i = 0; i < noPlural.length; i++) {\n\t    if (t.tag[noPlural[i]]) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\tvar isPlural = function isPlural(t) {\n\t  var str = t.normal;\n\t\n\t  //whitelist a few easy ones\n\t  if (knownPlural[str] !== undefined) {\n\t    return knownPlural[str];\n\t  }\n\t  //inspect the existing tags to see if a plural is valid\n\t  if (!couldEvenBePlural(t)) {\n\t    return false;\n\t  }\n\t  //handle 'mayors of chicago'\n\t  var preposition = str.match(/([a-z]*) (of|in|by|for) [a-z]/);\n\t  if (preposition && preposition[1]) {\n\t    str = preposition[1];\n\t  }\n\t  // if it's a known irregular case\n\t  if (irregulars.toSingle[str]) {\n\t    return true;\n\t  }\n\t  if (irregulars.toPlural[str]) {\n\t    return false;\n\t  }\n\t  //check the suffix-type rules for indications\n\t  for (var i = 0; i < rules.plural_indicators.length; i++) {\n\t    if (str.match(rules.plural_indicators[i])) {\n\t      return true;\n\t    }\n\t  }\n\t  for (var _i = 0; _i < rules.singular_indicators.length; _i++) {\n\t    if (str.match(rules.singular_indicators[_i])) {\n\t      return false;\n\t    }\n\t  }\n\t  // a fallback 'looks check plural' rule..\n\t  if (str.match(/s$/) && !str.match(/ss$/) && str.length > 3) {\n\t    //needs some lovin'\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t// console.log(is_plural('octopus') === false)\n\t// console.log(is_plural('octopi') === true)\n\t// console.log(is_plural('eyebrow') === false)\n\t// console.log(is_plural('eyebrows') === true)\n\t// console.log(is_plural('child') === false)\n\t// console.log(is_plural('children') === true)\n\t// console.log(is_plural('days') === true)\n\t\n\tmodule.exports = isPlural;\n\t\n\t},{\"../../../data\":6,\"./methods/data/indicators\":72}],71:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//chooses an indefinite aricle 'a/an' for a word\n\t\n\tvar irregulars = {\n\t  'hour': 'an',\n\t  'heir': 'an',\n\t  'heirloom': 'an',\n\t  'honest': 'an',\n\t  'honour': 'an',\n\t  'honor': 'an',\n\t  'uber': 'an' //german u\n\t};\n\t//pronounced letters of acronyms that get a 'an'\n\tvar an_acronyms = {\n\t  a: true,\n\t  e: true,\n\t  f: true,\n\t  h: true,\n\t  i: true,\n\t  l: true,\n\t  m: true,\n\t  n: true,\n\t  o: true,\n\t  r: true,\n\t  s: true,\n\t  x: true\n\t};\n\t//'a' regexes\n\tvar a_regexs = [/^onc?e/i, //'wu' sound of 'o'\n\t/^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n\t/^eul/i];\n\t\n\tvar makeArticle = function makeArticle(t) {\n\t  var str = t.normal;\n\t\n\t  //explicit irregular forms\n\t  if (irregulars.hasOwnProperty(str)) {\n\t    return irregulars[str];\n\t  }\n\t  //spelled-out acronyms\n\t  var firstLetter = str.substr(0, 1);\n\t  if (t.isAcronym() && an_acronyms.hasOwnProperty(firstLetter)) {\n\t    return 'an';\n\t  }\n\t  //'a' regexes\n\t  for (var i = 0; i < a_regexs.length; i++) {\n\t    if (str.match(a_regexs[i])) {\n\t      return 'a';\n\t    }\n\t  }\n\t  //basic vowel-startings\n\t  if (str.match(/^[aeiou]/i)) {\n\t    return 'an';\n\t  }\n\t  return 'a';\n\t};\n\t\n\tmodule.exports = makeArticle;\n\t\n\t},{}],72:[function(_dereq_,module,exports){\n\t'use strict';\n\t//similar to plural/singularize rules, but not the same\n\t\n\tvar plural_indicators = [/(^v)ies$/i, /ises$/i, /ives$/i, /(antenn|formul|nebul|vertebr|vit)ae$/i, /(octop|vir|radi|nucle|fung|cact|stimul)i$/i, /(buffal|tomat|tornad)oes$/i, /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i, /(vert|ind|cort)ices$/i, /(matr|append)ices$/i, /(x|ch|ss|sh|s|z|o)es$/i, /men$/i, /news$/i, /.tia$/i, /(^f)ves$/i, /(lr)ves$/i, /(^aeiouy|qu)ies$/i, /(m|l)ice$/i, /(cris|ax|test)es$/i, /(alias|status)es$/i, /ics$/i];\n\t\n\t//similar to plural/singularize rules, but not the same\n\tvar singular_indicators = [/(ax|test)is$/i, /(octop|vir|radi|nucle|fung|cact|stimul)us$/i, /(octop|vir)i$/i, /(rl)f$/i, /(alias|status)$/i, /(bu)s$/i, /(al|ad|at|er|et|ed|ad)o$/i, /(ti)um$/i, /(ti)a$/i, /sis$/i, /(?:(^f)fe|(lr)f)$/i, /hive$/i, /(^aeiouy|qu)y$/i, /(x|ch|ss|sh|z)$/i, /(matr|vert|ind|cort)(ix|ex)$/i, /(m|l)ouse$/i, /(m|l)ice$/i, /(antenn|formul|nebul|vertebr|vit)a$/i, /.sis$/i, /^(?!talis|.*hu)(.*)man$/i];\n\tmodule.exports = {\n\t  singular_indicators: singular_indicators,\n\t  plural_indicators: plural_indicators\n\t};\n\t\n\t},{}],73:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//patterns for turning 'bus' to 'buses'\n\tmodule.exports = [[/(ax|test)is$/i, '$1es'], [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'], [/(octop|vir)i$/i, '$1i'], [/(kn|l|w)ife$/i, '$1ives'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'], [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'], [/(alias|status)$/i, '$1es'], [/(bu)s$/i, '$1ses'], [/(al|ad|at|er|et|ed|ad)o$/i, '$1oes'], [/([ti])um$/i, '$1a'], [/([ti])a$/i, '$1a'], [/sis$/i, 'ses'], [/(hive)$/i, '$1s'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/(x|ch|ss|sh|s|z)$/i, '$1es'], [/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/([m|l])ouse$/i, '$1ice'], [/([m|l])ice$/i, '$1ice'], [/^(ox)$/i, '$1en'], [/^(oxen)$/i, '$1'], [/(quiz)$/i, '$1zes'], [/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/(sis)$/i, 'ses'], [/^(?!talis|.*hu)(.*)man$/i, '$1men'], [/(.*)/i, '$1s']].map(function (a) {\n\t  return {\n\t    reg: a[0],\n\t    repl: a[1]\n\t  };\n\t});\n\t\n\t},{}],74:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//patterns for turning 'dwarves' to 'dwarf'\n\tmodule.exports = [[/([^v])ies$/i, '$1y'], [/ises$/i, 'isis'], [/(kn|[^o]l|w)ives$/i, '$1ife'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'], [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'], [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'], [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'], [/(buffal|tomat|tornad)(oes)$/i, '$1o'], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis'], [/(vert|ind|cort)(ices)$/i, '$1ex'], [/(matr|append)(ices)$/i, '$1ix'], [/(x|ch|ss|sh|s|z|o)es$/i, '$1'], [/men$/i, 'man'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/([m|l])ice$/i, '$1ouse'], [/(cris|ax|test)es$/i, '$1is'], [/(alias|status)es$/i, '$1'], [/(ss)$/i, '$1'], [/(ics)$/i, '$1'], [/s$/i, '']].map(function (a) {\n\t  return {\n\t    reg: a[0],\n\t    repl: a[1]\n\t  };\n\t});\n\t\n\t},{}],75:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar irregulars = _dereq_('../../../../data').irregular_plurals.toPlural;\n\tvar pluralRules = _dereq_('./data/pluralRules');\n\t\n\t//turn 'shoe' into 'shoes'\n\tvar pluralize = function pluralize(str) {\n\t  //irregular\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t\n\t  //inflect first word of preposition-phrase\n\t  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n\t    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n\t    if (first) {\n\t      var better_first = pluralize(first); //recursive\n\t      return better_first + str.replace(first, '');\n\t    }\n\t  }\n\t\n\t  //regular rule-based inflector\n\t  for (var i = 0; i < pluralRules.length; i++) {\n\t    if (str.match(pluralRules[i].reg)) {\n\t      return str.replace(pluralRules[i].reg, pluralRules[i].repl);\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = pluralize;\n\t\n\t},{\"../../../../data\":6,\"./data/pluralRules\":73}],76:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar irregulars = _dereq_('../../../../data').irregular_plurals.toSingle;\n\tvar singleRules = _dereq_('./data/singleRules');\n\t\n\t//turn 'shoes' into 'shoe'\n\tvar toSingle = function toSingle(str) {\n\t  //irregular\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t  //inflect first word of preposition-phrase\n\t  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n\t    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n\t    if (first) {\n\t      var better_first = toSingle(first); //recursive\n\t      return better_first + str.replace(first, '');\n\t    }\n\t  }\n\t\n\t  //regular rule-based inflector\n\t  for (var i = 0; i < singleRules.length; i++) {\n\t    if (str.match(singleRules[i].reg)) {\n\t      return str.replace(singleRules[i].reg, singleRules[i].repl);\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\t// console.log(toSingle('gases') === 'gas')\n\tmodule.exports = toSingle;\n\t// console.log(toSingle('days'))\n\t\n\t},{\"../../../../data\":6,\"./data/singleRules\":74}],77:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar _hasPlural = _dereq_('./hasPlural');\n\tvar _isPlural = _dereq_('./isPlural');\n\tvar makeArticle = _dereq_('./makeArticle');\n\tvar pluralize = _dereq_('./methods/pluralize');\n\tvar singularize = _dereq_('./methods/singularize');\n\t\n\tvar Noun = function (_Terms) {\n\t  _inherits(Noun, _Terms);\n\t\n\t  function Noun(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Noun);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Noun.__proto__ || Object.getPrototypeOf(Noun)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.t = _this.terms[0];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Noun, [{\n\t    key: 'article',\n\t    value: function article() {\n\t      var t = this.t;\n\t      return makeArticle(t);\n\t    }\n\t  }, {\n\t    key: 'isPlural',\n\t    value: function isPlural() {\n\t      var t = this.t;\n\t      return _isPlural(t);\n\t    }\n\t  }, {\n\t    key: 'hasPlural',\n\t    value: function hasPlural() {\n\t      var t = this.t;\n\t      return _hasPlural(t);\n\t    }\n\t  }, {\n\t    key: 'toPlural',\n\t    value: function toPlural() {\n\t      var t = this.t;\n\t      if (_hasPlural(t) && !_isPlural(t)) {\n\t        t.text = pluralize(t.text);\n\t        t.unTag('Plural', 'toPlural');\n\t        t.tagAs('Singular', 'toPlural');\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toSingular',\n\t    value: function toSingular() {\n\t      var t = this.t;\n\t      if (_isPlural(t)) {\n\t        t.text = singularize(t.text);\n\t        t.unTag('Plural', 'toSingular');\n\t        t.tagAs('Singular', 'toSingular');\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return {\n\t        article: this.article(),\n\t        singular: this.toSingular().out('normal'),\n\t        plural: this.toPlural().out('normal')\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Noun;\n\t}(Terms);\n\t\n\tmodule.exports = Noun;\n\t\n\t},{\"../../paths\":37,\"./hasPlural\":68,\"./isPlural\":70,\"./makeArticle\":71,\"./methods/pluralize\":75,\"./methods/singularize\":76}],78:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Organizations = function (_Text) {\n\t  _inherits(Organizations, _Text);\n\t\n\t  function Organizations() {\n\t    _classCallCheck(this, Organizations);\n\t\n\t    return _possibleConstructorReturn(this, (Organizations.__proto__ || Object.getPrototypeOf(Organizations)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Organizations, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.splitAfter('#Comma');\n\t      r = r.match('#Organization+');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Organizations;\n\t}(Text);\n\t\n\tmodule.exports = Organizations;\n\t\n\t},{\"../../index\":25}],79:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../../paths').log;\n\t// make a statistical assumption about the gender of the person based on their given name\n\t// used for pronoun resolution only.\n\t// not intended for classification, or discrimination of people.\n\tvar gender = function gender(firstName) {\n\t  if (!firstName) {\n\t    return null;\n\t  }\n\t  //statistical guesses\n\t  if (firstName.match(/.(i|ee|[a|e]y|a)$/i)) {\n\t    //this is almost-always true\n\t    log.tell('Female-name suffix');\n\t    return 'Female';\n\t  }\n\t  if (firstName.match(/[ou]$/i)) {\n\t    //if it ends in a 'oh or uh', male\n\t    log.tell('Male-name suffix');\n\t    return 'Male';\n\t  }\n\t  if (firstName.match(/(nn|ll|tt)/i)) {\n\t    //if it has double-consonants, female\n\t    log.tell('Female-name consonant-doubling');\n\t    return 'Female';\n\t  }\n\t  // name not recognized, or recognized as of indeterminate gender\n\t  return null;\n\t};\n\tmodule.exports = gender;\n\t\n\t},{\"../../paths\":37}],80:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Person = _dereq_('./person');\n\t//this is used for pronoun and honorifics, and not intented for more-than grammatical use (see #117)\n\t\n\tvar People = function (_Text) {\n\t  _inherits(People, _Text);\n\t\n\t  function People() {\n\t    _classCallCheck(this, People);\n\t\n\t    return _possibleConstructorReturn(this, (People.__proto__ || Object.getPrototypeOf(People)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(People, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'pronoun',\n\t    value: function pronoun() {\n\t      return this.list.map(function (ts) {\n\t        return ts.pronoun();\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      var people = r.clauses();\n\t      people = people.match('#Person+');\n\t      if (typeof n === 'number') {\n\t        people = people.get(n);\n\t      }\n\t      people.list = people.list.map(function (ts) {\n\t        return new Person(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return people;\n\t    }\n\t  }]);\n\t\n\t  return People;\n\t}(Text);\n\t\n\tmodule.exports = People;\n\t\n\t},{\"../../index\":25,\"./person\":81}],81:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar _guessGender = _dereq_('./guessGender');\n\tvar log = _dereq_('../../paths').log;\n\t\n\tvar Person = function (_Terms) {\n\t  _inherits(Person, _Terms);\n\t\n\t  _createClass(Person, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return {\n\t        text: this.out('text'),\n\t        normal: this.out('normal'),\n\t        firstName: this.firstName.out('normal'),\n\t        middleName: this.middleName.out('normal'),\n\t        lastName: this.lastName.out('normal'),\n\t        genderGuess: this.guessGender(),\n\t        pronoun: this.pronoun(),\n\t        honorifics: this.honorifics.out('array')\n\t      };\n\t    }\n\t  }]);\n\t\n\t  function Person(arr, lexicon, refText, refTerms) {\n\t    var _ret;\n\t\n\t    _classCallCheck(this, Person);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Person.__proto__ || Object.getPrototypeOf(Person)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.firstName = _this.match('#FirstName+');\n\t    _this.middleName = _this.match('#Acronym+');\n\t    _this.honorifics = _this.match('#Honorific');\n\t    _this.lastName = _this.match('#LastName+');\n\t    //assume first-last\n\t    if (!_this.firstName.found && _this.length > 1) {\n\t      var m = _this.not('(#Acronym|#Honorific)');\n\t      _this.firstName = m.first();\n\t      _this.lastName = m.last();\n\t    }\n\t    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(Person, [{\n\t    key: 'guessGender',\n\t    value: function guessGender() {\n\t      //try known honorifics\n\t      if (this.honorifics.match('(mr|mister|sr|sir|jr)').found) {\n\t        log.tell('known male honorific');\n\t        return 'Male';\n\t      }\n\t      if (this.honorifics.match('(mrs|miss|ms|misses|mme|mlle)').found) {\n\t        log.tell('known female honorific');\n\t        return 'Female';\n\t      }\n\t      //try known first-names\n\t      if (this.firstName.match('#MaleName').found) {\n\t        log.tell('known male name');\n\t        return 'Male';\n\t      }\n\t      if (this.firstName.match('#FemaleName').found) {\n\t        log.tell('known female name');\n\t        return 'Female';\n\t      }\n\t      //look-for regex clues\n\t      var str = this.firstName.out('normal');\n\t      return _guessGender(str);\n\t    }\n\t  }, {\n\t    key: 'pronoun',\n\t    value: function pronoun() {\n\t      var str = this.firstName.out('normal');\n\t      var g = this.guessGender(str);\n\t      if (g === 'Male') {\n\t        return 'he';\n\t      }\n\t      if (g === 'Female') {\n\t        return 'she';\n\t      }\n\t      return 'they';\n\t    }\n\t  }, {\n\t    key: 'root',\n\t    value: function root() {\n\t      var first = this.firstName.out('root');\n\t      var last = this.lastName.out('root');\n\t      if (first && last) {\n\t        return first + ' ' + last;\n\t      }\n\t      return last || first || this.out('root');\n\t    }\n\t  }]);\n\t\n\t  return Person;\n\t}(Terms);\n\t\n\tmodule.exports = Person;\n\t\n\t},{\"../../paths\":37,\"./guessGender\":79}],82:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar PhoneNumbers = function (_Text) {\n\t  _inherits(PhoneNumbers, _Text);\n\t\n\t  function PhoneNumbers() {\n\t    _classCallCheck(this, PhoneNumbers);\n\t\n\t    return _possibleConstructorReturn(this, (PhoneNumbers.__proto__ || Object.getPrototypeOf(PhoneNumbers)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(PhoneNumbers, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.terms().list.map(function (ts) {\n\t        var t = ts.terms[0];\n\t        return {\n\t          text: t.text\n\t        };\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r) {\n\t      r = r.splitAfter('#Comma');\n\t      r = r.match('#PhoneNumber+');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return PhoneNumbers;\n\t}(Text);\n\t\n\tmodule.exports = PhoneNumbers;\n\t\n\t},{\"../../index\":25}],83:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Place = _dereq_('./place');\n\t\n\tvar Places = function (_Text) {\n\t  _inherits(Places, _Text);\n\t\n\t  function Places() {\n\t    _classCallCheck(this, Places);\n\t\n\t    return _possibleConstructorReturn(this, (Places.__proto__ || Object.getPrototypeOf(Places)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Places, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.splitAfter('#Comma');\n\t      r = r.match('#Place+');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Place(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Places;\n\t}(Text);\n\t\n\tmodule.exports = Places;\n\t\n\t},{\"../../index\":25,\"./place\":84}],84:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\t\n\tvar Place = function (_Terms) {\n\t  _inherits(Place, _Terms);\n\t\n\t  function Place(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Place);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Place.__proto__ || Object.getPrototypeOf(Place)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.city = _this.match('#City');\n\t    _this.country = _this.match('#Country');\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Place, [{\n\t    key: 'root',\n\t    value: function root() {\n\t      return this.city.out('root');\n\t    }\n\t  }, {\n\t    key: 'isA',\n\t    get: function get() {\n\t      return 'Place';\n\t    }\n\t  }]);\n\t\n\t  return Place;\n\t}(Terms);\n\t\n\tmodule.exports = Place;\n\t\n\t},{\"../../paths\":37}],85:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Quotations = function (_Text) {\n\t  _inherits(Quotations, _Text);\n\t\n\t  function Quotations() {\n\t    _classCallCheck(this, Quotations);\n\t\n\t    return _possibleConstructorReturn(this, (Quotations.__proto__ || Object.getPrototypeOf(Quotations)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Quotations, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Quotation+');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Quotations;\n\t}(Text);\n\t\n\tmodule.exports = Quotations;\n\t\n\t},{\"../../index\":25}],86:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Sentence = _dereq_('./sentence');\n\t\n\tvar Sentences = function (_Text) {\n\t  _inherits(Sentences, _Text);\n\t\n\t  function Sentences(arr, lexicon, reference) {\n\t    _classCallCheck(this, Sentences);\n\t\n\t    return _possibleConstructorReturn(this, (Sentences.__proto__ || Object.getPrototypeOf(Sentences)).call(this, arr, lexicon, reference));\n\t  }\n\t  /** conjugate the main/first verb*/\n\t\n\t\n\t  _createClass(Sentences, [{\n\t    key: 'toPastTense',\n\t    value: function toPastTense() {\n\t      this.list = this.list.map(function (ts) {\n\t        ts = ts.toPastTense();\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPresentTense',\n\t    value: function toPresentTense() {\n\t      this.list = this.list.map(function (ts) {\n\t        ts = ts.toPresentTense();\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toFutureTense',\n\t    value: function toFutureTense() {\n\t      this.list = this.list.map(function (ts) {\n\t        ts = ts.toFutureTense();\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return this;\n\t    }\n\t    /** negative/positive */\n\t\n\t  }, {\n\t    key: 'toNegative',\n\t    value: function toNegative() {\n\t      this.list = this.list.map(function (ts) {\n\t        ts = ts.toNegative();\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPositive',\n\t    value: function toPositive() {\n\t      this.list = this.list.map(function (ts) {\n\t        ts = ts.toPositive();\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return this;\n\t    }\n\t\n\t    /** look for 'was _ by' patterns */\n\t\n\t  }, {\n\t    key: 'isPassive',\n\t    value: function isPassive() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return ts.isPassive();\n\t      });\n\t      return this;\n\t    }\n\t    /** add a word to the start */\n\t\n\t  }, {\n\t    key: 'prepend',\n\t    value: function prepend(str) {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.prepend(str);\n\t      });\n\t      return this;\n\t    }\n\t    /** add a word to the end */\n\t\n\t  }, {\n\t    key: 'append',\n\t    value: function append(str) {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.append(str);\n\t      });\n\t      return this;\n\t    }\n\t\n\t    /** convert between question/statement/exclamation*/\n\t\n\t  }, {\n\t    key: 'toExclamation',\n\t    value: function toExclamation() {\n\t      this.list.forEach(function (ts) {\n\t        ts.setPunctuation('!');\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toQuestion',\n\t    value: function toQuestion() {\n\t      this.list.forEach(function (ts) {\n\t        ts.setPunctuation('?');\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toStatement',\n\t    value: function toStatement() {\n\t      this.list.forEach(function (ts) {\n\t        ts.setPunctuation('.');\n\t      });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.all();\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      // return new Text(r.list, r.lexicon, r.reference);\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Sentences;\n\t}(Text);\n\t\n\tmodule.exports = Sentences;\n\t\n\t},{\"../../index\":25,\"./sentence\":88}],87:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../index');\n\t\n\tvar Questions = function (_Text) {\n\t  _inherits(Questions, _Text);\n\t\n\t  function Questions() {\n\t    _classCallCheck(this, Questions);\n\t\n\t    return _possibleConstructorReturn(this, (Questions.__proto__ || Object.getPrototypeOf(Questions)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Questions, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.all();\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      var list = r.list.filter(function (ts) {\n\t        return ts.last().endPunctuation() === '?';\n\t      });\n\t      return new Text(list, this.lexicon, this.parent);\n\t    }\n\t  }]);\n\t\n\t  return Questions;\n\t}(Text);\n\t\n\tmodule.exports = Questions;\n\t\n\t},{\"../index\":86}],88:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar _toNegative = _dereq_('./toNegative');\n\tvar _toPositive = _dereq_('./toPositive');\n\tvar Verb = _dereq_('../verbs/verb');\n\tvar insert = _dereq_('./smartInsert');\n\t\n\tvar Sentence = function (_Terms) {\n\t  _inherits(Sentence, _Terms);\n\t\n\t  function Sentence(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Sentence);\n\t\n\t    return _possibleConstructorReturn(this, (Sentence.__proto__ || Object.getPrototypeOf(Sentence)).call(this, arr, lexicon, refText, refTerms));\n\t  }\n\t  /** inflect the main/first noun*/\n\t\n\t\n\t  _createClass(Sentence, [{\n\t    key: 'toSingular',\n\t    value: function toSingular() {\n\t      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n\t      nouns.things().toSingular();\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPlural',\n\t    value: function toPlural() {\n\t      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n\t      nouns.things().toPlural();\n\t      return this;\n\t    }\n\t\n\t    /** find the first important verbPhrase. returns a Term object */\n\t\n\t  }, {\n\t    key: 'mainVerb',\n\t    value: function mainVerb() {\n\t      var terms = this.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n\t      if (terms.found) {\n\t        terms = terms.list[0].terms;\n\t        return new Verb(terms, this.lexicon, this.refText, this.refTerms);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /** sentence tense conversion**/\n\t\n\t  }, {\n\t    key: 'toPastTense',\n\t    value: function toPastTense() {\n\t      var verb = this.mainVerb();\n\t      if (verb) {\n\t        //this is really ugly..\n\t        var start = verb.out('normal');\n\t        verb.toPastTense();\n\t        // console.log(verb.parentTerms.out() + '!');\n\t        var end = verb.out('normal');\n\t        var r = this.parentTerms.replace(start, end);\n\t        return r;\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPresentTense',\n\t    value: function toPresentTense() {\n\t      var verb = this.mainVerb();\n\t      if (verb) {\n\t        var start = verb.out('normal');\n\t        verb.toPresentTense();\n\t        var end = verb.out('normal');\n\t        return this.parentTerms.replace(start, end);\n\t      }\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toFutureTense',\n\t    value: function toFutureTense() {\n\t      var verb = this.mainVerb();\n\t      if (verb) {\n\t        var start = verb.out('normal');\n\t        verb.toFutureTense();\n\t        var end = verb.out('normal');\n\t        return this.parentTerms.replace(start, end);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /** negation **/\n\t\n\t  }, {\n\t    key: 'isNegative',\n\t    value: function isNegative() {\n\t      return this.match('#Negative').list.length === 1;\n\t    }\n\t  }, {\n\t    key: 'toNegative',\n\t    value: function toNegative() {\n\t      if (this.isNegative()) {\n\t        return this;\n\t      }\n\t      return _toNegative(this);\n\t    }\n\t  }, {\n\t    key: 'toPositive',\n\t    value: function toPositive() {\n\t      if (!this.isNegative()) {\n\t        return this;\n\t      }\n\t      return _toPositive(this);\n\t    }\n\t\n\t    /** smarter insert methods*/\n\t\n\t  }, {\n\t    key: 'append',\n\t    value: function append(str) {\n\t      return insert.append(this, str);\n\t    }\n\t  }, {\n\t    key: 'prepend',\n\t    value: function prepend(str) {\n\t      return insert.prepend(this, str);\n\t    }\n\t\n\t    /** punctuation */\n\t\n\t  }, {\n\t    key: 'setPunctuation',\n\t    value: function setPunctuation(punct) {\n\t      var last = this.terms[this.terms.length - 1];\n\t      last.setPunctuation(punct);\n\t    }\n\t  }, {\n\t    key: 'getPunctuation',\n\t    value: function getPunctuation() {\n\t      var last = this.terms[this.terms.length - 1];\n\t      return last.getPunctuation();\n\t    }\n\t    /** look for 'was _ by' patterns */\n\t\n\t  }, {\n\t    key: 'isPassive',\n\t    value: function isPassive() {\n\t      return this.match('was #Adverb? #PastTense #Adverb? by').found; //haha\n\t    }\n\t  }]);\n\t\n\t  return Sentence;\n\t}(Terms);\n\t\n\tmodule.exports = Sentence;\n\t\n\t},{\"../../paths\":37,\"../verbs/verb\":129,\"./smartInsert\":89,\"./toNegative\":91,\"./toPositive\":92}],89:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//sticking words at the start sentence-sensitive\n\t\n\tvar prepend = function prepend(ts, str) {\n\t  var firstTerm = ts.terms[0];\n\t  ts.insertAt(0, str);\n\t  //handle titlecase of first-word\n\t  if (firstTerm.text.match(/^[A-Z]/)) {\n\t    //is it titlecased because it should be?\n\t    if (firstTerm.needsTitleCase() === false) {\n\t      firstTerm.toLowerCase();\n\t    }\n\t    var newTerm = ts.terms[0];\n\t    newTerm.toTitleCase();\n\t  }\n\t  return ts;\n\t};\n\t\n\t//sticking words on end sentence-sensitive\n\tvar append = function append(ts, str) {\n\t  var endTerm = ts.terms[ts.terms.length - 1];\n\t  //move the sentence punctuation to the end\n\t  var punct = endTerm.endPunctuation();\n\t  if (punct) {\n\t    endTerm.killPunctuation();\n\t  }\n\t  ts.insertAt(ts.terms.length, str);\n\t  var newTerm = ts.terms[ts.terms.length - 1];\n\t  if (punct) {\n\t    newTerm.text += punct;\n\t  }\n\t  //move over sentence-ending whitespace too\n\t  if (endTerm.whitespace.after) {\n\t    newTerm.whitespace.after = endTerm.whitespace.after;\n\t    endTerm.whitespace.after = '';\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = {\n\t  append: append,\n\t  prepend: prepend\n\t};\n\t\n\t},{}],90:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../index');\n\t\n\tvar Statements = function (_Text) {\n\t  _inherits(Statements, _Text);\n\t\n\t  function Statements() {\n\t    _classCallCheck(this, Statements);\n\t\n\t    return _possibleConstructorReturn(this, (Statements.__proto__ || Object.getPrototypeOf(Statements)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Statements, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.all();\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      var list = r.list.filter(function (ts) {\n\t        return ts.last().endPunctuation() !== '?';\n\t      });\n\t      return new Text(list, this.lexicon, this.parent);\n\t    }\n\t  }]);\n\t\n\t  return Statements;\n\t}(Text);\n\t\n\tmodule.exports = Statements;\n\t\n\t},{\"../index\":86}],91:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//these terms are nicer ways to negate a sentence\n\t//ie. john always walks -> john always doesn't walk\n\t\n\tvar logicalNegate = {\n\t  'everyone': 'no one',\n\t  'everybody': 'nobody',\n\t  'someone': 'no one',\n\t  'somebody': 'nobody',\n\t  // everything:\"nothing\",\n\t  'always': 'never'\n\t};\n\t\n\t//different rule for i/we/they/you + infinitive\n\t//that is, 'i walk' -> 'i don\\'t walk', not 'I not walk'\n\tvar toNegative = function toNegative(ts) {\n\t  var lg = ts.match('(everyone|everybody|someone|somebody|always)').first();\n\t  if (lg.found && logicalNegate[lg.out('normal')]) {\n\t    var found = lg.out('normal');\n\t    // ts = ts.replace(found, logicalNegate[found]);\n\t    ts = ts.match(found).replaceWith(logicalNegate[found]).list[0];\n\t    return ts.parentTerms;\n\t  }\n\t  //negate the main verb of the sentence\n\t  var vb = ts.mainVerb();\n\t  if (vb) {\n\t    vb.toNegative();\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = toNegative;\n\t\n\t},{}],92:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//ie. john never walks -> john always walks\n\t//nobody/noone are ambiguous logically (somebody? / everybody?)\n\t\n\tvar logical = {\n\t  'never': 'always',\n\t  'nothing': 'everything'\n\t};\n\t\n\tvar toPositive = function toPositive(ts) {\n\t  var m = ts.match('(never|nothing)').first();\n\t  if (m.found) {\n\t    var str = m.out('normal');\n\t    if (logical[str]) {\n\t      ts = ts.match(str).replaceWith(logical[str]).list[0];\n\t      return ts.parentTerms;\n\t    }\n\t  }\n\t  //otherwise just remove 'not'\n\t  ts['delete']('#Negative');\n\t  return ts;\n\t};\n\tmodule.exports = toPositive;\n\t\n\t},{}],93:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Term = _dereq_('./term');\n\t\n\tvar Terms = function (_Text) {\n\t  _inherits(Terms, _Text);\n\t\n\t  function Terms() {\n\t    _classCallCheck(this, Terms);\n\t\n\t    return _possibleConstructorReturn(this, (Terms.__proto__ || Object.getPrototypeOf(Terms)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Terms, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('.');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Term(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Terms;\n\t}(Text);\n\t\n\tmodule.exports = Terms;\n\t\n\t},{\"../../index\":25,\"./term\":94}],94:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar tagList = _dereq_('../../paths').tags;\n\tvar boringTags = {\n\t  Auxillary: true\n\t};\n\t\n\tvar Term = function (_Terms) {\n\t  _inherits(Term, _Terms);\n\t\n\t  function Term(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Term);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Term.__proto__ || Object.getPrototypeOf(Term)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.t = _this.terms[0];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Term, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      var t = this.t;\n\t      return {\n\t        spaceBefore: t.whitespace.before,\n\t        text: t.text,\n\t        spaceAfter: t.whitespace.after,\n\t        normal: t.normal,\n\t        implicit: t.silent_term,\n\t        bestTag: this.bestTag(),\n\t        tags: Object.keys(t.tag)\n\t      };\n\t    }\n\t  }, {\n\t    key: 'bestTag',\n\t    value: function bestTag() {\n\t      var tags = Object.keys(this.t.tag);\n\t      tags = tags.sort(); //alphabetical, first\n\t      //then sort by #of parent tags\n\t      tags = tags.sort(function (a, b) {\n\t        //bury the tags we dont want\n\t        if (boringTags[b] || !tagList[a] || !tagList[b]) {\n\t          return -1;\n\t        }\n\t        if (tagList[a].parents.length > tagList[b].parents.length) {\n\t          return -1;\n\t        }\n\t        return 1;\n\t      });\n\t      return tags[0];\n\t    }\n\t  }]);\n\t\n\t  return Term;\n\t}(Terms);\n\t\n\tmodule.exports = Term;\n\t\n\t},{\"../../paths\":37}],95:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Things = function (_Text) {\n\t  _inherits(Things, _Text);\n\t\n\t  function Things() {\n\t    _classCallCheck(this, Things);\n\t\n\t    return _possibleConstructorReturn(this, (Things.__proto__ || Object.getPrototypeOf(Things)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Things, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.clauses();\n\t      //find people, places, and organizations\n\t      var yup = r.people();\n\t      yup.concat(r.places());\n\t      yup.concat(r.organizations());\n\t      //return them to normal ordering\n\t      yup.sort('chronological');\n\t      // yup.unique() //? not sure\n\t      if (typeof n === 'number') {\n\t        yup = yup.get(n);\n\t      }\n\t      return yup;\n\t    }\n\t  }]);\n\t\n\t  return Things;\n\t}(Text);\n\t\n\tmodule.exports = Things;\n\t\n\t},{\"../../index\":25}],96:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\t\n\tvar Urls = function (_Text) {\n\t  _inherits(Urls, _Text);\n\t\n\t  function Urls() {\n\t    _classCallCheck(this, Urls);\n\t\n\t    return _possibleConstructorReturn(this, (Urls.__proto__ || Object.getPrototypeOf(Urls)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Urls, null, [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Url');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Urls;\n\t}(Text);\n\t\n\tmodule.exports = Urls;\n\t\n\t},{\"../../index\":25}],97:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Value = _dereq_('./value');\n\t\n\tvar Values = function (_Text) {\n\t  _inherits(Values, _Text);\n\t\n\t  function Values() {\n\t    _classCallCheck(this, Values);\n\t\n\t    return _possibleConstructorReturn(this, (Values.__proto__ || Object.getPrototypeOf(Values)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Values, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'noDates',\n\t    value: function noDates() {\n\t      return this.not('#Date');\n\t    }\n\t    /** five -> 5 */\n\t\n\t  }, {\n\t    key: 'numbers',\n\t    value: function numbers() {\n\t      return this.list.map(function (ts) {\n\t        return ts.number();\n\t      });\n\t    }\n\t    /** five -> '5' */\n\t\n\t  }, {\n\t    key: 'toNumber',\n\t    value: function toNumber() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toNumber();\n\t      });\n\t      return this;\n\t    }\n\t    /**5 -> 'five' */\n\t\n\t  }, {\n\t    key: 'toTextValue',\n\t    value: function toTextValue() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toTextValue();\n\t      });\n\t      return this;\n\t    }\n\t    /**5th -> 5 */\n\t\n\t  }, {\n\t    key: 'toCardinal',\n\t    value: function toCardinal() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toCardinal();\n\t      });\n\t      return this;\n\t    }\n\t    /**5 -> 5th */\n\t\n\t  }, {\n\t    key: 'toOrdinal',\n\t    value: function toOrdinal() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toOrdinal();\n\t      });\n\t      return this;\n\t    }\n\t    /**5900 -> 5,900 */\n\t\n\t  }, {\n\t    key: 'toNiceNumber',\n\t    value: function toNiceNumber() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toNiceNumber();\n\t      });\n\t      return this;\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('#Value+');\n\t      // r = r.match('#Value+ #Unit?');\n\t\n\t      //june 21st 1992 is two seperate values\n\t      r.splitOn('#Year');\n\t      // r.debug();\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Value(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return r;\n\t    }\n\t  }]);\n\t\n\t  return Values;\n\t}(Text);\n\t\n\tValues.prototype.clone = function () {\n\t  var list = this.list.map(function (ts) {\n\t    return ts.clone();\n\t  });\n\t  return new Values(list, this.lexicon);\n\t};\n\tmodule.exports = Values;\n\t\n\t},{\"../../index\":25,\"./value\":109}],98:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar toNumber = _dereq_('../toNumber');\n\t\n\t//turn a number like 5 into an ordinal like 5th\n\tvar numOrdinal = function numOrdinal(ts) {\n\t  var num = toNumber(ts);\n\t  if (!num && num !== 0) {\n\t    return null;\n\t  }\n\t  //the teens are all 'th'\n\t  var tens = num % 100;\n\t  if (tens > 10 && tens < 20) {\n\t    return '' + num + 'th';\n\t  }\n\t  //the rest of 'em\n\t  var mapping = {\n\t    0: 'th',\n\t    1: 'st',\n\t    2: 'nd',\n\t    3: 'rd'\n\t  };\n\t  var str = '' + num;\n\t  var last = str.slice(str.length - 1, str.length);\n\t  if (mapping[last]) {\n\t    str += mapping[last];\n\t  } else {\n\t    str += 'th';\n\t  }\n\t  return str;\n\t};\n\t\n\tmodule.exports = numOrdinal;\n\t\n\t},{\"../toNumber\":104}],99:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = _dereq_('../../paths');\n\t\n\t},{\"../../paths\":37}],100:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar toNumber = _dereq_('../toNumber');\n\tvar toText = _dereq_('../toText');\n\tvar ordinalWord = _dereq_('../../../paths').data.ordinalMap.toOrdinal;\n\t//\n\tvar textOrdinal = function textOrdinal(ts) {\n\t  var num = toNumber(ts);\n\t  var words = toText(num);\n\t  //convert the last number to an ordinal\n\t  var last = words[words.length - 1];\n\t  words[words.length - 1] = ordinalWord[last] || last;\n\t  return words.join(' ');\n\t};\n\t\n\tmodule.exports = textOrdinal;\n\t\n\t},{\"../../../paths\":37,\"../toNumber\":104,\"../toText\":108}],101:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar niceNumber = function niceNumber(num) {\n\t  if (!num && num !== 0) {\n\t    return null;\n\t  }\n\t  num = '' + num;\n\t  var x = num.split('.');\n\t  var x1 = x[0];\n\t  var x2 = x.length > 1 ? '.' + x[1] : '';\n\t  var rgx = /(\\d+)(\\d{3})/;\n\t  while (rgx.test(x1)) {\n\t    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n\t  }\n\t  return x1 + x2;\n\t};\n\tmodule.exports = niceNumber;\n\t\n\t},{}],102:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar p = _dereq_('../paths');\n\tvar numbers = p.data.numbers;\n\tvar fns = p.fns;\n\t\n\t//setup number-word data\n\tvar ones = fns.extend(numbers.ordinal.ones, numbers.cardinal.ones);\n\tvar teens = fns.extend(numbers.ordinal.teens, numbers.cardinal.teens);\n\tvar tens = fns.extend(numbers.ordinal.tens, numbers.cardinal.tens);\n\tvar multiples = fns.extend(numbers.ordinal.multiples, numbers.cardinal.multiples);\n\t\n\tmodule.exports = {\n\t  ones: ones,\n\t  teens: teens,\n\t  tens: tens,\n\t  multiples: multiples\n\t};\n\t\n\t},{\"../paths\":99}],103:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\n\t\n\tvar findModifiers = function findModifiers(str) {\n\t  var mults = [{\n\t    reg: /^(minus|negative)[\\s\\-]/i,\n\t    mult: -1\n\t  }, {\n\t    reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n\t    mult: 0.5\n\t  }];\n\t  for (var i = 0; i < mults.length; i++) {\n\t    if (str.match(mults[i].reg)) {\n\t      return {\n\t        amount: mults[i].mult,\n\t        str: str.replace(mults[i].reg, '')\n\t      };\n\t    }\n\t  }\n\t  return {\n\t    amount: 1,\n\t    str: str\n\t  };\n\t};\n\t\n\tmodule.exports = findModifiers;\n\t\n\t},{}],104:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar parseNumeric = _dereq_('./parseNumeric');\n\tvar findModifiers = _dereq_('./findModifiers');\n\tvar words = _dereq_('./data');\n\tvar isValid = _dereq_('./validate');\n\tvar parseDecimals = _dereq_('./parseDecimals');\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'parseNumber';\n\t\n\t//some numbers we know\n\tvar casualForms = {\n\t  // 'a few': 3,\n\t  'a couple': 2,\n\t  'a dozen': 12,\n\t  'two dozen': 24,\n\t  'zero': 0\n\t};\n\t\n\t// a 'section' is something like 'fifty-nine thousand'\n\t// turn a section into something we can add to - like 59000\n\tvar section_sum = function section_sum(obj) {\n\t  // console.log(obj);\n\t  return Object.keys(obj).reduce(function (sum, k) {\n\t    sum += obj[k];\n\t    return sum;\n\t  }, 0);\n\t};\n\t\n\tvar alreadyNumber = function alreadyNumber(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    if (!ts.terms[i].tag.NumericValue) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\t//turn a string into a number\n\tvar parse = function parse(ts) {\n\t  log.here('parseNumber', path);\n\t  var str = ts.out('normal');\n\t  //convert some known-numbers\n\t  if (casualForms[str] !== undefined) {\n\t    return casualForms[str];\n\t  }\n\t  //'a/an' is 1\n\t  if (str === 'a' || str === 'an') {\n\t    return 1;\n\t  }\n\t  //handle a string of mostly numbers\n\t  if (alreadyNumber(ts)) {\n\t    return parseNumeric(ts.out('normal'));\n\t  }\n\t  var modifier = findModifiers(str);\n\t  str = modifier.str;\n\t  var last_mult = null;\n\t  var has = {};\n\t  var sum = 0;\n\t  var isNegative = false;\n\t  var terms = str.split(/[ -]/);\n\t  // console.log(terms);\n\t  for (var i = 0; i < terms.length; i++) {\n\t    var w = terms[i];\n\t    // console.log(i + '  - ' + w);\n\t    if (!w || w === 'and') {\n\t      continue;\n\t    }\n\t    if (w === '-' || w === 'negative') {\n\t      isNegative = true;\n\t      continue;\n\t    }\n\t    if (w.startsWith('-')) {\n\t      isNegative = true;\n\t      w = w.substr(1);\n\t    }\n\t    //decimal mode\n\t    if (w === 'point') {\n\t      sum += section_sum(has);\n\t      sum += parseDecimals(terms.slice(i + 1, terms.length));\n\t      sum *= modifier.amount;\n\t      return sum;\n\t    }\n\t    //improper fraction\n\t    var improperFractionMatch = w.match(/^([0-9,\\. ]+)\\/([0-9,\\. ]+)$/);\n\t    if (improperFractionMatch) {\n\t      log.here('fractionMath', path);\n\t      var num = parseFloat(improperFractionMatch[1].replace(/[, ]/g, ''));\n\t      var denom = parseFloat(improperFractionMatch[2].replace(/[, ]/g, ''));\n\t      if (denom) {\n\t        sum += num / denom || 0;\n\t      }\n\t      continue;\n\t    }\n\t    //prevent mismatched units, like 'seven eleven'\n\t    if (!isValid(w, has)) {\n\t      log.tell('invalid state', path);\n\t      log.tell(has, path);\n\t      return null;\n\t    }\n\t    //buildup section, collect 'has' values\n\t    if (w.match(/^[0-9\\.]+$/)) {\n\t      has['ones'] = parseFloat(w, 10); //not technically right\n\t    } else if (words.ones[w]) {\n\t      has['ones'] = words.ones[w];\n\t    } else if (words.teens[w]) {\n\t      has['teens'] = words.teens[w];\n\t    } else if (words.tens[w]) {\n\t      has['tens'] = words.tens[w];\n\t    } else if (words.multiples[w]) {\n\t      var mult = words.multiples[w];\n\t      //something has gone wrong : 'two hundred five hundred'\n\t      if (mult === last_mult) {\n\t        log.tell('invalid multiplier', path);\n\t        return null;\n\t      }\n\t      //support 'hundred thousand'\n\t      //this one is tricky..\n\t      if (mult === 100 && terms[i + 1]) {\n\t        // has['hundreds']=\n\t        var w2 = terms[i + 1];\n\t        if (words.multiples[w2]) {\n\t          mult *= words.multiples[w2]; //hundredThousand/hundredMillion\n\t          i += 1;\n\t        }\n\t      }\n\t      //natural order of things\n\t      //five thousand, one hundred..\n\t      if (last_mult === null || mult < last_mult) {\n\t        sum += (section_sum(has) || 1) * mult;\n\t        last_mult = mult;\n\t        has = {};\n\t      } else {\n\t        //maybe hundred .. thousand\n\t        sum += section_sum(has);\n\t        last_mult = mult;\n\t        sum = (sum || 1) * mult;\n\t        has = {};\n\t      }\n\t    }\n\t    // console.log(w + '=-------');\n\t    // console.log(has);\n\t  }\n\t  //dump the remaining has values\n\t  sum += section_sum(has);\n\t  //post-process add modifier\n\t  sum *= modifier.amount;\n\t  sum *= isNegative ? -1 : 1;\n\t  //dont return 0, if it went straight-through\n\t  if (sum === 0) {\n\t    return null;\n\t  }\n\t  return sum;\n\t};\n\t\n\tmodule.exports = parse;\n\t\n\t},{\"../paths\":99,\"./data\":102,\"./findModifiers\":103,\"./parseDecimals\":105,\"./parseNumeric\":106,\"./validate\":107}],105:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar words = _dereq_('./data');\n\t\n\t//concatenate into a string with leading '0.'\n\tvar parseDecimals = function parseDecimals(arr) {\n\t  var str = '0.';\n\t  for (var i = 0; i < arr.length; i++) {\n\t    var w = arr[i];\n\t    if (words.ones[w]) {\n\t      str += words.ones[w];\n\t    } else if (words.teens[w]) {\n\t      str += words.teens[w];\n\t    } else if (words.tens[w]) {\n\t      str += words.tens[w];\n\t    } else if (w.match(/^[0-9]$/)) {\n\t      str += w;\n\t    } else {\n\t      return 0;\n\t    }\n\t  }\n\t  return parseFloat(str);\n\t};\n\t\n\tmodule.exports = parseDecimals;\n\t\n\t},{\"./data\":102}],106:[function(_dereq_,module,exports){\n\t'use strict';\n\t//parse a string like \"4,200.1\" into Number 4200.1\n\t\n\tvar parseNumeric = function parseNumeric(str) {\n\t  //remove ordinal - 'th/rd'\n\t  str = str.replace(/1st$/, '1');\n\t  str = str.replace(/2nd$/, '2');\n\t  str = str.replace(/3rd$/, '3');\n\t  str = str.replace(/([4567890])r?th$/, '$1');\n\t  //remove prefixes\n\t  str = str.replace(/^[$€¥£¢]/, '');\n\t  //remove suffixes\n\t  str = str.replace(/[%$€¥£¢]$/, '');\n\t  //remove commas\n\t  str = str.replace(/,/g, '');\n\t  //split '5kg' from '5'\n\t  str = str.replace(/([0-9])([a-z]{1,2})$/, '$1');\n\t  return parseFloat(str);\n\t};\n\t\n\tmodule.exports = parseNumeric;\n\t\n\t},{}],107:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar words = _dereq_('./data');\n\t\n\t//prevent things like 'fifteen ten', and 'five sixty'\n\tvar isValid = function isValid(w, has) {\n\t  if (words.ones[w]) {\n\t    if (has.ones || has.teens) {\n\t      return false;\n\t    }\n\t  } else if (words.teens[w]) {\n\t    if (has.ones || has.teens || has.tens) {\n\t      return false;\n\t    }\n\t  } else if (words.tens[w]) {\n\t    if (has.ones || has.teens || has.tens) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\tmodule.exports = isValid;\n\t\n\t},{\"./data\":102}],108:[function(_dereq_,module,exports){\n\t'use strict';\n\t// turns an integer/float into a textual number, like 'fifty-five'\n\t\n\t//turn number into an array of magnitudes, like [[5, million], [2, hundred]]\n\t\n\tvar breakdown_magnitudes = function breakdown_magnitudes(num) {\n\t  var working = num;\n\t  var have = [];\n\t  var sequence = [[1000000000, 'million'], [100000000, 'hundred million'], [1000000, 'million'], [100000, 'hundred thousand'], [1000, 'thousand'], [100, 'hundred'], [1, 'one']];\n\t  sequence.forEach(function (a) {\n\t    if (num > a[0]) {\n\t      var howmany = Math.floor(working / a[0]);\n\t      working -= howmany * a[0];\n\t      if (howmany) {\n\t        have.push({\n\t          unit: a[1],\n\t          count: howmany\n\t        });\n\t      }\n\t    }\n\t  });\n\t  return have;\n\t};\n\t\n\t//turn numbers from 100-0 into their text\n\tvar breakdown_hundred = function breakdown_hundred(num) {\n\t  var tens_mapping = [['ninety', 90], ['eighty', 80], ['seventy', 70], ['sixty', 60], ['fifty', 50], ['forty', 40], ['thirty', 30], ['twenty', 20]];\n\t  var ones_mapping = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\t  var arr = [];\n\t  for (var i = 0; i < tens_mapping.length; i++) {\n\t    if (num >= tens_mapping[i][1]) {\n\t      num -= tens_mapping[i][1];\n\t      arr.push(tens_mapping[i][0]);\n\t    }\n\t  }\n\t  //(hopefully) we should only have 20-0 now\n\t  if (ones_mapping[num]) {\n\t    arr.push(ones_mapping[num]);\n\t  }\n\t  return arr;\n\t};\n\t\n\t/** print-out 'point eight nine'*/\n\tvar handle_decimal = function handle_decimal(num) {\n\t  var names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\t  var arr = [];\n\t  //parse it out like a string, because js math is such shit\n\t  var decimal = ('' + num).match(/\\.([0-9]+)/);\n\t  if (!decimal || !decimal[0]) {\n\t    return arr;\n\t  }\n\t  arr.push('point');\n\t  var decimals = decimal[0].split('');\n\t  for (var i = 0; i < decimals.length; i++) {\n\t    arr.push(names[decimals[i]]);\n\t  }\n\t  return arr;\n\t};\n\t\n\t/** turns an integer into a textual number */\n\tvar to_text = function to_text(num) {\n\t  var arr = [];\n\t  //handle negative numbers\n\t  if (num < 0) {\n\t    arr.push('negative');\n\t    num = Math.abs(num);\n\t  }\n\t  //break-down into units, counts\n\t  var units = breakdown_magnitudes(num);\n\t  //build-up the string from its components\n\t  for (var i = 0; i < units.length; i++) {\n\t    var unit_name = units[i].unit;\n\t    if (unit_name === 'one') {\n\t      unit_name = '';\n\t      //put an 'and' in here\n\t      if (arr.length > 1) {\n\t        arr.push('and');\n\t      }\n\t    }\n\t    arr = arr.concat(breakdown_hundred(units[i].count));\n\t    arr.push(unit_name);\n\t  }\n\t  //also support decimals - 'point eight'\n\t  arr = arr.concat(handle_decimal(num));\n\t  //remove empties\n\t  arr = arr.filter(function (s) {\n\t    return s;\n\t  });\n\t  if (arr.length === 0) {\n\t    arr[0] = 'zero';\n\t  }\n\t  return arr;\n\t};\n\t\n\tmodule.exports = to_text;\n\t\n\t// console.log(to_text(-1000.8));\n\t\n\t},{}],109:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar paths = _dereq_('../../paths');\n\tvar Terms = paths.Terms;\n\tvar parse = _dereq_('./toNumber');\n\tvar toText = _dereq_('./toText');\n\tvar _toNiceNumber = _dereq_('./toNiceNumber');\n\tvar numOrdinal = _dereq_('./numOrdinal');\n\tvar textOrdinal = _dereq_('./textOrdinal');\n\t\n\tvar isOrdinal = function isOrdinal(ts) {\n\t  var t = ts.terms[ts.terms.length - 1];\n\t  if (!t) {\n\t    return false;\n\t  }\n\t  return t.tag.Ordinal === true;\n\t};\n\tvar isText = function isText(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    if (ts.terms[i].tag.TextValue) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\tvar isNumber = function isNumber(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (t.tag.TextValue || t.tag.NiceNumber || !t.tag.NumericValue) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\t\n\tvar Value = function (_Terms) {\n\t  _inherits(Value, _Terms);\n\t\n\t  function Value(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Value);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.val = _this.match('#Value+').list[0];\n\t    _this.unit = _this.match('#Unit$').list[0];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Value, [{\n\t    key: 'number',\n\t    value: function number() {\n\t      var num = parse(this.val);\n\t      return num;\n\t    }\n\t    /** five -> '5' */\n\t\n\t  }, {\n\t    key: 'toNumber',\n\t    value: function toNumber() {\n\t      var val = this.val;\n\t      // this.debug();\n\t      //is already\n\t      if (isNumber(val)) {\n\t        return this;\n\t      }\n\t      //otherwise,\n\t      if (isOrdinal(val)) {\n\t        var num = numOrdinal(val);\n\t        this.replaceWith(num, 'Value');\n\t      } else {\n\t        var _num = parse(val);\n\t        // console.log(num);\n\t        if (_num !== null) {\n\t          this.replaceWith('' + _num, 'Value');\n\t        }\n\t      }\n\t      return this;\n\t    }\n\t    /**5 -> 'five' */\n\t\n\t  }, {\n\t    key: 'toTextValue',\n\t    value: function toTextValue() {\n\t      var val = this.val;\n\t      //is already\n\t      if (isText(val)) {\n\t        return this;\n\t      }\n\t      //otherwise, parse it\n\t      if (isOrdinal(val)) {\n\t        var _str = textOrdinal(val);\n\t        return this.replaceWith(_str, 'Value');\n\t      }\n\t      var num = '' + parse(val);\n\t      var str = toText(num).join(' ');\n\t      this.replaceWith(str, 'Value');\n\t      return this;\n\t    }\n\t\n\t    /**5th -> 5 */\n\t\n\t  }, {\n\t    key: 'toCardinal',\n\t    value: function toCardinal() {\n\t      var val = this.val;\n\t      //already\n\t      if (!isOrdinal(val)) {\n\t        return this;\n\t      }\n\t      //otherwise,\n\t      if (isText(val)) {\n\t        var _num2 = '' + parse(val);\n\t        var str = toText(_num2).join(' ');\n\t        return this.replaceWith(str, 'Value');\n\t      }\n\t      var num = '' + parse(val);\n\t      return this.replaceWith(num, 'Value');\n\t    }\n\t\n\t    /**5 -> 5th */\n\t\n\t  }, {\n\t    key: 'toOrdinal',\n\t    value: function toOrdinal() {\n\t      var val = this.val;\n\t      //already\n\t      if (isOrdinal(val)) {\n\t        return this;\n\t      }\n\t      //otherwise,\n\t      if (isText(val)) {\n\t        var str = textOrdinal(val);\n\t        this.replaceWith(str, 'Value');\n\t      } else {\n\t        //number-ordinal\n\t        var _str2 = numOrdinal(val);\n\t        this.replaceWith(_str2, 'Value');\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**5900 -> 5,900 */\n\t\n\t  }, {\n\t    key: 'toNiceNumber',\n\t    value: function toNiceNumber() {\n\t      var num = parse(this);\n\t      var str = _toNiceNumber(num);\n\t      this.replaceWith(str, 'Value');\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      var numV = this.clone().toNumber();\n\t      var txtV = this.clone().toTextValue();\n\t      var obj = {\n\t        NumericValue: {\n\t          cardinal: numV.toCardinal().out('text'),\n\t          ordinal: numV.toOrdinal().out('text'),\n\t          nicenumber: this.toNiceNumber().out('text')\n\t        },\n\t        TextValue: {\n\t          cardinal: txtV.toCardinal().out('text'),\n\t          ordinal: txtV.toOrdinal().out('text')\n\t        },\n\t        unit: ''\n\t      };\n\t      if (this.unit) {\n\t        obj.unit = this.unit.out('text');\n\t      }\n\t      obj.number = this.number();\n\t      return obj;\n\t    }\n\t  }]);\n\t\n\t  return Value;\n\t}(Terms);\n\t\n\tValue.prototype.clone = function () {\n\t  var terms = this.terms.map(function (t) {\n\t    return t.clone();\n\t  });\n\t  return new Value(terms, this.lexicon, this.refText, this.refTerms);\n\t};\n\tmodule.exports = Value;\n\t\n\t},{\"../../paths\":37,\"./numOrdinal\":98,\"./textOrdinal\":100,\"./toNiceNumber\":101,\"./toNumber\":104,\"./toText\":108}],110:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = _dereq_('../../index');\n\tvar Verb = _dereq_('./verb');\n\t\n\tvar Verbs = function (_Text) {\n\t  _inherits(Verbs, _Text);\n\t\n\t  function Verbs(arr, lexicon, reference) {\n\t    _classCallCheck(this, Verbs);\n\t\n\t    return _possibleConstructorReturn(this, (Verbs.__proto__ || Object.getPrototypeOf(Verbs)).call(this, arr, lexicon, reference));\n\t  }\n\t\n\t  _createClass(Verbs, [{\n\t    key: 'data',\n\t    value: function data() {\n\t      return this.list.map(function (ts) {\n\t        return ts.data();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'conjugation',\n\t    value: function conjugation(verbose) {\n\t      return this.list.map(function (ts) {\n\t        return ts.conjugation(verbose);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'conjugate',\n\t    value: function conjugate(verbose) {\n\t      return this.list.map(function (ts) {\n\t        return ts.conjugate(verbose);\n\t      });\n\t    }\n\t\n\t    /** plural/singular **/\n\t\n\t  }, {\n\t    key: 'isPlural',\n\t    value: function isPlural() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return ts.isPlural();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'isSingular',\n\t    value: function isSingular() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return !ts.isPlural();\n\t      });\n\t      return this;\n\t    }\n\t\n\t    /** negation **/\n\t\n\t  }, {\n\t    key: 'isNegative',\n\t    value: function isNegative() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return ts.isNegative();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'isPositive',\n\t    value: function isPositive() {\n\t      this.list = this.list.filter(function (ts) {\n\t        return !ts.isNegative();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toNegative',\n\t    value: function toNegative() {\n\t      this.list = this.list.map(function (ts) {\n\t        return ts.toNegative();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPositive',\n\t    value: function toPositive() {\n\t      this.list.forEach(function (ts) {\n\t        ts.toPositive();\n\t      });\n\t      return this;\n\t    }\n\t\n\t    /** tense **/\n\t\n\t  }, {\n\t    key: 'toPastTense',\n\t    value: function toPastTense() {\n\t      this.list.forEach(function (ts) {\n\t        ts.toPastTense();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toPresentTense',\n\t    value: function toPresentTense() {\n\t      this.list.forEach(function (ts) {\n\t        ts.toPresentTense();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toFutureTense',\n\t    value: function toFutureTense() {\n\t      this.list.forEach(function (ts) {\n\t        ts.toFutureTense();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'toInfinitive',\n\t    value: function toInfinitive() {\n\t      this.list.forEach(function (ts) {\n\t        ts.toInfinitive();\n\t      });\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'asAdjective',\n\t    value: function asAdjective() {\n\t      return this.list.map(function (ts) {\n\t        return ts.asAdjective();\n\t      });\n\t    }\n\t  }], [{\n\t    key: 'find',\n\t    value: function find(r, n) {\n\t      r = r.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n\t      r = r.splitAfter('#Comma');\n\t      if (typeof n === 'number') {\n\t        r = r.get(n);\n\t      }\n\t      r.list = r.list.map(function (ts) {\n\t        return new Verb(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n\t      });\n\t      return new Text(r.list, this.lexicon, this.parent);\n\t    }\n\t  }]);\n\t\n\t  return Verbs;\n\t}(Text);\n\t\n\tmodule.exports = Verbs;\n\t\n\t},{\"../../index\":25,\"./verb\":129}],111:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar predict = _dereq_('./methods/predict');\n\t\n\t//'walking' - aka progressive\n\tvar isContinuous = function isContinuous(ts) {\n\t  return ts.match('#Gerund').found;\n\t};\n\t\n\t//will not walk\n\tvar isNegative = function isNegative(ts) {\n\t  var negs = ts.match('#Negative').list;\n\t  if (negs.length === 2) {\n\t    return false;\n\t  }\n\t  if (negs.length === 1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//been walked by..\n\tvar isPassive = function isPassive(ts) {\n\t  if (ts.match('is being #PastTense').found) {\n\t    return true;\n\t  }\n\t  if (ts.match('(had|has) been #PastTense').found) {\n\t    return true;\n\t  }\n\t  if (ts.match('will have been #PastTense').found) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//had walked\n\tvar isPerfect = function isPerfect(ts) {\n\t  if (ts.match('^(had|have) #PastTense')) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//should walk, could walk\n\tvar getModal = function getModal(ts) {\n\t  var modal = ts.match('#Modal');\n\t  if (!modal.found) {\n\t    return null;\n\t  }\n\t  return modal.out('normal');\n\t};\n\t\n\t//past/present/future\n\tvar getTense = function getTense(ts) {\n\t  //look at the preceding words\n\t  if (ts.auxillary.found) {\n\t    //'will'\n\t    if (ts.match('will have #PastTense').found) {\n\t      return 'Past';\n\t    }\n\t    if (ts.auxillary.match('will').found) {\n\t      return 'Future';\n\t    }\n\t    //'was'\n\t    if (ts.auxillary.match('was').found) {\n\t      return 'Past';\n\t    }\n\t  }\n\t  //look at the main verb tense\n\t  if (ts.verb) {\n\t    var tenses = {\n\t      PastTense: 'Past',\n\t      FutureTense: 'Future',\n\t      FuturePerfect: 'Future'\n\t    };\n\t    var tense = predict(ts.verb); //yikes\n\t    return tenses[tense] || 'Present';\n\t  }\n\t  return 'Present';\n\t};\n\t\n\t// const isImperative = function(ts) {};\n\t// const isConditional = function(ts) {};\n\t\n\t// detect signals in auxillary verbs\n\t// 'will' -> future, 'have'->perfect, modals, negatives, adverbs\n\tvar interpret = function interpret(ts) {\n\t  var isNeg = isNegative(ts);\n\t  // let aux = ts.auxillary.clone();\n\t  // aux = aux.not('(#Negative|#Adverb)');\n\t  var obj = {\n\t    negative: isNeg,\n\t    continuous: isContinuous(ts),\n\t    passive: isPassive(ts),\n\t    perfect: isPerfect(ts),\n\t    modal: getModal(ts),\n\t    tense: getTense(ts)\n\t  };\n\t  return obj;\n\t};\n\tmodule.exports = interpret;\n\t\n\t},{\"./methods/predict\":123}],112:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar checkIrregulars = _dereq_('./irregulars');\n\tvar suffixPass = _dereq_('./suffixes');\n\tvar toActor = _dereq_('./toActor');\n\tvar toAdjective = _dereq_('./toAdjective');\n\tvar generic = _dereq_('./generic');\n\tvar predict = _dereq_('../predict');\n\tvar toInfinitive = _dereq_('../toInfinitive');\n\tvar toBe = _dereq_('./toBe');\n\t\n\t//turn a verb into all it's forms\n\tvar conjugate = function conjugate(t, verbose) {\n\t\n\t  //handle is/was/will-be specially\n\t  if (t.normal === 'is' || t.normal === 'was' || t.normal === 'will') {\n\t    return toBe();\n\t  }\n\t\n\t  //dont conjugate didn't\n\t  if (t.tag.Contraction) {\n\t    t.text = t.silent_term;\n\t  }\n\t  var all = {\n\t    PastTense: null,\n\t    PresentTense: null,\n\t    // FutureTense: null,\n\t    Infinitive: null,\n\t    Gerund: null,\n\t    Actor: null\n\t  };\n\t  //first, get its current form\n\t  var form = predict(t);\n\t  if (form) {\n\t    all[form] = t.normal;\n\t  }\n\t  if (form !== 'Infinitive') {\n\t    all['Infinitive'] = toInfinitive(t, verbose) || '';\n\t  }\n\t  //check irregular forms\n\t  var irregObj = checkIrregulars(all['Infinitive']) || {};\n\t  Object.keys(irregObj).forEach(function (k) {\n\t    if (irregObj[k] && !all[k]) {\n\t      all[k] = irregObj[k];\n\t    }\n\t  });\n\t  //ok, send this infinitive to all conjugators\n\t  var inf = all['Infinitive'] || t.normal;\n\t\n\t  //check suffix rules\n\t  var suffObj = suffixPass(inf);\n\t  Object.keys(suffObj).forEach(function (k) {\n\t    if (suffObj[k] && !all[k]) {\n\t      all[k] = suffObj[k];\n\t    }\n\t  });\n\t  //ad-hoc each missing form\n\t  //to Actor\n\t  if (!all.Actor) {\n\t    //a phrasal like 'step up' can't be an actor -'step upper'?\n\t    // if (!t.tag.PhrasalVerb) {\n\t    all.Actor = toActor(inf);\n\t    // }\n\t  }\n\t  //add adjective, like walk->walkable\n\t  all.Adjective = toAdjective(all.Infinitive);\n\t\n\t  //use fallback, generic transformations\n\t  Object.keys(all).forEach(function (k) {\n\t    if (!all[k] && generic[k]) {\n\t      all[k] = generic[k](all);\n\t    }\n\t  });\n\t\n\t  return all;\n\t};\n\t\n\tmodule.exports = conjugate;\n\t\n\t},{\"../predict\":123,\"../toInfinitive\":126,\"./generic\":115,\"./irregulars\":117,\"./suffixes\":118,\"./toActor\":119,\"./toAdjective\":120,\"./toBe\":121}],113:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = [{\n\t  reg: /(eave)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1d',\n\t    gr: 'eaving',\n\t    ar: '$1r'\n\t  }\n\t}, {\n\t  reg: /(ink)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: 'unk',\n\t    gr: '$1ing',\n\t    ar: '$1er'\n\t  }\n\t}, {\n\t  reg: /(end)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: 'ent',\n\t    gr: '$1ing',\n\t    ar: '$1er'\n\t  }\n\t}, {\n\t  reg: /(ide)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: 'ode',\n\t    gr: 'iding',\n\t    ar: 'ider'\n\t  }\n\t}, {\n\t  reg: /(ake)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: 'ook',\n\t    gr: 'aking',\n\t    ar: '$1r'\n\t  }\n\t}, {\n\t  reg: /(eed)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1ed',\n\t    gr: '$1ing',\n\t    ar: '$1er'\n\t  }\n\t}, {\n\t  reg: /(e)(ep)$/i,\n\t  repl: {\n\t    pr: '$1$2s',\n\t    pa: '$1pt',\n\t    gr: '$1$2ing',\n\t    ar: '$1$2er'\n\t  }\n\t}, {\n\t  reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n\t  repl: {\n\t    pr: '$1es',\n\t    pa: '$1ed',\n\t    gr: '$1ing',\n\t    prt: '$1en'\n\t  }\n\t}, {\n\t  reg: /([i|f|rr])y$/i,\n\t  repl: {\n\t    pr: '$1ies',\n\t    pa: '$1ied',\n\t    gr: '$1ying'\n\t  }\n\t}, {\n\t  reg: /([td]er)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /([bd]l)e$/i,\n\t  repl: {\n\t    pr: '$1es',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /(ish|tch|ess)$/i,\n\t  repl: {\n\t    pr: '$1es',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /(ion|end|e[nc]t)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /(om)e$/i,\n\t  repl: {\n\t    pr: '$1es',\n\t    pa: 'ame',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /([aeiu])([pt])$/i,\n\t  repl: {\n\t    pr: '$1$2s',\n\t    pa: '$1$2',\n\t    gr: '$1$2$2ing'\n\t  }\n\t}, {\n\t  reg: /(er)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /(en)$/i,\n\t  repl: {\n\t    pr: '$1s',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}, {\n\t  reg: /(..)(ow)$/i,\n\t  repl: {\n\t    pr: '$1$2s',\n\t    pa: '$1ew',\n\t    gr: '$1$2ing',\n\t    prt: '$1$2n'\n\t  }\n\t}, {\n\t  reg: /(..)([cs]h)$/i,\n\t  repl: {\n\t    pr: '$1$2es',\n\t    pa: '$1$2ed',\n\t    gr: '$1$2ing'\n\t  }\n\t}, {\n\t  reg: /([^aeiou][ou])(g|d)$/i,\n\t  repl: {\n\t    pr: '$1$2s',\n\t    pa: '$1$2$2ed',\n\t    gr: '$1$2$2ing'\n\t  }\n\t}, {\n\t  reg: /([^aeiou][aeiou])(b|t|p|m)$/i,\n\t  repl: {\n\t    pr: '$1$2s',\n\t    pa: '$1$2$2ed',\n\t    gr: '$1$2$2ing'\n\t  }\n\t}, {\n\t  reg: /([aeiou]zz)$/i,\n\t  repl: {\n\t    pr: '$1es',\n\t    pa: '$1ed',\n\t    gr: '$1ing'\n\t  }\n\t}];\n\t\n\t},{}],114:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar checkIrregulars = _dereq_('./irregulars');\n\tvar suffixPass = _dereq_('./suffixes');\n\tvar generic = _dereq_('./generic');\n\t//this method is the same as regular conjugate, but optimised for use in the lexicon during warm-up.\n\t//it's way faster because it knows input is already infinitive\n\t\n\tvar want = ['Gerund', 'PastTense', 'PresentTense'];\n\t\n\tvar fasterConjugate = function fasterConjugate(inf) {\n\t  var all = {\n\t    Infinitive: inf\n\t  };\n\t  var irregObj = checkIrregulars(all['Infinitive']);\n\t  if (irregObj !== null) {\n\t    Object.keys(irregObj).forEach(function (k) {\n\t      if (irregObj[k] && !all[k]) {\n\t        all[k] = irregObj[k];\n\t      }\n\t    });\n\t  }\n\t  //check suffix rules\n\t  var suffObj = suffixPass(inf);\n\t  Object.keys(suffObj).forEach(function (k) {\n\t    if (suffObj[k] && !all[k]) {\n\t      all[k] = suffObj[k];\n\t    }\n\t  });\n\t  for (var i = 0; i < want.length; i++) {\n\t    if (!all[want[i]]) {\n\t      all[want[i]] = generic[want[i]](all);\n\t    }\n\t  }\n\t  return all;\n\t};\n\tmodule.exports = fasterConjugate;\n\t// console.log(fasterConjugate('walk'));\n\t\n\t},{\"./generic\":115,\"./irregulars\":117,\"./suffixes\":118}],115:[function(_dereq_,module,exports){\n\t'use strict';\n\t//non-specifc, 'hail-mary' transforms from infinitive, into other forms\n\t\n\tvar fns = _dereq_('../../../../../fns'); //jaja!\n\t\n\tvar generic = {\n\t\n\t  Gerund: function Gerund(o) {\n\t    var inf = o.Infinitive;\n\t    if (fns.endsWith(inf, 'e')) {\n\t      return inf.replace(/e$/, 'ing');\n\t    }\n\t    return inf + 'ing';\n\t  },\n\t\n\t  PresentTense: function PresentTense(o) {\n\t    var inf = o.Infinitive;\n\t    if (fns.endsWith(inf, 's')) {\n\t      return inf + 'es';\n\t    }\n\t    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n\t      return inf.slice(0, -1) + 'ies';\n\t    }\n\t    return inf + 's';\n\t  },\n\t\n\t  PastTense: function PastTense(o) {\n\t    var inf = o.Infinitive;\n\t    if (fns.endsWith(inf, 'e')) {\n\t      return inf + 'd';\n\t    }\n\t    if (fns.endsWith(inf, 'ed')) {\n\t      return inf;\n\t    }\n\t    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n\t      return inf.slice(0, -1) + 'ied';\n\t    }\n\t    return inf + 'ed';\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = generic;\n\t\n\t},{\"../../../../../fns\":21}],116:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar conjugate = _dereq_('./conjugate');\n\tvar toBe = _dereq_('./toBe');\n\t\n\t//conjugation using auxillaries+adverbs and stuff\n\tvar multiWord = function multiWord(vb, verbose) {\n\t  var isNegative = vb.negative.found;\n\t  var isPlural = false;\n\t  //handle 'to be' verb seperately\n\t  if (vb.verb.tag.Copula || vb.verb.normal === 'be' && vb.auxillary.match('will').found) {\n\t    return toBe(isPlural, isNegative);\n\t  }\n\t\n\t  var obj = conjugate(vb.verb, verbose);\n\t  //apply particles\n\t  if (vb.particle.found) {\n\t    Object.keys(obj).forEach(function (k) {\n\t      obj[k] = obj[k] + vb.particle.out();\n\t    });\n\t  }\n\t  //apply adverbs\n\t  if (vb.adverbs.found) {\n\t    Object.keys(obj).forEach(function (k) {\n\t      obj[k] = obj[k] + vb.adverbs.out();\n\t    });\n\t  }\n\t  //apply negative\n\t  if (isNegative) {\n\t    obj.PastTense = 'did not ' + obj.Infinitive;\n\t    obj.PresentTense = 'does not ' + obj.Infinitive;\n\t  }\n\t  //future Tense is pretty straightforward\n\t  if (!obj.FutureTense) {\n\t    if (isNegative) {\n\t      obj.FutureTense = 'will not ' + obj.Infinitive;\n\t    } else {\n\t      obj.FutureTense = 'will ' + obj.Infinitive;\n\t    }\n\t  }\n\t  return obj;\n\t};\n\tmodule.exports = multiWord;\n\t\n\t},{\"./conjugate\":112,\"./toBe\":121}],117:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar irregulars = _dereq_('../../../../../data').irregular_verbs; //weeee!\n\tvar fns = _dereq_('../../../../../fns'); //weeee!\n\tvar infArr = Object.keys(irregulars);\n\tvar forms = ['Participle', 'Gerund', 'PastTense', 'PresentTense', 'FuturePerfect', 'PerfectTense', 'Actor'];\n\t\n\tvar checkIrregulars = function checkIrregulars(str) {\n\t  //fast infinitive lookup\n\t  if (irregulars[str] !== undefined) {\n\t    var obj = fns.copy(irregulars[str]);\n\t    obj.Infinitive = str;\n\t    return obj;\n\t  }\n\t  //longer check of known-verb forms\n\t  for (var i = 0; i < infArr.length; i++) {\n\t    for (var o = 0; o < forms.length; o++) {\n\t      var irObj = irregulars[infArr[i]];\n\t      if (irObj[forms[o]] === str) {\n\t        var _obj = fns.copy(irObj);\n\t        _obj.Infinitive = infArr[i];\n\t        return _obj;\n\t      }\n\t    }\n\t  }\n\t  return {};\n\t};\n\t\n\tmodule.exports = checkIrregulars;\n\t// console.log(checkIrregulars('bit'));\n\t\n\t},{\"../../../../../data\":6,\"../../../../../fns\":21}],118:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar rules = _dereq_('./data/rules');\n\tvar mapping = {\n\t  pr: 'PresentTense',\n\t  pa: 'PastTense',\n\t  gr: 'Gerund',\n\t  prt: 'Participle',\n\t  ar: 'Actor'\n\t};\n\tvar keys = Object.keys(mapping);\n\t\n\t//check suffix rules\n\tvar suffixPass = function suffixPass(inf) {\n\t  var found = {};\n\t  for (var i = 0; i < rules.length; i++) {\n\t    if (inf.match(rules[i].reg)) {\n\t      var obj = rules[i].repl;\n\t      for (var o = 0; o < keys.length; o++) {\n\t        if (obj[keys[o]]) {\n\t          var key = mapping[keys[o]];\n\t          found[key] = inf.replace(rules[i].reg, obj[keys[o]]);\n\t        }\n\t      }\n\t      return found;\n\t    }\n\t  }\n\t  return found;\n\t};\n\t\n\tmodule.exports = suffixPass;\n\t\n\t},{\"./data/rules\":113}],119:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turn 'walk' into 'walker'\n\t\n\tvar irregulars = {\n\t  'tie': 'tier',\n\t  'dream': 'dreamer',\n\t  'sail': 'sailer',\n\t  'run': 'runner',\n\t  'rub': 'rubber',\n\t  'begin': 'beginner',\n\t  'win': 'winner',\n\t  'claim': 'claimant',\n\t  'deal': 'dealer',\n\t  'spin': 'spinner'\n\t};\n\tvar dont = {\n\t  'aid': 1,\n\t  'fail': 1,\n\t  'appear': 1,\n\t  'happen': 1,\n\t  'seem': 1,\n\t  'try': 1,\n\t  'say': 1,\n\t  'marry': 1,\n\t  'be': 1,\n\t  'forbid': 1,\n\t  'understand': 1,\n\t  'bet': 1\n\t};\n\tvar rules = [{\n\t  'reg': /e$/i,\n\t  'repl': 'er'\n\t}, {\n\t  'reg': /([aeiou])([mlgp])$/i,\n\t  'repl': '$1$2$2er'\n\t}, {\n\t  'reg': /([rlf])y$/i,\n\t  'repl': '$1ier'\n\t}, {\n\t  'reg': /^(.?.[aeiou])t$/i,\n\t  'repl': '$1tter'\n\t}];\n\t\n\tvar toActor = function toActor(inf) {\n\t  //check blacklist\n\t  if (dont[inf]) {\n\t    return null;\n\t  }\n\t  //check irregulars\n\t  if (irregulars[inf]) {\n\t    return irregulars[inf];\n\t  }\n\t  //try rules\n\t  for (var i = 0; i < rules.length; i++) {\n\t    if (inf.match(rules[i].reg)) {\n\t      return inf.replace(rules[i].reg, rules[i].repl);\n\t    }\n\t  }\n\t  //yup,\n\t  return inf + 'er';\n\t};\n\t\n\tmodule.exports = toActor;\n\t\n\t},{}],120:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\t\n\tvar rules = [[/[^aeiou]y$/, 'i'], //relay - reliable\n\t[/([aeiou][n])$/, '$1n']];\n\t\n\t//convert - 'convertible'\n\t//http://grammarist.com/usage/able-ible/\n\t//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\n\tvar ible_suffixes = {\n\t  collect: true,\n\t  exhaust: true,\n\t  convert: true,\n\t  digest: true,\n\t  discern: true,\n\t  dismiss: true,\n\t  reverse: true,\n\t  access: true,\n\t  collapse: true,\n\t  express: true\n\t};\n\t\n\tvar irregulars = {\n\t  eat: 'edible',\n\t  hear: 'audible',\n\t  see: 'visible',\n\t  defend: 'defensible',\n\t  write: 'legible',\n\t  move: 'movable',\n\t  divide: 'divisible',\n\t  perceive: 'perceptible'\n\t};\n\t\n\t//takes an infitive verb, and returns an adjective form\n\tvar toAdjective = function toAdjective(str) {\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t  for (var i = 0; i < rules.length; i++) {\n\t    if (str.match(rules[i][0])) {\n\t      str = str.replace(rules[i][0], rules[i][1]);\n\t    }\n\t  }\n\t  var adj = str + 'able';\n\t  if (ible_suffixes[str]) {\n\t    adj = str + 'ible';\n\t  }\n\t  return adj;\n\t};\n\t\n\tmodule.exports = toAdjective;\n\t// console.log(toAdjective('buy'));\n\t\n\t},{}],121:[function(_dereq_,module,exports){\n\t'use strict';\n\t//too many special cases for is/was/will be\n\t\n\tvar toBe = function toBe(isPlural, isNegative) {\n\t  var obj = {\n\t    PastTense: 'was',\n\t    PresentTense: 'is',\n\t    FutureTense: 'will be',\n\t    Infinitive: 'is',\n\t    Gerund: 'being',\n\t    Actor: '',\n\t    PerfectTense: 'been',\n\t    Pluperfect: 'been'\n\t  };\n\t  if (isPlural) {\n\t    obj.PastTense = 'were';\n\t    obj.PresentTense = 'are';\n\t    obj.Infinitive = 'are';\n\t  }\n\t  if (isNegative) {\n\t    obj.PastTense += ' not';\n\t    obj.PresentTense += ' not';\n\t    obj.FutureTense = 'will not be';\n\t    obj.Infinitive += ' not';\n\t    obj.PerfectTense = 'not ' + obj.PerfectTense;\n\t    obj.Pluperfect = 'not ' + obj.Pluperfect;\n\t  }\n\t  return obj;\n\t};\n\tmodule.exports = toBe;\n\t\n\t},{}],122:[function(_dereq_,module,exports){\n\t'use strict';\n\t//sometimes you can tell if a verb is plural/singular, just by the verb\n\t// i am / we were\n\t//othertimes you need its noun 'we walk' vs 'i walk'\n\t\n\tvar isPlural = function isPlural(vb) {\n\t  if (vb.match('(are|were|does)').found) {\n\t    return true;\n\t  }\n\t  if (vb.match('(is|am|do|was)').found) {\n\t    return false;\n\t  }\n\t  //consider its prior noun\n\t  var noun = vb.getNoun();\n\t  if (noun && noun.found) {\n\t    if (noun.match('#Plural').found) {\n\t      return true;\n\t    }\n\t    if (noun.match('#Singular').found) {\n\t      return false;\n\t    }\n\t  }\n\t  return null;\n\t};\n\tmodule.exports = isPlural;\n\t\n\t},{}],123:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('../../../../../fns'); //jaja!\n\tvar suffix_rules = _dereq_('./suffix_rules');\n\t\n\tvar goodTypes = {\n\t  Infinitive: true,\n\t  Gerund: true,\n\t  PastTense: true,\n\t  PresentTense: true,\n\t  FutureTense: true,\n\t  PerfectTense: true,\n\t  Pluperfect: true,\n\t  FuturePerfect: true,\n\t  Participle: true\n\t};\n\t\n\tvar predictForm = function predictForm(term, verbose) {\n\t  //do we already know the form?\n\t  var keys = Object.keys(goodTypes);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    if (term.tag[keys[i]]) {\n\t      if (verbose) {\n\t        console.log('predicted ' + keys[i] + ' from pos', path);\n\t      }\n\t      return keys[i];\n\t    }\n\t  }\n\t  //consult our handy suffix rules\n\t  var arr = Object.keys(suffix_rules);\n\t  for (var _i = 0; _i < arr.length; _i++) {\n\t    if (fns.endsWith(term.normal, arr[_i]) && arr[_i].length < term.normal.length) {\n\t      if (verbose) {\n\t        var msg = 'predicted ' + suffix_rules[arr[_i]] + ' from suffix ' + arr[_i];\n\t        console.log(msg, path);\n\t      }\n\t      return suffix_rules[arr[_i]];\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = predictForm;\n\t\n\t},{\"../../../../../fns\":21,\"./suffix_rules\":124}],124:[function(_dereq_,module,exports){\n\t'use strict';\n\t//suffix signals for verb tense, generated from test data\n\t\n\tvar compact = {\n\t  'Gerund': ['ing'],\n\t  'Actor': ['erer'],\n\t  'Infinitive': ['ate', 'ize', 'tion', 'rify', 'then', 'ress', 'ify', 'age', 'nce', 'ect', 'ise', 'ine', 'ish', 'ace', 'ash', 'ure', 'tch', 'end', 'ack', 'and', 'ute', 'ade', 'ock', 'ite', 'ase', 'ose', 'use', 'ive', 'int', 'nge', 'lay', 'est', 'ain', 'ant', 'ent', 'eed', 'er', 'le', 'own', 'unk', 'ung', 'en'],\n\t  'PastTense': ['ed', 'lt', 'nt', 'pt', 'ew', 'ld'],\n\t  'PresentTense': ['rks', 'cks', 'nks', 'ngs', 'mps', 'tes', 'zes', 'ers', 'les', 'acks', 'ends', 'ands', 'ocks', 'lays', 'eads', 'lls', 'els', 'ils', 'ows', 'nds', 'ays', 'ams', 'ars', 'ops', 'ffs', 'als', 'urs', 'lds', 'ews', 'ips', 'es', 'ts', 'ns', 's']\n\t};\n\tvar suffix_rules = {};\n\tvar keys = Object.keys(compact);\n\tvar l = keys.length;\n\t\n\tfor (var i = 0; i < l; i++) {\n\t  var l2 = compact[keys[i]].length;\n\t  for (var o = 0; o < l2; o++) {\n\t    suffix_rules[compact[keys[i]][o]] = keys[i];\n\t  }\n\t}\n\tmodule.exports = suffix_rules;\n\t\n\t},{}],125:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\t\n\tvar rules = [[/y$/, 'i'], //relay - reliable\n\t[/([aeiou][n])$/, '$1n']];\n\t\n\t//convert - 'convertible'\n\t//http://grammarist.com/usage/able-ible/\n\t//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\n\tvar ible_suffixes = {\n\t  collect: true,\n\t  exhaust: true,\n\t  convert: true,\n\t  digest: true,\n\t  discern: true,\n\t  dismiss: true,\n\t  reverse: true,\n\t  access: true,\n\t  collapse: true,\n\t  express: true\n\t};\n\t\n\tvar irregulars = {\n\t  eat: 'edible',\n\t  hear: 'audible',\n\t  see: 'visible',\n\t  defend: 'defensible',\n\t  write: 'legible',\n\t  move: 'movable',\n\t  divide: 'divisible',\n\t  perceive: 'perceptible'\n\t};\n\t\n\t//takes an infitive verb, and returns an adjective form\n\tvar toAdjective = function toAdjective(str) {\n\t  if (irregulars[str]) {\n\t    return irregulars[str];\n\t  }\n\t  for (var i = 0; i < rules.length; i++) {\n\t    if (str.match(rules[i][0])) {\n\t      str = str.replace(rules[i][0], rules[i][1]);\n\t    }\n\t  }\n\t  var adj = str + 'able';\n\t  if (ible_suffixes[str]) {\n\t    adj = str + 'ible';\n\t  }\n\t  return adj;\n\t};\n\t\n\tmodule.exports = toAdjective;\n\t\n\t},{}],126:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turn any verb into its infinitive form\n\t\n\tvar rules = _dereq_('./rules');\n\tvar irregulars = _dereq_('../../../../../data').irregular_verbs;\n\tvar predict = _dereq_('../predict');\n\t\n\t//map the irregulars for easy infinitive lookup\n\t// {bought: 'buy'}\n\tvar verb_mapping = function verb_mapping() {\n\t  return Object.keys(irregulars).reduce(function (h, k) {\n\t    Object.keys(irregulars[k]).forEach(function (pos) {\n\t      h[irregulars[k][pos]] = k;\n\t    });\n\t    return h;\n\t  }, {});\n\t};\n\t\n\tirregulars = verb_mapping();\n\t\n\tvar toInfinitive = function toInfinitive(t) {\n\t  if (t.tag.Infinitive) {\n\t    return t.normal;\n\t  }\n\t  //check the irregular verb conjugations\n\t  if (irregulars[t.normal]) {\n\t    return irregulars[t.normal];\n\t  }\n\t  //check the suffix rules\n\t  var form = predict(t);\n\t  if (rules[form]) {\n\t    for (var i = 0; i < rules[form].length; i++) {\n\t      var rule = rules[form][i];\n\t      if (t.normal.match(rule.reg)) {\n\t        return t.normal.replace(rule.reg, rule.to);\n\t      }\n\t    }\n\t  }\n\t  return t.normal;\n\t};\n\t\n\tmodule.exports = toInfinitive;\n\t\n\t},{\"../../../../../data\":6,\"../predict\":123,\"./rules\":127}],127:[function(_dereq_,module,exports){\n\t'use strict';\n\t//rules for turning a verb into infinitive form\n\t\n\tvar rules = {\n\t  Participle: [{\n\t    reg: /own$/i,\n\t    to: 'ow'\n\t  }, {\n\t    reg: /(.)un([g|k])$/i,\n\t    to: '$1in$2'\n\t  }],\n\t  Actor: [{\n\t    reg: /(er)er$/i,\n\t    to: '$1'\n\t  }],\n\t  PresentTense: [{\n\t    reg: /(ies)$/i,\n\t    to: 'y'\n\t  }, {\n\t    reg: /(tch|sh)es$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(ss|zz)es$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /([tzlshicgrvdnkmu])es$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(ow)s$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(op)s$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /([eirs])ts$/i,\n\t    to: '$1t'\n\t  }, {\n\t    reg: /(ll)s$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(el)s$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(ip)es$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /ss$/i,\n\t    to: 'ss'\n\t  }, {\n\t    reg: /s$/i,\n\t    to: ''\n\t  }],\n\t  Gerund: [{\n\t    reg: /pping$/i,\n\t    to: 'p'\n\t  }, {\n\t    reg: /lling$/i,\n\t    to: 'll'\n\t  }, {\n\t    reg: /tting$/i,\n\t    to: 't'\n\t  }, {\n\t    reg: /ssing$/i,\n\t    to: 'ss'\n\t  }, {\n\t    reg: /gging$/i,\n\t    to: 'g'\n\t  }, {\n\t    reg: /([^aeiou])ying$/i,\n\t    to: '$1y'\n\t  }, {\n\t    reg: /([^ae]i.)ing$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(ea.)ing$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(ch|sh)ing$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(..)ing$/i,\n\t    to: '$1'\n\t  }],\n\t  PastTense: [{\n\t    reg: /(ued)$/i,\n\t    to: 'ue'\n\t  }, {\n\t    reg: /([aeiou]zz)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(e|i)lled$/i,\n\t    to: '$1ll'\n\t  }, {\n\t    reg: /(sh|ch)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(tl|gl)ed$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(um?pt?)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(ss)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /pped$/i,\n\t    to: 'p'\n\t  }, {\n\t    reg: /tted$/i,\n\t    to: 't'\n\t  }, {\n\t    reg: /gged$/i,\n\t    to: 'g'\n\t  }, {\n\t    reg: /(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(.ut)ed$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(us)ed$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /(..[^aeiouy])ed$/i,\n\t    to: '$1e'\n\t  }, {\n\t    reg: /ied$/i,\n\t    to: 'y'\n\t  }, {\n\t    reg: /(.o)ed$/i,\n\t    to: '$1o'\n\t  }, {\n\t    reg: /(.i)ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /(a[^aeiou])ed$/i,\n\t    to: '$1'\n\t  }, {\n\t    reg: /([rl])ew$/i,\n\t    to: '$1ow'\n\t  }, {\n\t    reg: /([pl])t$/i,\n\t    to: '$1t'\n\t  }]\n\t};\n\tmodule.exports = rules;\n\t\n\t},{}],128:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turns a verb negative - may not have enough information to do it properly\n\t// (eg 'did not eat' vs 'does not eat') - needs the noun\n\t\n\tvar toInfinitive = _dereq_('./methods/toInfinitive');\n\t\n\tvar toNegative = function toNegative(ts) {\n\t  //would not walk\n\t  var modal = ts.match('#Auxillary').first(); //.notIf('(is|are|was|will|has|had)').first(); //.first();\n\t  if (modal.found) {\n\t    var index = modal.list[0].index();\n\t    return ts.parentTerms.insertAt(index + 1, 'not', 'Verb');\n\t  }\n\t\n\t  //words that pair easily with a 'not' - 'is not'\n\t  var copula = ts.match('(#Copula|will|has|had|do)').first();\n\t  if (copula.found) {\n\t    var _index = copula.list[0].index();\n\t    return ts.parentTerms.insertAt(_index + 1, 'not', 'Verb');\n\t  }\n\t\n\t  var isPlural = ts.isPlural();\n\t\n\t  //walked -> did not walk\n\t  var past = ts.match('#PastTense').last();\n\t  if (past.found) {\n\t    var _vb = past.list[0];\n\t    var _index2 = _vb.index();\n\t    _vb.terms[0].text = toInfinitive(_vb.terms[0]);\n\t    if (isPlural) {\n\t      return ts.parentTerms.insertAt(_index2, 'do not', 'Verb');\n\t    }\n\t    return ts.parentTerms.insertAt(_index2, 'did not', 'Verb');\n\t  }\n\t\n\t  //walks -> does not walk\n\t  var pres = ts.match('#PresentTense').first();\n\t  if (pres.found) {\n\t    var _vb2 = pres.list[0];\n\t    var _index3 = _vb2.index();\n\t    _vb2.terms[0].text = toInfinitive(_vb2.terms[0]);\n\t    //some things use 'do not', everything else is 'does not'\n\t    var noun = ts.getNoun();\n\t    if (noun.match('(i|we|they|you)').found) {\n\t      return ts.parentTerms.insertAt(_index3, 'do not', 'Verb');\n\t    }\n\t    return ts.parentTerms.insertAt(_index3, 'does not', 'Verb');\n\t  }\n\t\n\t  //not walking\n\t  var gerund = ts.match('#Gerund').last();\n\t  if (gerund.found) {\n\t    var _index4 = gerund.list[0].index();\n\t    return ts.parentTerms.insertAt(_index4, 'not', 'Verb');\n\t  }\n\t\n\t  //walk -> do not walk\n\t  var vb = ts.match('#Verb').last();\n\t  if (vb.found) {\n\t    vb = vb.list[0];\n\t    var _index5 = vb.index();\n\t    vb.terms[0].text = toInfinitive(vb.terms[0]);\n\t    if (isPlural) {\n\t      return ts.parentTerms.insertAt(_index5, 'does not', 'Verb');\n\t    }\n\t    return ts.parentTerms.insertAt(_index5, 'did not', 'Verb');\n\t  }\n\t\n\t  return ts;\n\t};\n\tmodule.exports = toNegative;\n\t\n\t},{\"./methods/toInfinitive\":126}],129:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Terms = _dereq_('../../paths').Terms;\n\tvar _conjugate = _dereq_('./methods/conjugate');\n\tvar toAdjective = _dereq_('./methods/toAdjective');\n\tvar interpret = _dereq_('./interpret');\n\tvar _toNegative = _dereq_('./toNegative');\n\tvar _isPlural = _dereq_('./methods/isPlural');\n\t\n\tvar Verb = function (_Terms) {\n\t  _inherits(Verb, _Terms);\n\t\n\t  function Verb(arr, lexicon, refText, refTerms) {\n\t    _classCallCheck(this, Verb);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Verb.__proto__ || Object.getPrototypeOf(Verb)).call(this, arr, lexicon, refText, refTerms));\n\t\n\t    _this.parse();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Verb, [{\n\t    key: 'parse',\n\t    value: function parse() {\n\t      this.negative = this.match('#Negative');\n\t      this.adverbs = this.match('#Adverb');\n\t      var aux = this.clone().not('(#Adverb|#Negative)');\n\t      this.verb = aux.match('#Verb').not('#Particle').last();\n\t      this.particle = aux.match('#Particle').last();\n\t      if (this.verb.found) {\n\t        this.verb = this.verb.list[0].terms[0];\n\t      }\n\t      this.auxillary = aux.match('#Auxillary+');\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data(verbose) {\n\t      return {\n\t        text: this.out('text'),\n\t        normal: this.out('normal'),\n\t        parts: {\n\t          negative: this.negative.out('normal'),\n\t          auxillary: this.auxillary.out('normal'),\n\t          verb: this.verb.out('normal'),\n\t          adverbs: this.adverbs.out('normal')\n\t        },\n\t        interpret: interpret(this, verbose),\n\t        conjugations: this.conjugate()\n\t      };\n\t    }\n\t  }, {\n\t    key: 'getNoun',\n\t    value: function getNoun() {\n\t      if (!this.refTerms) {\n\t        return null;\n\t      }\n\t      var str = '#Adjective? #Noun+ ' + this.out('normal');\n\t      return this.refTerms.match(str).match('#Noun+');\n\t    }\n\t    //which conjugation is this right now?\n\t\n\t  }, {\n\t    key: 'conjugation',\n\t    value: function conjugation() {\n\t      return interpret(this, false).tense;\n\t    }\n\t    //blast-out all forms\n\t\n\t  }, {\n\t    key: 'conjugate',\n\t    value: function conjugate(verbose) {\n\t      return _conjugate(this, verbose);\n\t    }\n\t  }, {\n\t    key: 'isPlural',\n\t    value: function isPlural() {\n\t      return _isPlural(this);\n\t    }\n\t    /** negation **/\n\t\n\t  }, {\n\t    key: 'isNegative',\n\t    value: function isNegative() {\n\t      return this.match('#Negative').list.length === 1;\n\t    }\n\t  }, {\n\t    key: 'isPerfect',\n\t    value: function isPerfect() {\n\t      return this.auxillary.match('(have|had)').found;\n\t    }\n\t  }, {\n\t    key: 'toNegative',\n\t    value: function toNegative() {\n\t      if (this.isNegative()) {\n\t        return this;\n\t      }\n\t      return _toNegative(this);\n\t    }\n\t  }, {\n\t    key: 'toPositive',\n\t    value: function toPositive() {\n\t      return this.match('#Negative')['delete']();\n\t    }\n\t\n\t    /** conjugation **/\n\t\n\t  }, {\n\t    key: 'toPastTense',\n\t    value: function toPastTense() {\n\t      var obj = this.conjugate();\n\t      return this.replaceWith(obj.PastTense);\n\t    }\n\t  }, {\n\t    key: 'toPresentTense',\n\t    value: function toPresentTense() {\n\t      var obj = this.conjugate();\n\t      return this.replaceWith(obj.PresentTense);\n\t    }\n\t  }, {\n\t    key: 'toFutureTense',\n\t    value: function toFutureTense() {\n\t      var obj = this.conjugate();\n\t      return this.replaceWith(obj.FutureTense);\n\t    }\n\t  }, {\n\t    key: 'toInfinitive',\n\t    value: function toInfinitive() {\n\t      var obj = this.conjugate();\n\t      //NOT GOOD. please fix\n\t      this.terms[this.terms.length - 1].text = obj.Infinitive;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'asAdjective',\n\t    value: function asAdjective() {\n\t      return toAdjective(this.verb.out('normal'));\n\t    }\n\t  }]);\n\t\n\t  return Verb;\n\t}(Terms);\n\t\n\tmodule.exports = Verb;\n\t\n\t},{\"../../paths\":37,\"./interpret\":111,\"./methods/conjugate\":116,\"./methods/isPlural\":122,\"./methods/toAdjective\":125,\"./toNegative\":128}],130:[function(_dereq_,module,exports){\n\t//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n\t// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n\t// @spencermountain 2015 MIT\n\t'use strict';\n\t\n\tvar fns = _dereq_('./paths').fns;\n\tvar data = _dereq_('../data/index');\n\tvar abbreviations = Object.keys(data.abbreviations);\n\t\n\tvar naiive_split = function naiive_split(text) {\n\t  //first, split by newline\n\t  var splits = text.split(/(\\n+)/);\n\t  //split by period, question-mark, and exclamation-mark\n\t  splits = splits.map(function (str) {\n\t    return str.split(/(\\S.+?[.!?])(?=\\s+|$)/g);\n\t  });\n\t  return fns.flatten(splits);\n\t};\n\t\n\tvar sentence_parser = function sentence_parser(text) {\n\t  var sentences = [];\n\t  text = fns.ensureString(text);\n\t  //first do a greedy-split..\n\t  var chunks = [];\n\t  //ensure it 'smells like' a sentence\n\t  if (!text || typeof text !== 'string' || !text.match(/\\S/)) {\n\t    return sentences;\n\t  }\n\t  // This was the splitter regex updated to fix quoted punctuation marks.\n\t  // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n\t  // todo: look for side effects in this regex replacement:\n\t  var splits = naiive_split(text);\n\t  //filter-out the grap ones\n\t  for (var i = 0; i < splits.length; i++) {\n\t    var s = splits[i];\n\t    if (!s || s === '') {\n\t      continue;\n\t    }\n\t    //this is meaningful whitespace\n\t    if (!s.match(/\\S/)) {\n\t      //add it to the last one\n\t      if (chunks[chunks.length - 1]) {\n\t        chunks[chunks.length - 1] += s;\n\t        continue;\n\t      } else if (splits[i + 1]) {\n\t        //add it to the next one\n\t        splits[i + 1] = s + splits[i + 1];\n\t        continue;\n\t      }\n\t      //else, only whitespace, no terms, no sentence\n\t    }\n\t    chunks.push(s);\n\t  }\n\t\n\t  //detection of non-sentence chunks\n\t  var abbrev_reg = new RegExp('\\\\b(' + abbreviations.join('|') + ')[.!?] ?$', 'i');\n\t  var acronym_reg = new RegExp('[ |\\.][A-Z]\\.?( *)?$', 'i');\n\t  var elipses_reg = new RegExp('\\\\.\\\\.+( +)?$');\n\t  //loop through these chunks, and join the non-sentence chunks back together..\n\t  for (var _i = 0; _i < chunks.length; _i++) {\n\t    //should this chunk be combined with the next one?\n\t    if (chunks[_i + 1] && (chunks[_i].match(abbrev_reg) || chunks[_i].match(acronym_reg) || chunks[_i].match(elipses_reg))) {\n\t      chunks[_i + 1] = chunks[_i] + (chunks[_i + 1] || '');\n\t    } else if (chunks[_i] && chunks[_i].length > 0) {\n\t      //this chunk is a proper sentence..\n\t      sentences.push(chunks[_i]);\n\t      chunks[_i] = '';\n\t    }\n\t  }\n\t  //if we never got a sentence, return the given text\n\t  if (sentences.length === 0) {\n\t    return [text];\n\t  }\n\t  return sentences;\n\t};\n\t\n\tmodule.exports = sentence_parser;\n\t// console.log(sentence_parser('john f. kennedy'));\n\t\n\t},{\"../data/index\":6,\"./paths\":37}],131:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fixContraction = _dereq_('./fix');\n\t\n\tvar irregulars = {\n\t  'wanna': ['want', 'to'],\n\t  'gonna': ['going', 'to'],\n\t  'im': ['i', 'am'],\n\t  'alot': ['a', 'lot'],\n\t\n\t  'dont': ['do', 'not'],\n\t  'dun': ['do', 'not'],\n\t\n\t  'ive': ['i', 'have'],\n\t\n\t  'won\\'t': ['will', 'not'],\n\t  'wont': ['will', 'not'],\n\t\n\t  'can\\'t': ['can', 'not'],\n\t  'cant': ['can', 'not'],\n\t  'cannot': ['can', 'not'],\n\t\n\t  'aint': ['is', 'not'], //or 'are'\n\t  'ain\\'t': ['is', 'not'],\n\t  'shan\\'t': ['should', 'not'],\n\t  'imma': ['I', 'will'],\n\t\n\t  'where\\'d': ['where', 'did'],\n\t  'whered': ['where', 'did'],\n\t  'when\\'d': ['when', 'did'],\n\t  'whend': ['when', 'did'],\n\t  'how\\'d': ['how', 'did'],\n\t  'howd': ['how', 'did'],\n\t  'what\\'d': ['what', 'did'],\n\t  'whatd': ['what', 'did'],\n\t  'let\\'s': ['let', 'us'],\n\t\n\t  //multiple word contractions\n\t  'dunno': ['do', 'not', 'know'],\n\t  'brb': ['be', 'right', 'back'],\n\t  'gtg': ['got', 'to', 'go'],\n\t  'irl': ['in', 'real', 'life'],\n\t  'tbh': ['to', 'be', 'honest'],\n\t  'imo': ['in', 'my', 'opinion'],\n\t  'til': ['today', 'i', 'learned'],\n\t  'rn': ['right', 'now']\n\t};\n\t\n\t//check irregulars\n\tvar checkIrregulars = function checkIrregulars(ts) {\n\t  var irreg = Object.keys(irregulars);\n\t  for (var i = 0; i < irreg.length; i++) {\n\t    for (var t = 0; t < ts.terms.length; t++) {\n\t      if (ts.terms[t].normal === irreg[i]) {\n\t        var fix = irregulars[irreg[i]];\n\t        ts = fixContraction(ts, fix, t);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = checkIrregulars;\n\t\n\t},{\"./fix\":135}],132:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fixContraction = _dereq_('./fix');\n\tvar splitContraction = _dereq_('./split');\n\t\n\t//these are always contractions\n\t// const blacklist = {\n\t//   'it\\'s': true,\n\t//   'that\\'s': true\n\t// };\n\t\n\t// //rocket's red glare\n\t// if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n\t//   return true;\n\t// }\n\t// //next word is an adjective\n\t// if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n\t//   return false;\n\t// }\n\t\n\t\n\t// \"'s\" may be a contraction or a possessive\n\t// 'spencer's house' vs 'spencer's good'\n\tvar isPossessive = function isPossessive(ts, i) {\n\t  var t = ts.terms[i];\n\t  var next_t = ts.terms[i + 1];\n\t  //a pronoun can't be possessive - \"he's house\"\n\t  if (t.tag.Pronoun || t.tag.QuestionWord) {\n\t    return false;\n\t  }\n\t  //if end of sentence, it is possessive - \"was spencer's\"\n\t  if (!next_t) {\n\t    return true;\n\t  }\n\t  //a gerund suggests 'is walking'\n\t  if (next_t.tag.VerbPhrase) {\n\t    return false;\n\t  }\n\t  //spencer's house\n\t  if (next_t.tag.Noun) {\n\t    return true;\n\t  }\n\t  //rocket's red glare\n\t  if (next_t.tag.Adjective && ts.terms[i + 2] && ts.terms[i + 2].tag.Noun) {\n\t    return true;\n\t  }\n\t  //an adjective suggests 'is good'\n\t  if (next_t.tag.Adjective || next_t.tag.Adverb || next_t.tag.Verb) {\n\t    return false;\n\t  }\n\t  return false;\n\t};\n\t\n\t//handle ambigous contraction \"'s\"\n\tvar hardOne = function hardOne(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    //skip existing\n\t    if (ts.terms[i].silent_term) {\n\t      continue;\n\t    }\n\t    var parts = splitContraction(ts.terms[i]);\n\t    if (parts) {\n\t      //have we found a hard one\n\t      if (parts.end === 's') {\n\t        //spencer's house\n\t        if (isPossessive(ts, i)) {\n\t          ts.terms[i].tagAs('#Possessive', 'hard-contraction');\n\t          // console.log('==possessive==');\n\t          continue;\n\t        }\n\t        //is vs was\n\t        var arr = [parts.start, 'is'];\n\t        ts = fixContraction(ts, arr, i);\n\t        i += 1;\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = hardOne;\n\t\n\t},{\"./fix\":135,\"./split\":137}],133:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fixContraction = _dereq_('./fix');\n\tvar split = _dereq_('./split');\n\t\n\t//the formulaic contraction types:\n\tvar easy_ends = {\n\t  'll': 'will',\n\t  'd': 'would',\n\t  've': 'have',\n\t  're': 'are',\n\t  'm': 'am',\n\t  'n\\'t': 'not'\n\t  //these ones are a bit tricksier:\n\t  // 't': 'not',\n\t  // 's': 'is' //or was\n\t};\n\t\n\t//unambiguous contractions, like \"'ll\"\n\tvar easyOnes = function easyOnes(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    //skip existing\n\t    if (ts.terms[i].silent_term) {\n\t      continue;\n\t    }\n\t    var parts = split(ts.terms[i]);\n\t    if (parts) {\n\t      //make sure its an easy one\n\t      if (easy_ends[parts.end]) {\n\t        var arr = [parts.start, easy_ends[parts.end]];\n\t        ts = fixContraction(ts, arr, i);\n\t        i += 1;\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = easyOnes;\n\t\n\t},{\"./fix\":135,\"./split\":137}],134:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fixContraction = _dereq_('./fix');\n\tvar Term = _dereq_('../../term');\n\t\n\tvar numberRange = function numberRange(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    //skip existing\n\t    if (t.silent_term) {\n\t      continue;\n\t    }\n\t    //hyphens found in whitespace - '5 - 7'\n\t    if (t.tag.Value && i > 0 && t.whitespace.before === ' - ') {\n\t      var to = new Term('');\n\t      to.silent_term = 'to';\n\t      ts.insertAt(i, to);\n\t      ts.terms[i - 1].tagAs('NumberRange');\n\t      ts.terms[i].tagAs('NumberRange');\n\t      ts.terms[i].whitespace.before = '';\n\t      ts.terms[i].whitespace.after = '';\n\t      ts.terms[i + 1].tagAs('NumberRange');\n\t      return ts;\n\t    }\n\t    if (t.tag.NumberRange) {\n\t      var arr = t.text.split(/(-)/);\n\t      arr[1] = 'to';\n\t      ts = fixContraction(ts, arr, i);\n\t      ts.terms[i].tagAs('NumberRange');\n\t      ts.terms[i + 1].tagAs('NumberRange');\n\t      ts.terms[i + 2].tagAs('NumberRange');\n\t      i += 2;\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = numberRange;\n\t\n\t},{\"../../term\":177,\"./fix\":135}],135:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar Term = _dereq_('../../term');\n\t\n\tvar tags = {\n\t  'not': 'Negative',\n\t  'will': 'Verb',\n\t  'would': 'Modal',\n\t  'have': 'Verb',\n\t  'are': 'Copula',\n\t  'is': 'Copula',\n\t  'am': 'Verb'\n\t};\n\t//make sure the newly created term gets the easy tags\n\tvar easyTag = function easyTag(t) {\n\t  if (tags[t.silent_term]) {\n\t    t.tagAs(tags[t.silent_term]);\n\t  }\n\t};\n\t\n\t//add a silent term\n\tvar fixContraction = function fixContraction(ts, parts, i) {\n\t  //add the interpretation to the contracted term\n\t  var one = ts.terms[i];\n\t  one.silent_term = parts[0];\n\t  //tag it as a contraction\n\t  one.tagAs('Contraction', 'tagger-contraction');\n\t\n\t  //add a new empty term\n\t  var two = new Term('');\n\t  two.silent_term = parts[1];\n\t  two.tagAs('Contraction', 'tagger-contraction');\n\t  ts.insertAt(i + 1, two);\n\t  //ensure new term has no auto-whitspace\n\t  two.whitespace.before = '';\n\t  two.whitespace.after = '';\n\t  easyTag(two);\n\t\n\t  //potentially it's three-contracted-terms, like 'dunno'\n\t  if (parts[2]) {\n\t    var three = new Term('');\n\t    three.silent_term = parts[2];\n\t    // ts.terms.push(three);\n\t    ts.insertAt(i + 2, three);\n\t    three.tagAs('Contraction', 'tagger-contraction');\n\t    easyTag(three);\n\t  }\n\t\n\t  return ts;\n\t};\n\t\n\tmodule.exports = fixContraction;\n\t\n\t},{\"../../term\":177}],136:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar irregulars = _dereq_('./01-irregulars');\n\tvar hardOne = _dereq_('./02-hardOne');\n\tvar easyOnes = _dereq_('./03-easyOnes');\n\tvar numberRange = _dereq_('./04-numberRange');\n\t\n\t//find and pull-apart contractions\n\tvar interpret = function interpret(ts) {\n\t  //check irregulars\n\t  ts = irregulars(ts);\n\t  //guess-at ambiguous \"'s\" one\n\t  ts = hardOne(ts);\n\t  //check easy ones\n\t  ts = easyOnes(ts);\n\t  //5-7\n\t  ts = numberRange(ts);\n\t  return ts;\n\t};\n\t\n\tmodule.exports = interpret;\n\t\n\t},{\"./01-irregulars\":131,\"./02-hardOne\":132,\"./03-easyOnes\":133,\"./04-numberRange\":134}],137:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar allowed = {\n\t  're': true,\n\t  've': true,\n\t  'll': true,\n\t  't': true,\n\t  's': true,\n\t  'd': true,\n\t  'm': true\n\t};\n\t/** interpret a terms' contraction */\n\tvar splitContraction = function splitContraction(t) {\n\t  var parts = t.text.match(/^([a-z]+)'([a-z][a-z]?)$/i);\n\t  if (parts && parts[1] && allowed[parts[2]]) {\n\t    //handle n't\n\t    if (parts[2] === 't' && parts[1].match(/[a-z]n$/)) {\n\t      parts[1] = parts[1].replace(/n$/, '');\n\t      parts[2] = 'n\\'t'; //dunno..\n\t    }\n\t    //fix titlecase\n\t    if (t.tag.TitleCase) {\n\t      parts[1] = parts[1].replace(/^[a-z]/, function (x) {\n\t        return x.toUpperCase();\n\t      });\n\t    }\n\t    return {\n\t      start: parts[1],\n\t      end: parts[2]\n\t    };\n\t  }\n\t  // \"flanders' house\"\n\t  parts = t.text.match(/[a-z]s'$/i);\n\t  if (parts) {\n\t    return {\n\t      start: t.normal.replace(/s'?$/, ''),\n\t      end: ''\n\t    };\n\t  }\n\t  return null;\n\t};\n\tmodule.exports = splitContraction;\n\t\n\t},{}],138:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'correction';\n\tvar verb_corrections = _dereq_('./verb_corrections');\n\t\n\t//mostly pos-corections here\n\tvar corrections = function corrections(r) {\n\t  log.here(path);\n\t  //ambig prepositions/conjunctions\n\t  //so funny\n\t  r.match('so #Adjective').match('so').tag('Adverb', 'so-adv');\n\t  //so the\n\t  r.match('so #Noun').match('so').tag('Conjunction', 'so-conj');\n\t  //do so\n\t  r.match('do so').match('so').tag('Noun', 'so-noun');\n\t  //still good\n\t  r.match('still #Adjective').match('still').tag('Adverb', 'still-advb');\n\t  //'more' is not always an adverb\n\t  r.match('more #Noun').tag('Noun', 'more-noun');\n\t  //still make\n\t  r.match('still #Verb').term(0).tag('Adverb', 'still-verb');\n\t  //the word 'second'\n\t  r.match('second #Noun').term(0).unTag('Unit').tag('Ordinal', 'second-noun');\n\t  //foot/feet\n\t  r.match('(foot|feet)').tag('Noun', 'foot-noun');\n\t  r.match('#Value (foot|feet)').match('(foot|feet)').tag('Unit', 'foot-unit');\n\t  //the word 'how'\n\t  r.match('how (#Copula|#Modal|#PastTense)').term(0).tag('QuestionWord', 'how-question');\n\t  //will secure our\n\t  r.match('will #Adjective').term(1).tag('Verb', 'will-adj');\n\t  //'u' as pronoun\n\t  r.match('u #Verb').term(0).tag('Pronoun', 'u-pronoun-1');\n\t  r.match('#Conjunction u').term(1).tag('Pronoun', 'u-pronoun-2');\n\t  //is no walk\n\t  r.match('is no #Verb').term(2).tag('Noun', 'is-no-verb');\n\t\n\t  //Determiner-signals\n\t  //the wait to vote\n\t  r.match('the #Verb #Preposition .').match('#Verb').tag('Noun', 'correction-determiner1');\n\t  //the swim\n\t  r.match('the #Verb').match('#Verb').tag('Noun', 'correction-determiner2');\n\t  //the nice swim\n\t  r.match('the #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner3');\n\t  //the truly nice swim\n\t  r.match('the #Adverb #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner4');\n\t\n\t  //organization\n\t  r.match('#Organization of the? #TitleCase').tag('Organization', 'org-of-place');\n\t  r.match('#Organization #Country').tag('Organization', 'org-country');\n\t  r.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org');\n\t  r.match('#TitleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv');\n\t\n\t  //a sense of\n\t  r.match('#Determiner #Verb of').term(1).tag('Noun', 'the-verb-of');\n\t  //he quickly foo\n\t  r.match('#Noun #Adverb #Noun').term(2).tag('Verb', 'correction');\n\t  //is eager to go\n\t  r.match('#Copula #Adjective to #Verb').match('#Adjective to').tag('Verb', 'correction');\n\t  //different views than\n\t  r.match('#Verb than').term(0).tag('Noun', 'correction');\n\t  //her polling\n\t  r.match('#Possessive #Verb').term(1).tag('Noun', 'correction-possessive');\n\t\n\t  //like\n\t  r.match('just like').term(1).tag('Preposition', 'like-preposition');\n\t  //folks like her\n\t  r.match('#Noun like #Noun').term(1).tag('Preposition', 'noun-like');\n\t  //look like\n\t  r.match('#Verb like').term(1).tag('Adverb', 'verb-like');\n\t  //exactly like\n\t  r.match('#Adverb like').term(1).tag('Adverb', 'adverb-like');\n\t\n\t  //the threat of force\n\t  r.match('#Determiner #Noun of #Verb').match('#Verb').tag('Noun', 'noun-of-noun');\n\t  //big dreams, critical thinking\n\t  r.match('#Adjective #PresentTense').term(1).tag('Noun', 'adj-presentTense');\n\t  //my buddy\n\t  r.match('#Possessive #FirstName').term(1).unTag('Person', 'possessive-name');\n\t  //'a/an' can mean 1\n\t  r.match('(a|an) (#Duration|#Value)').ifNo('#Plural').term(0).tag('Value', 'a-is-one');\n\t  //half a million\n\t  r.match('half a? #Value').tag('Value', 'half-a-value'); //quarter not ready\n\t  r.match('#Value and a (half|quarter)').tag('Value', 'value-and-a-half');\n\t  //all values are either ordinal or cardinal\n\t  r.match('#Value').match('!#Ordinal').tag('#Cardinal', 'not-ordinal');\n\t\n\t  //money\n\t  r.match('#Value+ #Currency').tag('Money', 'value-currency');\n\t  r.match('#Money and #Money #Currency?').tag('Money', 'money-and-money');\n\t\n\t  //swear-words as non-expression POS\n\t  //nsfw\n\t  r.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression');\n\t  r.match('#Determiner (shit|damn|hell)').term(1).tag('Noun', 'swears-noun');\n\t  r.match('(shit|damn|fuck) (#Determiner|#Possessive|them)').term(0).tag('Verb', 'swears-verb');\n\t  r.match('#Copula fucked up?').not('#Copula').tag('Adjective', 'swears-adjective');\n\t\n\t  //more-detailed corrections\n\t  r = verb_corrections(r);\n\t\n\t  return r;\n\t};\n\t\n\tmodule.exports = corrections;\n\t\n\t},{\"../paths\":145,\"./verb_corrections\":139}],139:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar corrections = function corrections(r) {\n\t  //support a splattering of auxillaries before a verb\n\t  var advb = '(#Adverb|not)+?';\n\t  //had walked\n\t  r.match('(has|had) ' + advb + ' #PastTense').not('#Verb$').tag('Auxillary', 'had-walked');\n\t  //was walking\n\t  r.match('#Copula ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'copula-walking');\n\t  //been walking\n\t  r.match('(be|been) ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'be-walking');\n\t  //would walk\n\t  r.match('(#Modal|did) ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'modal-verb');\n\t  //would have had\n\t  r.match('#Modal ' + advb + ' have ' + advb + ' had ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-have');\n\t  //would be walking\n\t  r.match('(#Modal) ' + advb + ' be ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n\t  //would been walking\n\t  r.match('(#Modal|had|has) ' + advb + ' been ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n\t  //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n\t  // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n\t  return r;\n\t};\n\tmodule.exports = corrections;\n\t\n\t},{}],140:[function(_dereq_,module,exports){\n\t'use strict';\n\t//the steps and processes of pos-tagging\n\t\n\tvar contraction = {\n\t  interpret: _dereq_('./contraction')\n\t};\n\tvar lumper = {\n\t  lexicon_lump: _dereq_('./lumper/lexicon_lump'),\n\t  lump_two: _dereq_('./lumper/lump_two'),\n\t  lump_three: _dereq_('./lumper/lump_three')\n\t};\n\tvar step = {\n\t  punctuation_step: _dereq_('./steps/01-punctuation_step'),\n\t  lexicon_step: _dereq_('./steps/02-lexicon_step'),\n\t  capital_step: _dereq_('./steps/03-capital_step'),\n\t  web_step: _dereq_('./steps/04-web_step'),\n\t  suffix_step: _dereq_('./steps/05-suffix_step'),\n\t  neighbour_step: _dereq_('./steps/06-neighbour_step'),\n\t  noun_fallback: _dereq_('./steps/07-noun_fallback'),\n\t  date_step: _dereq_('./steps/08-date_step'),\n\t  auxillary_step: _dereq_('./steps/09-auxillary_step'),\n\t  negation_step: _dereq_('./steps/10-negation_step'),\n\t  phrasal_step: _dereq_('./steps/12-phrasal_step'),\n\t  comma_step: _dereq_('./steps/13-comma_step'),\n\t  possessive_step: _dereq_('./steps/14-possessive_step'),\n\t  value_step: _dereq_('./steps/15-value_step'),\n\t  acronym_step: _dereq_('./steps/16-acronym_step'),\n\t  emoji_step: _dereq_('./steps/17-emoji_step'),\n\t  person_step: _dereq_('./steps/18-person_step'),\n\t  quotation_step: _dereq_('./steps/19-quotation_step'),\n\t  organization_step: _dereq_('./steps/20-organization_step'),\n\t  plural_step: _dereq_('./steps/21-plural_step')\n\t};\n\tvar corrections = _dereq_('./corrections');\n\tvar tagPhrase = _dereq_('./phrase');\n\t\n\tvar tagger = function tagger(ts) {\n\t  ts = step.punctuation_step(ts);\n\t  ts = step.emoji_step(ts);\n\t  ts = lumper.lexicon_lump(ts);\n\t  ts = step.lexicon_step(ts);\n\t  ts = step.web_step(ts);\n\t  ts = step.suffix_step(ts);\n\t  ts = step.neighbour_step(ts);\n\t  ts = step.capital_step(ts);\n\t  ts = step.noun_fallback(ts);\n\t  ts = contraction.interpret(ts);\n\t  ts = step.date_step(ts);\n\t  ts = step.auxillary_step(ts);\n\t  ts = step.negation_step(ts);\n\t  ts = step.phrasal_step(ts);\n\t  ts = step.comma_step(ts);\n\t  ts = step.possessive_step(ts);\n\t  ts = step.value_step(ts);\n\t  ts = step.acronym_step(ts);\n\t  ts = step.person_step(ts);\n\t  ts = step.quotation_step(ts);\n\t  ts = step.organization_step(ts);\n\t  ts = step.plural_step(ts);\n\t  //lump a couple times, for long ones\n\t  for (var i = 0; i < 3; i++) {\n\t    ts = lumper.lump_three(ts);\n\t    ts = lumper.lump_two(ts);\n\t  }\n\t  ts = corrections(ts);\n\t  ts = tagPhrase(ts);\n\t  return ts;\n\t};\n\t\n\tmodule.exports = tagger;\n\t\n\t},{\"./contraction\":136,\"./corrections\":138,\"./lumper/lexicon_lump\":142,\"./lumper/lump_three\":143,\"./lumper/lump_two\":144,\"./phrase\":147,\"./steps/01-punctuation_step\":148,\"./steps/02-lexicon_step\":149,\"./steps/03-capital_step\":150,\"./steps/04-web_step\":151,\"./steps/05-suffix_step\":152,\"./steps/06-neighbour_step\":153,\"./steps/07-noun_fallback\":154,\"./steps/08-date_step\":155,\"./steps/09-auxillary_step\":156,\"./steps/10-negation_step\":157,\"./steps/12-phrasal_step\":158,\"./steps/13-comma_step\":159,\"./steps/14-possessive_step\":160,\"./steps/15-value_step\":161,\"./steps/16-acronym_step\":162,\"./steps/17-emoji_step\":163,\"./steps/18-person_step\":164,\"./steps/19-quotation_step\":165,\"./steps/20-organization_step\":166,\"./steps/21-plural_step\":167}],141:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar paths = _dereq_('../paths');\n\tvar Term = _dereq_('../../term');\n\tvar log = paths.log;\n\tvar path = 'tagger/combine';\n\t//merge two term objects.. carefully\n\t\n\tvar makeText = function makeText(a, b) {\n\t  var text = a.whitespace.before + a.text + a.whitespace.after;\n\t  text += b.whitespace.before + b.text + b.whitespace.after;\n\t  return text;\n\t};\n\t\n\tvar combine = function combine(s, i) {\n\t  var a = s.terms[i];\n\t  var b = s.terms[i + 1];\n\t  if (!b) {\n\t    return;\n\t  }\n\t  log.tell('--combining: \"' + a.normal + '\"+\"' + b.normal + '\"', path);\n\t  var text = makeText(a, b);\n\t  s.terms[i] = new Term(text, a.context);\n\t  s.terms[i].normal = a.normal + ' ' + b.normal;\n\t  s.terms[i + 1] = null;\n\t  s.terms = s.terms.filter(function (t) {\n\t    return t !== null;\n\t  });\n\t  return;\n\t};\n\t\n\tmodule.exports = combine;\n\t\n\t},{\"../../term\":177,\"../paths\":145}],142:[function(_dereq_,module,exports){\n\t'use strict';\n\t//check for \"united\" + \"kingdom\" in lexicon, and combine + tag it\n\t\n\tvar combine = _dereq_('./combine');\n\tvar p = _dereq_('../paths');\n\tvar log = p.log;\n\tvar lexicon = p.lexicon;\n\tvar fns = p.fns;\n\tvar path = 'tagger/multiple';\n\tvar tries = _dereq_('../../tries');\n\t\n\tvar combineMany = function combineMany(ts, i, count) {\n\t  for (var n = 0; n < count; n++) {\n\t    combine(ts, i);\n\t  }\n\t};\n\t\n\t//try to concatenate multiple-words to get this term\n\tvar tryStringFrom = function tryStringFrom(want, start, ts) {\n\t  var text = '';\n\t  var normal = '';\n\t  var simple = '';\n\t  for (var i = start; i < ts.terms.length; i++) {\n\t    if (i === start) {\n\t      text = ts.terms[i].text;\n\t      normal = ts.terms[i].normal;\n\t      simple = ts.terms[i].root;\n\t    } else {\n\t      text += ' ' + ts.terms[i].text;\n\t      normal += ' ' + ts.terms[i].normal;\n\t      simple += ' ' + ts.terms[i].root;\n\t    }\n\t    //we've gone too far\n\t    if (text === want || normal === want || simple === want) {\n\t      var count = i - start;\n\t      combineMany(ts, start, count);\n\t      return true;\n\t    }\n\t    if (normal.length > want.length) {\n\t      return false;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\tvar lexicon_lump = function lexicon_lump(ts) {\n\t  log.here(path);\n\t  var uLexicon = ts.lexicon || {};\n\t\n\t  //try the simpler, known lexicon\n\t  for (var i = 0; i < ts.terms.length - 1; i++) {\n\t    //try 'A'+'B'\n\t    var normal = ts.terms[i].normal + ' ' + ts.terms[i + 1].normal;\n\t    var text = ts.terms[i].text + ' ' + ts.terms[i + 1].text;\n\t    var pos = lexicon[normal] || lexicon[text];\n\t\n\t    if (!pos) {\n\t      pos = tries.lookupMulti(normal);\n\t    }\n\t\n\t    if (pos) {\n\t      combine(ts, i);\n\t      ts.terms[i].tagAs(pos, 'multiples-lexicon');\n\t    }\n\t  }\n\t\n\t  //try the user's lexicon\n\t  Object.keys(uLexicon).forEach(function (str) {\n\t    for (var _i = 0; _i < ts.terms.length; _i++) {\n\t      if (fns.startsWith(str, ts.terms[_i].normal) || fns.startsWith(str, ts.terms[_i].text)) {\n\t        if (tryStringFrom(str, _i, ts)) {\n\t          ts.terms[_i].tagAs(uLexicon[str], 'user-lexicon-lump');\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return ts;\n\t};\n\t\n\tmodule.exports = lexicon_lump;\n\t\n\t},{\"../../tries\":235,\"../paths\":145,\"./combine\":141}],143:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'lumper/lump_three';\n\tvar combine = _dereq_('./combine');\n\t\n\t//rules for combining three terms into one\n\tvar do_three = [{\n\t  //John & Joe's\n\t  condition: function condition(a, b, c) {\n\t    return a.tag.Noun && (b.text === '&' || b.normal === 'n') && c.tag.Noun;\n\t  },\n\t  result: 'Organization',\n\t  reason: 'Noun-&-Noun'\n\t}, {\n\t  //1 800 PhoneNumber\n\t  condition: function condition(a, b, c) {\n\t    return a.tag.Value && b.tag.Value && c.tag.PhoneNumber && b.normal.length === 3 && a.normal.length < 3;\n\t  },\n\t  result: 'PhoneNumber',\n\t  reason: '1-800-PhoneNumber'\n\t}];\n\t\n\tvar lump_three = function lump_three(s) {\n\t  log.here(path);\n\t  for (var o = 0; o < do_three.length; o++) {\n\t    for (var i = 0; i < s.terms.length - 2; i++) {\n\t      var a = s.terms[i];\n\t      var b = s.terms[i + 1];\n\t      var c = s.terms[i + 2];\n\t      if (do_three[o].condition(a, b, c)) {\n\t        //merge terms A+B\n\t        combine(s, i);\n\t        //merge A+C\n\t        combine(s, i);\n\t        //tag it as POS\n\t        s.terms[i].tagAs(do_three[o].result, 'lump-three (' + do_three[o].reason + ')');\n\t      }\n\t    }\n\t  }\n\t  return s;\n\t};\n\t\n\tmodule.exports = lump_three;\n\t\n\t},{\"../paths\":145,\"./combine\":141}],144:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'lumper/lump_two';\n\tvar combine = _dereq_('./combine');\n\t\n\tvar timezones = {\n\t  standard: true,\n\t  daylight: true,\n\t  summer: true,\n\t  eastern: true,\n\t  pacific: true,\n\t  central: true,\n\t  mountain: true\n\t};\n\t\n\t//rules that combine two words\n\tvar do_two = [{\n\t  //6 am\n\t  condition: function condition(a, b) {\n\t    return a.tag.Holiday && (b.normal === 'day' || b.normal === 'eve');\n\t  },\n\t  result: 'Holiday',\n\t  reason: 'holiday-day'\n\t}, {\n\t  //Aircraft designer\n\t  condition: function condition(a, b) {\n\t    return a.tag.Noun && b.tag.Actor;\n\t  },\n\t  result: 'Actor',\n\t  reason: 'thing-doer'\n\t}, {\n\t  //timezones\n\t  condition: function condition(a, b) {\n\t    return timezones[a.normal] && (b.normal === 'standard time' || b.normal === 'time');\n\t  },\n\t  result: 'Time',\n\t  reason: 'timezone'\n\t}, {\n\t  //canadian dollar, Brazilian pesos\n\t  condition: function condition(a, b) {\n\t    return a.tag.Demonym && b.tag.Currency;\n\t  },\n\t  result: 'Currency',\n\t  reason: 'demonym-currency'\n\t}, {\n\t  //(454) 232-9873\n\t  condition: function condition(a, b) {\n\t    return a.tag.NumericValue && b.tag.PhoneNumber && a.normal.length <= 3;\n\t  },\n\t  result: 'PhoneNumber',\n\t  reason: '(800) PhoneNumber'\n\t}];\n\t\n\tvar lump_two = function lump_two(s) {\n\t  log.here(path);\n\t  for (var o = 0; o < do_two.length; o++) {\n\t    for (var i = 0; i < s.terms.length - 1; i++) {\n\t      var a = s.terms[i];\n\t      var b = s.terms[i + 1];\n\t      if (do_two[o].condition(a, b)) {\n\t        //merge terms\n\t        combine(s, i);\n\t        //tag it as POS\n\t        s.terms[i].tagAs(do_two[o].result, 'lump-two (' + do_two[o].reason + ')');\n\t      }\n\t    }\n\t  }\n\t  return s;\n\t};\n\t\n\tmodule.exports = lump_two;\n\t\n\t},{\"../paths\":145,\"./combine\":141}],145:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  fns: _dereq_('../fns'),\n\t  lexicon: _dereq_('../data/lexicon'),\n\t  tries: _dereq_('../tries'),\n\t  log: _dereq_('../log'),\n\t  data: _dereq_('../data'),\n\t  Terms: _dereq_('../terms'),\n\t  tags: _dereq_('../tags')\n\t};\n\t\n\t},{\"../data\":6,\"../data/lexicon\":7,\"../fns\":21,\"../log\":23,\"../tags\":175,\"../terms\":195,\"../tries\":235}],146:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//\n\t\n\tvar conditionPass = function conditionPass(r) {\n\t  //'if it really goes, I will..'\n\t  var m = r.match('#Condition {1,7} #ClauseEnd');\n\t  //make sure it ends on a comma\n\t  if (m.found && m.match('#Comma$')) {\n\t    m.tag('ConditionPhrase');\n\t  }\n\t  //'go a bit further, if it then has a pronoun\n\t  m = r.match('#Condition {1,13} #ClauseEnd #Pronoun');\n\t  if (m.found && m.match('#Comma$')) {\n\t    m.not('#Pronoun$').tag('ConditionPhrase', 'end-pronoun');\n\t  }\n\t  //if it goes then ..\n\t  m = r.match('#Condition {1,7} then');\n\t  if (m.found) {\n\t    m.not('then$').tag('ConditionPhrase', 'cond-then');\n\t  }\n\t  //at the end of a sentence:\n\t  //'..., if it really goes.'\n\t  m = r.match('#Comma #Condition {1,7} .$');\n\t  if (m.found) {\n\t    m.not('^#Comma').tag('ConditionPhrase', 'comma-7-end');\n\t  }\n\t  // '... if so.'\n\t  m = r.match('#Condition {1,4}$');\n\t  if (m.found) {\n\t    m.tag('ConditionPhrase', 'cond-4-end');\n\t  }\n\t  return r;\n\t};\n\t\n\tmodule.exports = conditionPass;\n\t\n\t},{}],147:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar conditionPass = _dereq_('./00-conditionPass');\n\t// const verbPhrase = require('./01-verbPhrase');\n\t// const nounPhrase = require('./02-nounPhrase');\n\t// const AdjectivePhrase = require('./03-adjectivePhrase');\n\t//\n\tvar phraseTag = function phraseTag(Text) {\n\t  Text = conditionPass(Text);\n\t  // Text = verbPhrase(Text);\n\t  // Text = nounPhrase(Text);\n\t  // Text = AdjectivePhrase(Text);\n\t  return Text;\n\t};\n\t\n\tmodule.exports = phraseTag;\n\t\n\t},{\"./00-conditionPass\":146}],148:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar rules = _dereq_('./rules/punct_rules');\n\tvar path = 'tagger/punctuation';\n\t\n\t//not so smart (right now)\n\tvar isRomanNumeral = function isRomanNumeral(t) {\n\t  if (!t.canBe('RomanNumeral')) {\n\t    return false;\n\t  }\n\t  var str = t.text;\n\t  if (str.length > 1 && str.match(/^[IVXCM]+$/)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar oneLetters = {\n\t  a: true,\n\t  i: true,\n\t  //internet-slang\n\t  u: true,\n\t  r: true,\n\t  c: true,\n\t  k: true\n\t};\n\t\n\tvar punctuation_step = function punctuation_step(ts) {\n\t  log.here(path);\n\t  ts.terms.forEach(function (t) {\n\t    var str = t.text;\n\t    //anything can be titlecase\n\t    if (str.match(/^[A-Z][a-z']/)) {\n\t      t.tagAs('TitleCase', 'punct-rule');\n\t    }\n\t    //ok, normalise it a little,\n\t    str = str.replace(/[,\\.\\?]$/, '');\n\t    //do punctuation rules (on t.text)\n\t    for (var i = 0; i < rules.length; i++) {\n\t      var r = rules[i];\n\t      if (str.match(r.reg)) {\n\t        //don't over-write any other known tags\n\t        if (t.canBe(r.tag)) {\n\t          t.tagAs(r.tag, 'punctuation-rule- \"' + r.str + '\"');\n\t        }\n\t        return;\n\t      }\n\t    }\n\t    //terms like 'e'\n\t    if (str.length === 1 && !oneLetters[str.toLowerCase()]) {\n\t      t.tagAs('Acronym', 'one-letter-acronym');\n\t    }\n\t    //roman numerals (weak rn)\n\t    if (isRomanNumeral(t)) {\n\t      t.tagAs('RomanNumeral', 'is-roman-numeral');\n\t    }\n\t  });\n\t  return ts;\n\t};\n\t\n\tmodule.exports = punctuation_step;\n\t\n\t},{\"../paths\":145,\"./rules/punct_rules\":171}],149:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar p = _dereq_('../paths');\n\tvar split = _dereq_('../contraction/split');\n\tvar tries = _dereq_('../../tries');\n\t\n\tvar lexicon = p.lexicon;\n\tvar log = p.log;\n\tvar path = 'tagger/lexicon';\n\t\n\tvar check_lexicon = function check_lexicon(str, sentence) {\n\t  //check a user's custom lexicon\n\t  var custom = sentence.lexicon || {};\n\t  if (custom[str]) {\n\t    return custom[str];\n\t  }\n\t  if (lexicon[str]) {\n\t    return lexicon[str];\n\t  }\n\t  var tag = tries.lookup(str);\n\t  if (tag) {\n\t    return tag;\n\t  }\n\t  return null;\n\t};\n\t\n\tvar lexicon_pass = function lexicon_pass(ts) {\n\t  log.here(path);\n\t  var found = void 0;\n\t  //loop through each term\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    //basic term lookup\n\t    found = check_lexicon(t.normal, ts);\n\t    if (found) {\n\t      t.tagAs(found, 'lexicon-match');\n\t      continue;\n\t    }\n\t    found = check_lexicon(t.text, ts);\n\t    if (found) {\n\t      t.tagAs(found, 'lexicon-match-text');\n\t      continue;\n\t    }\n\t    //support contractions (manually)\n\t    var parts = split(t);\n\t    if (parts && parts.start) {\n\t      found = check_lexicon(parts.start.toLowerCase(), ts);\n\t      if (found) {\n\t        t.tagAs(found, 'contraction-lexicon');\n\t        continue;\n\t      }\n\t    }\n\t    //support silent_term matches\n\t    found = check_lexicon(t.silent_term, ts);\n\t    if (t.silent_term && found) {\n\t      t.tagAs(found, 'silent_term-lexicon');\n\t      continue;\n\t    }\n\t    //multiple-words / hyphenation\n\t    var words = t.normal.split(/[ -]/);\n\t    if (words.length > 1) {\n\t      found = check_lexicon(words[words.length - 1], ts);\n\t      if (found) {\n\t        t.tagAs(found, 'multiword-lexicon');\n\t        continue;\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = lexicon_pass;\n\t\n\t},{\"../../tries\":235,\"../contraction/split\":137,\"../paths\":145}],150:[function(_dereq_,module,exports){\n\t'use strict';\n\t//titlecase is a signal for a noun\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/capital';\n\t\n\tvar capital_logic = function capital_logic(s) {\n\t  log.here(path);\n\t  //(ignore first word)\n\t  for (var i = 1; i < s.terms.length; i++) {\n\t    var _t = s.terms[i];\n\t    //has a capital, but isn't too weird.\n\t    if (_t.tag.TitleCase && _t.isWord()) {\n\t      _t.tagAs('Noun', 'capital-step');\n\t      _t.tagAs('TitleCase', 'capital-step');\n\t    }\n\t  }\n\t  //support first-word of sentence as proper titlecase\n\t  var t = s.terms[0];\n\t  if (t && t.tag.TitleCase) {\n\t    if (t.tag.Person || t.tag.Organization || t.tag.Place) {\n\t      t.tagAs('TitleCase', 'first-term-capital');\n\t    }\n\t  }\n\t  return s;\n\t};\n\t\n\tmodule.exports = capital_logic;\n\t\n\t},{\"../paths\":145}],151:[function(_dereq_,module,exports){\n\t'use strict';\n\t//identify urls, hashtags, @mentions, emails\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/web_step';\n\t// 'Email': Noun,\n\t// 'Url': Noun,\n\t// 'AtMention': Noun,\n\t// 'HashTag': Noun,\n\t\n\tvar is_email = function is_email(str) {\n\t  if (str.match(/^\\w+@\\w+\\.[a-z]{2,3}$/)) {\n\t    //not fancy\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar is_hashtag = function is_hashtag(str) {\n\t  if (str.match(/^#[a-z0-9_]{2,}$/)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar is_atmention = function is_atmention(str) {\n\t  if (str.match(/^@\\w{2,}$/)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar is_url = function is_url(str) {\n\t  //with http/www\n\t  if (str.match(/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/)) {\n\t    //not fancy\n\t    return true;\n\t  }\n\t  // 'boo.com'\n\t  //http://mostpopularwebsites.net/top-level-domain\n\t  if (str.match(/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar web_pass = function web_pass(terms) {\n\t  log.here(path);\n\t  for (var i = 0; i < terms.length; i++) {\n\t    var t = terms.get(i);\n\t    var str = t.text.trim().toLowerCase();\n\t    if (is_email(str)) {\n\t      t.tagAs('Email', 'web_pass');\n\t    }\n\t    if (is_hashtag(str)) {\n\t      t.tagAs('HashTag', 'web_pass');\n\t    }\n\t    if (is_atmention(str)) {\n\t      t.tagAs('AtMention', 'web_pass');\n\t    }\n\t    if (is_url(str)) {\n\t      t.tagAs('Url', 'web_pass');\n\t    }\n\t  }\n\t  return terms;\n\t};\n\t\n\tmodule.exports = web_pass;\n\t\n\t},{\"../paths\":145}],152:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar rules = _dereq_('./rules/word_rules');\n\tvar path = 'tagger/suffix';\n\t\n\tvar suffix_step = function suffix_step(s) {\n\t  log.here(path);\n\t  s.terms.forEach(function (t) {\n\t    //do normalized rules (on t.normal)\n\t    for (var o = 0; o < rules.length; o++) {\n\t      var r = rules[o];\n\t      if (t.normal.match(r.reg)) {\n\t        //don't over-write any other known tags\n\t        if (t.canBe(r.tag)) {\n\t          t.tagAs(r.tag, 'word-rule- \"' + r.str + '\"');\n\t        }\n\t        return;\n\t      }\n\t    }\n\t  });\n\t  return s;\n\t};\n\t\n\tmodule.exports = suffix_step;\n\t\n\t},{\"../paths\":145,\"./rules/word_rules\":172}],153:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar markov = _dereq_('./rules/neighbours');\n\tvar afterThisWord = markov.afterThisWord;\n\tvar beforeThisWord = markov.beforeThisWord;\n\tvar beforeThisPos = markov.beforeThisPos;\n\tvar afterThisPos = markov.afterThisPos;\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/neighbours';\n\t\n\t//basically a last-ditch effort before everything falls back to a noun\n\t//for unknown terms, look left + right first, and hit-up the markov-chain for clues\n\tvar neighbour_step = function neighbour_step(ts) {\n\t  log.here(path);\n\t  ts.terms.forEach(function (t, n) {\n\t    //is it still unknown?\n\t    var termTags = Object.keys(t.tag);\n\t    if (termTags.length === 0) {\n\t      var lastTerm = ts.terms[n - 1];\n\t      var nextTerm = ts.terms[n + 1];\n\t      //look at last word for clues\n\t      if (lastTerm && afterThisWord[lastTerm.normal]) {\n\t        t.tagAs(afterThisWord[lastTerm.normal], 'neighbour-after-\"' + lastTerm.normal + '\"');\n\t        return;\n\t      }\n\t      //look at next word for clues\n\t      if (nextTerm && beforeThisWord[nextTerm.normal]) {\n\t        t.tagAs(beforeThisWord[nextTerm.normal], 'neighbour-before-\"' + nextTerm.normal + '\"');\n\t        return;\n\t      }\n\t      //look at the last POS for clues\n\t      var tags = [];\n\t      if (lastTerm) {\n\t        tags = Object.keys(lastTerm.tag);\n\t        for (var i = 0; i < tags.length; i++) {\n\t          if (afterThisPos[tags[i]]) {\n\t            t.tagAs(afterThisPos[tags[i]], 'neighbour-after-[' + tags[i] + ']');\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      //look at the next POS for clues\n\t      if (nextTerm) {\n\t        tags = Object.keys(nextTerm.tag);\n\t        for (var _i = 0; _i < tags.length; _i++) {\n\t          if (beforeThisPos[tags[_i]]) {\n\t            t.tagAs(beforeThisPos[tags[_i]], 'neighbour-before-[' + tags[_i] + ']');\n\t            return;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  return ts;\n\t};\n\t\n\tmodule.exports = neighbour_step;\n\t\n\t},{\"../paths\":145,\"./rules/neighbours\":170}],154:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/noun_fallback';\n\t//tag word as noun if we know nothing about it, still.\n\t\n\t//tags that dont really count\n\tvar nothing = {\n\t  TitleCase: true,\n\t  UpperCase: true,\n\t  CamelCase: true\n\t};\n\t//are the tags basically empty\n\tvar gotNothing = function gotNothing(t) {\n\t  //fail-fast\n\t  if (t.tag.Noun || t.tag.Verb || t.tag.Adjective) {\n\t    return false;\n\t  }\n\t  var tags = Object.keys(t.tag);\n\t  if (tags.length === 0) {\n\t    return true;\n\t  }\n\t  if (tags.filter(function (tag) {\n\t    return !nothing[tag];\n\t  }).length === 0) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar noun_fallback = function noun_fallback(s) {\n\t  log.here(path);\n\t  for (var i = 0; i < s.terms.length; i++) {\n\t    var t = s.terms[i];\n\t    //fail-fast\n\t    if (t.tag.Noun || t.tag.Verb) {\n\t      continue;\n\t    }\n\t    //ensure it only has the tag 'Term'\n\t    if (gotNothing(t)) {\n\t      //ensure it's atleast word-looking\n\t      if (t.isWord() === false) {\n\t        continue;\n\t      }\n\t      t.tagAs('Noun', 'noun-fallback');\n\t    }\n\t  }\n\t  return s;\n\t};\n\t\n\tmodule.exports = noun_fallback;\n\t\n\t},{\"../paths\":145}],155:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/datePass';\n\t\n\t//ambiguous 'may' and 'march'\n\tvar months = '(may|march|jan|april|sep)';\n\tvar preps = '(in|by|before|for|during|on|until|after|of|within)';\n\tvar thisNext = '(last|next|this|previous|current|upcoming|coming)';\n\tvar sections = '(start|end|middle|starting|ending|midpoint|beginning)';\n\t// const dayTime = '(night|evening|morning|afternoon|day|daytime)';\n\t\n\t// const isDate = (num) => {\n\t//   if (num && num < 31 && num > 0) {\n\t//     return true;\n\t//   }\n\t//   return false;\n\t// };\n\t\n\t//ensure a year is approximately typical for common years\n\t//please change in one thousand years\n\tvar isYear = function isYear(num) {\n\t  if (num && num > 1000 && num < 3000) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//non-destructively tag values & prepositions as dates\n\tvar datePass = function datePass(ts) {\n\t  log.here(path);\n\t\n\t  ts.match('#Month #DateRange+').tag('Date', 'correction-numberRange');\n\t  // ts.match(`#Month #Value to #Value`).tag('Date', 'correction-contraction');\n\t\n\t  //months\n\t  ts.match(months + ' (#Determiner|#Value|#Date)').term(0).tag('Month', 'correction-may');\n\t  ts.match('#Date ' + months).term(1).tag('Month', 'correction-may');\n\t  ts.match(preps + ' ' + months).term(1).tag('Month', 'correction-may');\n\t  ts.match('(next|this|last) ' + months).term(1).tag('Month', 'correction-may'); //maybe not 'this'\n\t\n\t  //values\n\t  ts.match('#Value #Abbreviation').tag('Value', 'value-abbr');\n\t  ts.match('a #Value').tag('Value', 'a-value');\n\t  ts.match('(minus|negative) #Value').tag('Value', 'minus-value');\n\t  ts.match('#Value grand').tag('Value', 'value-grand');\n\t  // ts.match('#Ordinal (half|quarter)').tag('Value', 'ordinal-half');//not ready\n\t  ts.match('(half|quarter) #Ordinal').tag('Value', 'half-ordinal');\n\t  ts.match('(hundred|thousand|million|billion|trillion) and #Value').tag('Value', 'magnitude-and-value');\n\t  ts.match('#Value point #Value').tag('Value', 'value-point-value');\n\t\n\t  //time\n\t  ts.match('#Cardinal #Time').tag('Time', 'value-time');\n\t  ts.match('(by|before|after|at|@|about) #Time').tag('Time', 'preposition-time');\n\t  ts.match('(#Value|#Time) (am|pm)').tag('Time', 'value-ampm');\n\t  ts.match('all day').tag('Time', 'all-day');\n\t\n\t  //seasons\n\t  ts.match(preps + '? ' + thisNext + ' (spring|summer|winter|fall|autumn)').tag('Date', 'thisNext-season');\n\t  ts.match('the? ' + sections + ' of (spring|summer|winter|fall|autumn)').tag('Date', 'section-season');\n\t\n\t  //june the 5th\n\t  ts.match('#Date the? #Ordinal').tag('Date', 'correction-date');\n\t  //5th of March\n\t  ts.match('#Value of? #Month').tag('Date', 'value-of-month');\n\t  //5 March\n\t  ts.match('#Cardinal #Month').tag('Date', 'cardinal-month');\n\t  //march 5 to 7\n\t  ts.match('#Month #Value to #Value').tag('Date', 'value-to-value');\n\t\n\t  //last month\n\t  ts.match(thisNext + ' #Date').tag('Date', 'thisNext-date');\n\t  //for four days\n\t  ts.match(preps + '? #Value #Duration').tag('Date', 'value-duration');\n\t\n\t  //by 5 March\n\t  ts.match('due? (by|before|after|until) #Date').tag('Date', 'by-date');\n\t  //tomorrow before 3\n\t  ts.match('#Date (by|before|after|at|@|about) #Cardinal').not('^#Date').tag('Time', 'date-before-Cardinal');\n\t  //2pm est\n\t  ts.match('#Time (eastern|pacific|central|mountain)').term(1).tag('Time', 'timezone');\n\t  ts.match('#Time (est|pst|gmt)').term(1).tag('Time', 'timezone abbr');\n\t  //saturday am\n\t  ts.match('#Date (am|pm)').term(1).unTag('Verb').unTag('Copula').tag('Time', 'date-am');\n\t  //late at night\n\t  ts.match('at night').tag('Time', 'at-night');\n\t  ts.match('in the (night|evening|morning|afternoon|day|daytime)').tag('Time', 'in-the-night');\n\t  ts.match('(early|late) (at|in)? the? (night|evening|morning|afternoon|day|daytime)').tag('Time', 'early-evening');\n\t  //march 12th 2018\n\t  ts.match('#Month #Value #Cardinal').tag('Date', 'month-value-cardinal');\n\t  ts.match('(last|next|this|previous|current|upcoming|coming|the) #Date').tag('Date', 'next-feb');\n\t  ts.match('#Date #Value').tag('Date', 'date-value');\n\t  ts.match('#Value #Date').tag('Date', 'value-date');\n\t  ts.match('#Date #Preposition #Date').tag('Date', 'date-prep-date');\n\t\n\t  //two days before\n\t  ts.match('#Value #Duration #Conjunction').tag('Date', 'val-duration-conjunction');\n\t\n\t  //start of june\n\t  ts.match('the? ' + sections + ' of #Date').tag('Date', 'section-of-date');\n\t\n\t  //year tagging\n\t  var value = ts.match('#Date #Value #Cardinal').lastTerm().values();\n\t  var num = value.numbers()[0];\n\t  if (isYear(num)) {\n\t    value.tag('Year', 'date-value-year');\n\t  }\n\t  //scoops up a bunch\n\t  value = ts.match('#Date+ #Cardinal').lastTerm().values();\n\t  num = value.numbers()[0];\n\t  if (isYear(num)) {\n\t    value.tag('Year', 'date-year');\n\t  }\n\t  //feb 8 2018\n\t  value = ts.match('#Month #Value #Cardinal').lastTerm().values();\n\t  num = value.numbers()[0];\n\t  if (isYear(num)) {\n\t    value.tag('Year', 'date-year2');\n\t  }\n\t  //feb 8 to 10th 2018\n\t  value = ts.match('#Month #Value to #Value #Cardinal').lastTerm().values();\n\t  num = value.numbers()[0];\n\t  if (isYear(num)) {\n\t    value.tag('Year', 'date-year3');\n\t  }\n\t  //in 1998\n\t  value = ts.match('(in|of|by|during|before|starting|ending|for|year) #Cardinal').lastTerm().values();\n\t  num = value.numbers()[0];\n\t  if (isYear(num)) {\n\t    value.tag('Year', 'preposition-year');\n\t  }\n\t  //fifth week in 1998\n\t  ts.match('#Duration in #Date').tag('Date', 'duration-in-date');\n\t\n\t  return ts;\n\t};\n\t\n\tmodule.exports = datePass;\n\t\n\t},{\"../paths\":145}],156:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/auxillary';\n\t//\n\t\n\tvar auxillary = {\n\t  'do': true,\n\t  'don\\'t': true,\n\t  'does': true,\n\t  'doesn\\'t': true,\n\t  'will': true,\n\t  'wont': true,\n\t  'won\\'t': true,\n\t  'have': true,\n\t  'haven\\'t': true,\n\t  'had': true,\n\t  'hadn\\'t': true,\n\t  'not': true\n\t};\n\t\n\tvar corrections = function corrections(ts) {\n\t  log.here(path);\n\t  //set verbs as auxillaries\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (auxillary[t.normal] || auxillary[t.silent_term]) {\n\t      var next = ts.terms[i + 1];\n\t      //if next word is a verb\n\t      if (next && (next.tag.Verb || next.tag.Adverb || next.tag.Negative)) {\n\t        t.tagAs('Auxillary', 'corrections-auxillary');\n\t        continue;\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = corrections;\n\t\n\t},{\"../paths\":145}],157:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/negation';\n\t\n\t// 'not' is sometimes a verb, sometimes an adjective\n\tvar negation_step = function negation_step(ts) {\n\t  log.here(path);\n\t  for (var i = 0; i < ts.length; i++) {\n\t    var t = ts.get(i);\n\t    if (t.normal === 'not' || t.silent_term === 'not') {\n\t      //find the next verb/adjective\n\t      for (var o = i + 1; o < ts.length; o++) {\n\t        if (ts.get(o).tag.Verb) {\n\t          t.tagAs('VerbPhrase', 'negate-verb');\n\t          break;\n\t        }\n\t        if (ts.get(o).tag.Adjective) {\n\t          t.tagAs('AdjectivePhrase', 'negate-adj');\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = negation_step;\n\t\n\t},{\"../paths\":145}],158:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar phrasals = _dereq_('../paths').tries.utils.phrasals;\n\tvar toInfinitive = _dereq_('../../result/subset/verbs/methods/toInfinitive/index.js');\n\tvar path = 'tagger/phrasal';\n\t\n\t//words that could be particles\n\tvar particles = {\n\t  'aback': true,\n\t  'along': true,\n\t  'apart': true,\n\t  'at': true,\n\t  'away': true,\n\t  'back': true,\n\t  'by': true,\n\t  'do': true,\n\t  'down': true,\n\t  'forth': true,\n\t  'forward': true,\n\t  'in': true,\n\t  'into': true,\n\t  'it': true,\n\t  'off': true,\n\t  'on': true,\n\t  'out': true,\n\t  'over': true,\n\t  'round': true,\n\t  'through': true,\n\t  'together': true,\n\t  'under': true,\n\t  'up': true,\n\t  'upon': true,\n\t  'way': true\n\t};\n\t\n\t//phrasal verbs are compound verbs like 'beef up'\n\tvar phrasals_step = function phrasals_step(ts) {\n\t  log.here(path);\n\t  for (var i = 1; i < ts.length; i++) {\n\t    var t = ts.get(i);\n\t    //is it a particle, like 'up'\n\t    if (particles[t.normal]) {\n\t      //look backwards\n\t      var last = ts.get(i - 1);\n\t      if (last.tag.Verb) {\n\t        var inf = toInfinitive(last);\n\t        if (phrasals.has(inf + ' ' + t.normal)) {\n\t          t.tagAs('Particle', 'phrasalVerb-particle');\n\t          t.tagAs('PhrasalVerb', 'phrasalVerb-particle');\n\t          last.tagAs('PhrasalVerb', 'phrasalVerb-particle');\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = phrasals_step;\n\t\n\t},{\"../../result/subset/verbs/methods/toInfinitive/index.js\":126,\"../paths\":145}],159:[function(_dereq_,module,exports){\n\t'use strict';\n\t//-types of comma-use-\n\t// PlaceComma - Hollywood, California\n\t// List       - cool, fun, and great.\n\t// ClauseEnd  - if so, we do.\n\t\n\t//like Toronto, Canada\n\t\n\tvar isPlaceComma = function isPlaceComma(ts, i) {\n\t  var t = ts.terms[i];\n\t  var nextTerm = ts.terms[i + 1];\n\t  //'australia, canada' is a list\n\t  if (nextTerm && t.tag.Place && !t.tag.Country && nextTerm.tag.Country) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//adj, noun, or verb\n\tvar mainTag = function mainTag(t) {\n\t  if (t.tag.Adjective) {\n\t    return 'Adjective';\n\t  }\n\t  if (t.tag.Noun) {\n\t    return 'Noun';\n\t  }\n\t  if (t.tag.Verb) {\n\t    return 'Verb';\n\t  }\n\t  return null;\n\t};\n\t\n\tvar tagAsList = function tagAsList(ts, start, end) {\n\t  for (var i = start; i <= end; i++) {\n\t    ts.terms[i].tag.List = true;\n\t  }\n\t};\n\t\n\t//take the first term with a comma, and test to the right.\n\t//the words with a comma must be the same pos.\n\tvar isList = function isList(ts, i) {\n\t  var start = i;\n\t  var tag = mainTag(ts.terms[i]);\n\t  //ensure there's a following comma, and its the same pos\n\t  //then a Conjunction\n\t  var sinceComma = 0;\n\t  var count = 0;\n\t  var hasConjunction = false;\n\t  for (i = i + 1; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    //are we approaching the end\n\t    if (count > 0 && t.tag.Conjunction) {\n\t      hasConjunction = true;\n\t      continue;\n\t    }\n\t    //found one,\n\t    if (t.tag[tag]) {\n\t      //looks good. keep it going\n\t      if (t.tag.Comma) {\n\t        count += 1;\n\t        sinceComma = 0;\n\t        continue;\n\t      }\n\t      if (count > 0 && hasConjunction) {\n\t        //is this the end of the list?\n\t        tagAsList(ts, start, i);\n\t        return true;\n\t      }\n\t    }\n\t    sinceComma += 1;\n\t    //have we gone too far without a comma?\n\t    if (sinceComma > 5) {\n\t      return false;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\tvar commaStep = function commaStep(ts) {\n\t  //tag the correct punctuation forms\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    var punct = t.endPunctuation();\n\t    if (punct === ',') {\n\t      t.tagAs('Comma', 'comma-step');\n\t      continue;\n\t    }\n\t    if (punct === ';' || punct === ':') {\n\t      t.tagAs('ClauseEnd', 'clause-punt');\n\t      continue;\n\t    }\n\t    //support elipses\n\t    if (t.whitespace.after.match(/^\\.\\./)) {\n\t      t.tagAs('ClauseEnd', 'clause-elipses');\n\t      continue;\n\t    }\n\t    //support ' - ' clause\n\t    if (ts.terms[i + 1] && ts.terms[i + 1].whitespace.before.match(/ - /)) {\n\t      t.tagAs('ClauseEnd', 'hypen-clause');\n\t      continue;\n\t    }\n\t  }\n\t\n\t  //disambiguate the commas now\n\t  for (var _i = 0; _i < ts.terms.length; _i++) {\n\t    var _t = ts.terms[_i];\n\t    if (_t.tag.Comma) {\n\t      //if we already got it\n\t      if (_t.tag.List) {\n\t        continue;\n\t      }\n\t      //like 'Hollywood, California'\n\t      if (isPlaceComma(ts, _i)) {\n\t        continue;\n\t      }\n\t      //like 'cold, wet hands'\n\t      if (isList(ts, _i)) {\n\t        continue;\n\t      }\n\t      //otherwise, it's a phrasal comma, like 'you must, if you think so'\n\t      _t.tag.ClauseEnd = true;\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = commaStep;\n\t\n\t},{}],160:[function(_dereq_,module,exports){\n\t'use strict';\n\t//decide if an apostrophe s is a contraction or not\n\t// 'spencer's nice' -> 'spencer is nice'\n\t// 'spencer's house' -> 'spencer's house'\n\t\n\t//these are always contractions\n\t\n\tvar blacklist = {\n\t  'it\\'s': true,\n\t  'that\\'s': true\n\t};\n\t\n\t//a possessive means \"'s\" describes ownership, not a contraction, like 'is'\n\tvar is_possessive = function is_possessive(terms, x) {\n\t  var t = terms.get(x);\n\t  //these are always contractions, not possessive\n\t  if (blacklist[t.normal]) {\n\t    return false;\n\t  }\n\t  //\"spencers'\" - this is always possessive - eg \"flanders'\"\n\t  if (t.normal.match(/[a-z]s'$/)) {\n\t    return true;\n\t  }\n\t  //if no apostrophe s, return\n\t  if (!t.normal.match(/[a-z]'s$/)) {\n\t    return false;\n\t  }\n\t  //some parts-of-speech can't be possessive\n\t  if (t.tag['Pronoun']) {\n\t    return false;\n\t  }\n\t  var nextWord = terms.get(x + 1);\n\t  //last word is possessive  - \"better than spencer's\"\n\t  if (!nextWord) {\n\t    return true;\n\t  }\n\t  //next word is 'house'\n\t  if (nextWord.tag['Noun']) {\n\t    return true;\n\t  }\n\t  //rocket's red glare\n\t  if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n\t    return true;\n\t  }\n\t  //next word is an adjective\n\t  if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n\t    return false;\n\t  }\n\t  return false;\n\t};\n\t\n\t//tag each term as possessive, if it should\n\tvar possessiveStep = function possessiveStep(terms) {\n\t  for (var i = 0; i < terms.length; i++) {\n\t    if (is_possessive(terms, i)) {\n\t      var t = terms.get(i);\n\t      //if it's not already a noun, co-erce it to one\n\t      if (!t.tag['Noun']) {\n\t        t.tagAs('Noun', 'possessive_pass');\n\t      }\n\t      t.tagAs('Possessive', 'possessive_pass');\n\t    }\n\t  }\n\t  return terms;\n\t};\n\tmodule.exports = possessiveStep;\n\t\n\t},{}],161:[function(_dereq_,module,exports){\n\t'use strict';\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/value';\n\t\n\tvar value_step = function value_step(ts) {\n\t  log.here(path);\n\t  ts.terms.forEach(function (t) {\n\t    if (t.tag.Value) {\n\t      //ordinal/cardinal\n\t      if (!t.tag.Ordinal && !t.tag.Cardinal) {\n\t        if (t.normal.match(/^[0-9]([0-9]+,)*?(\\.[0-9])$/)) {\n\t          t.tagAs('Cardinal', 'ordinal-regex');\n\t        } else {\n\t          t.tagAs('Cardinal', 'cardinal-regex');\n\t        }\n\t      }\n\t      //text/number\n\t      if (!t.tag.TextValue && !t.tag.NumericValue) {\n\t        if (t.normal.match(/^[a-z]/)) {\n\t          t.tagAs('TextValue', 'TextValue-regex');\n\t        } else {\n\t          t.tagAs('NumericValue', 'NumericValue-regex');\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return ts;\n\t};\n\t\n\tmodule.exports = value_step;\n\t\n\t},{\"../paths\":145}],162:[function(_dereq_,module,exports){\n\t'use strict';\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/acronym_step';\n\t\n\tvar acronym_step = function acronym_step(ts) {\n\t  log.here(path);\n\t  ts.terms.forEach(function (t) {\n\t    if (t.isAcronym()) {\n\t      t.tagAs('Acronym', 'acronym-step');\n\t    }\n\t  });\n\t  return ts;\n\t};\n\t\n\tmodule.exports = acronym_step;\n\t\n\t},{\"../paths\":145}],163:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('../paths').fns;\n\tvar emojiReg = _dereq_('./rules/emoji_regex');\n\tvar emoticon = _dereq_('./rules/emoticon_list');\n\t//test for forms like ':woman_tone2:‍:ear_of_rice:'\n\t//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\n\tvar isCommaEmoji = function isCommaEmoji(t) {\n\t  if (fns.startsWith(t.text, ':')) {\n\t    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n\t    if (!t.text.match(/:.?$/)) {\n\t      return false;\n\t    }\n\t    //ensure no spaces\n\t    if (t.text.match(' ')) {\n\t      return false;\n\t    }\n\t    //reasonably sized\n\t    if (t.text.length > 35) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t//check against emoticon whitelist\n\tvar isEmoticon = function isEmoticon(t) {\n\t  //normalize the 'eyes'\n\t  var str = t.text.replace(/^[:;]/, ':');\n\t  str = str.replace(/[:;]$/, ':');\n\t  return emoticon[str];\n\t};\n\t\n\t//\n\tvar emojiStep = function emojiStep(ts) {\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    //test for :keyword: emojis\n\t    if (isCommaEmoji(t)) {\n\t      t.tagAs('Emoji', 'comma-emoji');\n\t    }\n\t    //test for unicode emojis\n\t    if (t.text.match(emojiReg)) {\n\t      t.tagAs('Emoji', 'unicode-emoji');\n\t    }\n\t    //test for emoticon ':)' emojis\n\t    if (isEmoticon(t)) {\n\t      t.tagAs('Emoji', 'emoticon-emoji');\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = emojiStep;\n\t\n\t},{\"../paths\":145,\"./rules/emoji_regex\":168,\"./rules/emoticon_list\":169}],164:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/person_step';\n\t\n\tvar titles = _dereq_('../paths').data.titles;\n\ttitles = titles.reduce(function (h, str) {\n\t  h[str] = true;\n\t  return h;\n\t}, {});\n\t\n\tvar person_step = function person_step(ts) {\n\t  log.here(path);\n\t  var reason = 'person-step';\n\t  // x Lastname\n\t  ts.match('#Noun #LastName').firstTerm().canBe('#FirstName').tag('#FirstName', 'noun-lastname');\n\t\n\t  // Firstname x (dangerous)\n\t  var tmp = ts.match('#FirstName #Noun').ifNo('^#Possessive').ifNo('#ClauseEnd .');\n\t  tmp.lastTerm().canBe('#LastName').tag('#LastName', 'firstname-noun');\n\t\n\t  //j.k Rowling\n\t  ts.match('#Acronym #TitleCase').canBe('#Person').tag('#Person', 'acronym-titlecase');\n\t  ts.match('#Noun van der? #Noun').canBe('#Person').tag('#Person', 'von der noun');\n\t  ts.match('#FirstName de #Noun').canBe('#Person').tag('#Person', 'firstname-de-noun');\n\t  ts.match('(king|queen|prince|saint|lady) of? #Noun').canBe('#Person').tag('#Person', 'king-of-noun');\n\t  ts.match('#FirstName (bin|al) #Noun').canBe('#Person').tag('#Person', 'firstname-al-noun');\n\t\n\t  //ambiguous firstnames\n\t  var maybe = ['will', 'may', 'april', 'june', 'said', 'rob', 'wade', 'ray', 'rusty', 'drew', 'miles', 'jack', 'chuck', 'randy', 'jan', 'pat', 'cliff', 'bill'];\n\t  maybe = '(' + maybe.join('|') + ')';\n\t  ts.match(maybe + ' #LastName').firstTerm().tag('#FirstName', reason);\n\t\n\t  //ambiguous lastnames\n\t  maybe = ['green', 'white', 'brown', 'hall', 'young', 'king', 'hill', 'cook', 'gray', 'price'];\n\t  maybe = '(' + maybe.join('|') + ')';\n\t  ts.match('#FirstName ' + maybe).tag('#Person', reason);\n\t\n\t  //people chunks\n\t  //John L. Foo\n\t  ts.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase');\n\t  //Andrew Lloyd Webber\n\t  ts.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase');\n\t  //Mr Foo\n\t  ts.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase');\n\t  //mr X\n\t  ts.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase');\n\t  //John Foo\n\t  ts.match('#FirstName #TitleCase').match('#FirstName #Noun').tag('Person', 'firstname-titlecase');\n\t  //ludwig van beethovan\n\t  ts.match('#TitleCase (van|al|bin) #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n\t  ts.match('#TitleCase (de|du) la? #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n\t  //peter the great\n\t  ts.match('#FirstName the #Adjective').tag('Person', 'correction-determiner5');\n\t  //Morgan Shlkjsfne\n\t  ts.match('#Person #TitleCase').match('#TitleCase #Noun').tag('Person', 'correction-person-titlecase');\n\t\n\t  //last names\n\t  // let reason = 'person-correction';\n\t  //Joe K. Sombrero\n\t  ts.match('#FirstName #Acronym #Noun').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n\t  //Jani K. Smith\n\t  ts.match('#TitleCase #Acronym? #LastName').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n\t  //john bodego's\n\t  ts.match('#FirstName (#Singular|#Possessive)').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n\t  //pope francis\n\t  ts.match('(lady|queen|sister) #TitleCase').ifNo('#Date').tag('#FemaleName', reason);\n\t  ts.match('(king|pope|father) #TitleCase').ifNo('#Date').tag('#MaleName', 'correction-poe');\n\t\n\t  //peter II\n\t  ts.match('#Person #Person the? #RomanNumeral').tag('Person', 'correction-roman-numeral');\n\t\n\t  //'Professor Fink', 'General McCarthy'\n\t  for (var i = 0; i < ts.terms.length - 1; i++) {\n\t    var t = ts.terms[i];\n\t    if (titles[t.normal]) {\n\t      if (ts.terms[i + 1] && ts.terms[i + 1].tag.Person) {\n\t        t.tagAs('Person', 'title-person');\n\t      }\n\t    }\n\t  }\n\t\n\t  //remove single 'mr'\n\t  ts.match('#Person+').match('^#Honorific$').unTag('Person', 'single-honorific');\n\t  return ts;\n\t};\n\t\n\tmodule.exports = person_step;\n\t\n\t},{\"../paths\":145}],165:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/person_step';\n\t\n\tvar tagSlice = function tagSlice(ts, start, end) {\n\t  ts.terms.slice(start, end + 1).forEach(function (t) {\n\t    t.tagAs('Quotation', 'quotation_step');\n\t  });\n\t};\n\t\n\t//tag a inline quotation as such\n\tvar quotation_step = function quotation_step(ts) {\n\t  log.here(path);\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (t.text.match(/^[\"'\\u201B\\u201C\\u2033\\u201F\\u2018]/)) {\n\t      //look for the ending\n\t      for (var o = 0; o < ts.terms.length; o++) {\n\t        //max-length- don't go-on forever\n\t        if (!ts.terms[i + o] || o > 8) {\n\t          break;\n\t        }\n\t        if (ts.terms[i + o].text.match(/.[\"'\\u201D\\u2036\\u2019]([;:,.])?$/)) {\n\t          tagSlice(ts, i, o + i);\n\t          i += o;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = quotation_step;\n\t\n\t},{\"../paths\":145}],166:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar path = 'tagger/organization_step';\n\t\n\t//orgwords like 'bank' in 'Foo Bank'\n\tvar orgWords = _dereq_('../paths').tries.utils.orgWords;\n\t\n\t//could this word be an organization\n\tvar maybeOrg = function maybeOrg(t) {\n\t  //must be a noun\n\t  if (!t.tag.Noun) {\n\t    return false;\n\t  }\n\t  //can't be these things\n\t  if (t.tag.Pronoun || t.tag.Comma || t.tag.Possessive) {\n\t    return false;\n\t  }\n\t  //must be one of these\n\t  if (t.tag.TitleCase || t.tag.Organization || t.tag.Acronym) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar organization_step = function organization_step(ts) {\n\t  log.here(path);\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (orgWords.has(t.normal)) {\n\t      //eg. Toronto University\n\t      var lastTerm = ts.terms[i - 1];\n\t      if (lastTerm && maybeOrg(lastTerm)) {\n\t        lastTerm.tagAs('Organization', 'org-word-1');\n\t        t.tagAs('Organization', 'org-word-2');\n\t        continue;\n\t      }\n\t      //eg. University of Toronto\n\t      var nextTerm = ts.terms[i + 1];\n\t      if (nextTerm && nextTerm.normal === 'of') {\n\t        if (ts.terms[i + 2] && maybeOrg(ts.terms[i + 2])) {\n\t          t.tagAs('Organization', 'org-word-1');\n\t          nextTerm.tagAs('Organization', 'org-word-2');\n\t          ts.terms[i + 2].tagAs('Organization', 'org-word-3');\n\t          continue;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\tmodule.exports = organization_step;\n\t\n\t},{\"../paths\":145}],167:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar log = _dereq_('../paths').log;\n\tvar isPlural = _dereq_('../../result/subset/nouns/isPlural');\n\tvar path = 'tagger/plural';\n\t\n\tvar pluralStep = function pluralStep(ts) {\n\t  log.here(path);\n\t  for (var i = 0; i < ts.terms.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (t.tag.Noun) {\n\t      //skip existing fast\n\t      if (t.tag.Singular || t.tag.Plural) {\n\t        continue;\n\t      }\n\t      //check if it's plural\n\t      var plural = isPlural(t); //can be null if unknown\n\t      if (plural) {\n\t        t.tagAs('Plural', 'pluralStep');\n\t      } else if (plural === false) {\n\t        // console.log(t.normal, plural);\n\t        t.tagAs('Singular', 'pluralStep');\n\t      }\n\t    }\n\t  }\n\t  return ts;\n\t};\n\t\n\tmodule.exports = pluralStep;\n\t\n\t},{\"../../result/subset/nouns/isPlural\":70,\"../paths\":145}],168:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\t//yep,\n\t//https://github.com/mathiasbynens/emoji-regex/blob/master/index.js\n\tmodule.exports = /(?:0\\u20E3\\n1\\u20E3|2\\u20E3|3\\u20E3|4\\u20E3|5\\u20E3|6\\u20E3|7\\u20E3|8\\u20E3|9\\u20E3|#\\u20E3|\\*\\u20E3|\\uD83C(?:\\uDDE6\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFD|\\uDDFF)|\\uDDE7\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDE8\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDE9\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDFF)|\\uDDEA\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDED|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA)|\\uDDEB\\uD83C(?:\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDF7)|\\uDDEC\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFE)|\\uDDED\\uD83C(?:\\uDDF0|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF9|\\uDDFA)|\\uDDEE\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9)|\\uDDEF\\uD83C(?:\\uDDEA|\\uDDF2|\\uDDF4|\\uDDF5)|\\uDDF0\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF7|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDF1\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDEE|\\uDDF0|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFE)|\\uDDF2\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF3\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFF)|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C(?:\\uDDE6|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFC|\\uDDFE)|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C(?:\\uDDEA|\\uDDF4|\\uDDF8|\\uDDFA|\\uDDFC)|\\uDDF8\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF9\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFF)|\\uDDFA\\uD83C(?:\\uDDE6|\\uDDEC|\\uDDF2|\\uDDF8|\\uDDFE|\\uDDFF)|\\uDDFB\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDEE|\\uDDF3|\\uDDFA)|\\uDDFC\\uD83C(?:\\uDDEB|\\uDDF8)|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C(?:\\uDDEA|\\uDDF9)|\\uDDFF\\uD83C(?:\\uDDE6|\\uDDF2|\\uDDFC)))|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]/g;\n\t\n\t},{}],169:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//just some of the most common emoticons\n\t//faster than\n\t//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\n\tmodule.exports = {\n\t  ':(': true,\n\t  ':)': true,\n\t  ':P': true,\n\t  ':p': true,\n\t  ':O': true,\n\t  ':3': true,\n\t  ':|': true,\n\t  ':/': true,\n\t  ':\\\\': true,\n\t  ':$': true,\n\t  ':*': true,\n\t  ':@': true,\n\t  ':-(': true,\n\t  ':-)': true,\n\t  ':-P': true,\n\t  ':-p': true,\n\t  ':-O': true,\n\t  ':-3': true,\n\t  ':-|': true,\n\t  ':-/': true,\n\t  ':-\\\\': true,\n\t  ':-$': true,\n\t  ':-*': true,\n\t  ':-@': true,\n\t  ':^(': true,\n\t  ':^)': true,\n\t  ':^P': true,\n\t  ':^p': true,\n\t  ':^O': true,\n\t  ':^3': true,\n\t  ':^|': true,\n\t  ':^/': true,\n\t  ':^\\\\': true,\n\t  ':^$': true,\n\t  ':^*': true,\n\t  ':^@': true,\n\t  '):': true,\n\t  '(:': true,\n\t  '$:': true,\n\t  '*:': true,\n\t  ')-:': true,\n\t  '(-:': true,\n\t  '$-:': true,\n\t  '*-:': true,\n\t  ')^:': true,\n\t  '(^:': true,\n\t  '$^:': true,\n\t  '*^:': true,\n\t  '<3': true,\n\t  '</3': true,\n\t  '<\\\\3': true\n\t};\n\t\n\t},{}],170:[function(_dereq_,module,exports){\n\t'use strict';\n\t//markov-like stats about co-occurance, for hints about unknown terms\n\t//basically, a little-bit better than the noun-fallback\n\t//just top n-grams from nlp tags, generated from nlp-corpus\n\t\n\t//after this word, here's what happens usually\n\t\n\tvar afterThisWord = {\n\t  i: 'Verb', //44% //i walk..\n\t  first: 'Noun', //50% //first principles..\n\t  it: 'Verb', //33%\n\t  there: 'Verb', //35%\n\t  // to: 'Verb', //32%\n\t  not: 'Verb', //33%\n\t  because: 'Noun', //31%\n\t  'if': 'Noun', //32%\n\t  but: 'Noun', //26%\n\t  who: 'Verb', //40%\n\t  'this': 'Noun', //37%\n\t  his: 'Noun', //48%\n\t  when: 'Noun', //33%\n\t  you: 'Verb', //35%\n\t  very: 'Adjective', // 39%\n\t  old: 'Noun', //51%\n\t  never: 'Verb', //42%\n\t  before: 'Noun' };\n\t\n\t//in advance of this word, this is what happens usually\n\tvar beforeThisWord = {\n\t  there: 'Verb', //23% // be there\n\t  me: 'Verb', //31% //see me\n\t  man: 'Adjective', // 80% //quiet man\n\t  only: 'Verb', //27% //sees only\n\t  him: 'Verb', //32% //show him\n\t  were: 'Noun', //48% //we were\n\t  what: 'Verb', //25% //know what\n\t  took: 'Noun', //38% //he took\n\t  himself: 'Verb', //31% //see himself\n\t  went: 'Noun', //43% //he went\n\t  who: 'Noun', //47% //person who\n\t  jr: 'Person'\n\t};\n\t\n\t//following this POS, this is likely\n\tvar afterThisPos = {\n\t  Adjective: 'Noun', //36% //blue dress\n\t  Possessive: 'Noun', //41% //his song\n\t  Determiner: 'Noun', //47%\n\t  Adverb: 'Verb', //20%\n\t  // Person: 'Verb', //40%\n\t  Pronoun: 'Verb', //40%\n\t  Value: 'Noun', //47%\n\t  Ordinal: 'Noun', //53%\n\t  Modal: 'Verb', //35%\n\t  Superlative: 'Noun', //43%\n\t  Demonym: 'Noun', //38%\n\t  Organization: 'Verb', //33%\n\t  Honorific: 'Person' };\n\t\n\t//in advance of this POS, this is likely\n\tvar beforeThisPos = {\n\t  Copula: 'Noun', //44% //spencer is\n\t  PastTense: 'Noun', //33% //spencer walked\n\t  Conjunction: 'Noun', //36%\n\t  Modal: 'Noun', //38%\n\t  PluperfectTense: 'Noun', //40%\n\t  PerfectTense: 'Verb' };\n\tmodule.exports = {\n\t  beforeThisWord: beforeThisWord,\n\t  afterThisWord: afterThisWord,\n\t\n\t  beforeThisPos: beforeThisPos,\n\t  afterThisPos: afterThisPos\n\t};\n\t\n\t},{}],171:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//these are regexes applied to t.text, instead of t.normal\n\tmodule.exports = [\n\t//#funtime\n\t['^#[a-z]+', 'HashTag'],\n\t//chillin'\n\t['[a-z]+n\\'', 'Gerund'],\n\t//spencers'\n\t['[a-z]+s\\'', 'Possessive'],\n\t//589-3809\n\t['[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n\t//632-589-3809\n\t['\\\\(?[0-9]{3}\\\\)?[ -]?[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n\t\n\t//dates/times\n\t['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])', 'Time'], //4:32:32\n\t['[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)', 'Time'], //4pm\n\t['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?', 'Time'], //4:00pm\n\t['[PMCE]ST', 'Time'], //PST, time zone abbrevs\n\t['utc ?[\\+\\-]?[0-9]\\+?', 'Time'], //UTC 8+\n\t['[a-z0-9]*? o\\'?clock', 'Time'], //3 oclock\n\t['[0-9]{1,4}[/\\\\-\\\\.][0-9]{1,2}[/\\\\-\\\\.][0-9]{1,4}', 'Date'], //03/02/89, 03-02-89\n\t\n\t//money\n\t['^[\\-\\+]?[$€¥£][0-9]+(\\.[0-9]{1,2})?$', 'Money'], //like $5.30\n\t['^[\\-\\+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(\\.[0-9]{1,2})?$', 'Money'], //like $5,231.30\n\t\n\t//values\n\t['[0-9]{1,4}(st|nd|rd|th)?-[0-9]{1,4}(st|nd|rd|th)?', 'NumberRange'], //5-7\n\t['^[\\-\\+]?[0-9]{1,3}(,[0-9]{3})+(\\.[0-9]+)?$', 'NiceNumber'], //like 5,999.0\n\t['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], //like +5.0\n\t\n\t['[0-9]{1,4}/[0-9]{1,4}', 'Fraction'], //3/2ths\n\t['[0-9]{1,2}-[0-9]{1,2}', 'Value'], //7-8\n\t\n\t//mc'adams\n\t['ma?c\\'.*', 'LastName'],\n\t//o'douggan\n\t['o\\'[drlkn].*', 'LastName']].map(function (a) {\n\t  return {\n\t    reg: new RegExp('^' + a[0] + '$', 'i'),\n\t    tag: a[1],\n\t    str: a[0]\n\t  };\n\t});\n\t\n\t},{}],172:[function(_dereq_,module,exports){\n\t'use strict';\n\t//regex suffix patterns and their most common parts of speech,\n\t//built using wordnet, by spencer kelly.\n\t//this mapping shrinks-down the uglified build\n\t\n\tvar Adjective = 'Adjective',\n\t    Infinitive = 'Infinitive',\n\t    PresentTense = 'PresentTense',\n\t    Singular = 'Singular',\n\t    PastTense = 'PastTense',\n\t    Adverb = 'Adverb',\n\t    Expression = 'Expression',\n\t    Plural = 'Plural',\n\t    Actor = 'Actor',\n\t    Verb = 'Verb',\n\t    Noun = 'Noun',\n\t    LastName = 'LastName';\n\t//the order here matters.\n\tmodule.exports = [['^[0-9]+ ?(am|pm)$', 'Date'], ['[0-9](st|nd|rd|r?th)$', 'Ordinal'], //like 5th\n\t['([0-9])([a-z]{1,2})$', 'Cardinal'], //like 5kg\n\t['^[0-9,\\.]+$', 'Cardinal'], //like 5\n\t['^[a-z]et$', Verb], ['cede$', Infinitive], ['.[cts]hy$', Adjective], ['.[st]ty$', Adjective], ['.[lnr]ize$', Infinitive], ['.[gk]y$', Adjective], ['.fies$', PresentTense], ['ities$', Plural], ['.some$', Adjective], ['.[nrtumcd]al$', Adjective], ['.que$', Adjective], ['.[tnl]ary$', Adjective], ['.[di]est$', 'Superlative'], ['^(un|de|re)\\\\-[a-z]..', Verb], ['.lar$', Adjective], ['[bszmp]{2}y', Adjective], ['.zes$', PresentTense], ['.[icldtgrv]ent$', Adjective], ['.[rln]ates$', PresentTense], ['.[oe]ry$', Singular], ['[rdntkbhs]ly$', Adverb], ['.[lsrnpb]ian$', Adjective], ['.[^aeiou]ial$', Adjective], ['.[^aeiou]eal$', Adjective], ['.[vrl]id$', Adjective], ['.[ilk]er$', 'Comparative'], ['.ike$', Adjective], ['.ends?$', Verb], ['.wards$', Adverb], ['.rmy$', Adjective], ['.rol$', Singular], ['.tors$', Noun], ['.azy$', Adjective], ['.where$', Adverb], ['.ify$', Infinitive], ['.bound$', Adjective], ['.[^z]ens$', Verb], ['.oid$', Adjective], ['.vice$', Singular], ['.rough$', Adjective], ['.mum$', Adjective], ['.teen(th)?$', 'Value'], ['.oses$', PresentTense], ['.ishes$', PresentTense], ['.ects$', PresentTense], ['.tieth$', 'Ordinal'], ['.ices$', Plural], ['.tage$', Infinitive], ['.ions$', Plural], ['.tion$', Singular], ['.ean$', Adjective], ['.[ia]sed$', Adjective], ['.urned', PastTense], ['.tized$', PastTense], ['.[aeiou][td]ed', PastTense], ['.llen$', Adjective], ['.fore$', Adverb], ['.ances$', Plural], ['.gate$', Infinitive], ['.nes$', PresentTense], ['.less$', Adverb], ['.ried$', Adjective], ['.gone$', Adjective], ['.made$', Adjective], ['.ing$', 'Gerund'], //likely to be converted to adjective after lexicon pass\n\t['.tures$', Plural], ['.ous$', Adjective], ['.ports$', Plural], ['. so$', Adverb], ['.ints$', Plural], ['.[gt]led$', Adjective], ['.lked$', PastTense], ['.fully$', Adverb], ['.*ould$', 'Modal'], ['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], ['[a-z]*\\\\-[a-z]*\\\\-', Adjective], ['[a-z]\\'s$', Noun], ['.\\'n$', Verb], ['.\\'re$', 'Copula'], ['.\\'ll$', 'Modal'], ['.\\'t$', Verb], ['.tches$', PresentTense], ['^https?\\:?\\/\\/[a-z0-9]', 'Url'], //the colon is removed in normalisation\n\t['^www\\.[a-z0-9]', 'Url'], ['.ize$', Infinitive], ['.[^aeiou]ise$', Infinitive], ['.[aeiou]te$', Infinitive], ['.ea$', Singular], ['[aeiou][pns]er$', Singular], ['.ia$', Noun], ['.sis$', Singular], ['.[aeiou]na$', Noun], ['.[^aeiou]ity$', Singular], ['.[^aeiou]ium$', Singular], ['.[^aeiou][ei]al$', Adjective], ['.ffy$', Adjective], ['.[^aeiou]ic$', Adjective], ['.(gg|bb|zz)ly$', Adjective], ['.[aeiou]my$', Adjective], ['.[^aeiou][ai]ble$', Adjective], ['.[^aeiou]eable$', Adjective], ['.[^aeiou]ful$', Adjective], ['.[^aeiouf]ish$', Adjective], ['.[^aeiou]ica$', Singular], ['[aeiou][^aeiou]is$', Singular], ['[^aeiou]ard$', Singular], ['[^aeiou]ism$', Singular], ['.[^aeiou]ity$', Singular], ['.[^aeiou]ium$', Singular], ['.[lstrn]us$', Singular], ['..ic$', Adjective], ['[aeiou][^aeiou]id$', Adjective], ['.[^aeiou]ive$', Adjective], ['[ea]{2}zy$', Adjective], ['[^aeiou]ician$', Actor], ['.keeper$', Actor], ['.logist$', Actor], ['..ier$', Actor], ['.ettes$', Plural], ['.ette$', Singular], ['.[^aeiou][ao]pher$', Actor], ['.tive$', Actor], ['[aeiou].*ist$', Adjective], ['(over|under)[a-z]{2,}$', Adjective], ['[^i]fer$', Infinitive], ['[aeiou]c?ked$', PastTense], //hooked\n\t['(eastern|central|mountain|pacific)( standard)? time', 'Time'], //PST, eastern time.  Todo:(only American right now)\n\t//slang things\n\t['^um+$', Expression], //ummmm\n\t['^([hyj]a)+$', Expression], //hahah\n\t['^(k)+$', Expression], //kkkk\n\t['^(yo)+$', Expression], //yoyo\n\t['^yes+$', Expression], //yessss\n\t['^no+$', Expression], //noooo\n\t['^lol[sz]$', Expression], //lol\n\t['^woo+[pt]?$', Expression], //woo\n\t['^ug?h+$', Expression], //uhh\n\t['^uh[ -]?oh$', Expression], //uhoh\n\t\n\t//lastname patterns\n\t//https://en.wikipedia.org/wiki/List_of_family_name_affixes\n\t//macdonell\n\t['^ma?cd[aeiou]', LastName],\n\t//icelandic/swedish\n\t['.sdottir$', LastName], //female\n\t['.sson$', LastName], //male\n\t//polish\n\t['.[oau][wvl]ski$', LastName], //male\n\t['.[oau][wvl]ska$', LastName], //female\n\t['.czyk$', LastName], //male\n\t['.marek$', LastName], //male\n\t//east-europe Hasanov, etc\n\t['.[^aeiou][ai][kln]ov$', LastName], //\n\t['..chuk$', LastName], //\n\t['..enko$', LastName], //\n\t['.v[iy]ch$', LastName], //\n\t//greek\n\t['.opoulos$', LastName], //\n\t['.akis$', LastName], //\n\t//lithuania\n\t['.auskas$', LastName],\n\t//norway\n\t['.nss?en$', LastName]].map(function (a) {\n\t  return {\n\t    reg: new RegExp(a[0]),\n\t    tag: a[1],\n\t    str: a[0]\n\t  };\n\t});\n\t\n\t},{}],173:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//used for pretty-printing on the server-side\n\tvar colors = {\n\t  blue: ['Noun', 'Plural', 'Singular', 'Pronoun', 'Possessive', 'Place', 'Person', 'City'],\n\t  red: ['Value', 'Ordinal', 'Cardinal', 'TextValue', 'NumericValue'],\n\t  green: ['Verb', 'Auxillary', 'Negative', 'PastTense', 'PresentTense', 'FutureTense', 'Modal', 'Infinitive', 'Gerund', 'Copula', 'Participle'],\n\t  cyan: ['Preposition', 'Conjunction', 'Determiner'],\n\t  black: ['Adjective', 'Adverb']\n\t};\n\tmodule.exports = Object.keys(colors).reduce(function (h, c) {\n\t  colors[c].forEach(function (str) {\n\t    h[str] = c;\n\t  });\n\t  return h;\n\t}, {});\n\t\n\t},{}],174:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//list of inconsistent parts-of-speech\n\t\n\tvar conflicts = [\n\t//top-level pos are all inconsistent\n\t['Noun', 'Verb', 'Adjective', 'Adverb', 'Determiner', 'Conjunction', 'Preposition', 'QuestionWord', 'Expression', 'Url', 'PhoneNumber', 'Email', 'Emoji'],\n\t//exlusive-nouns\n\t['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n\t//things that can't be plural\n\t['Plural', 'Singular'],\n\t// ['Plural', 'Pronoun'],\n\t['Plural', 'Person'], ['Plural', 'Organization'], ['Plural', 'Currency'], ['Plural', 'Ordinal'],\n\t//exlusive-people\n\t['MaleName', 'FemaleName'], ['FirstName', 'LastName', 'Honorific'],\n\t//adjectives\n\t['Comparative', 'Superlative'],\n\t//values\n\t['Value', 'Verb', 'Adjective'],\n\t// ['Value', 'Year'],\n\t['Ordinal', 'Cardinal'], ['TextValue', 'NumericValue'], ['NiceNumber', 'TextValue'], ['Ordinal', 'Currency'], //$5.50th\n\t//verbs\n\t['PastTense', 'PerfectTense', 'Pluperfect', 'FuturePerfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund'],\n\t//date\n\t['Month', 'WeekDay', 'Year', 'Duration'], ['Particle', 'Conjunction', 'Adverb', 'Preposition'], ['Date', 'Verb', 'Adjective', 'Person'],\n\t//phrases\n\t['NounPhrase', 'VerbPhrase', 'AdjectivePhrase', 'ConditionalPhrase'],\n\t//a/an -> 1\n\t['Value', 'Determiner'], ['Verb', 'NounPhrase'], ['Noun', 'VerbPhrase'],\n\t//roman numerals\n\t['RomanNumeral', 'Fraction', 'NiceNumber'], ['RomanNumeral', 'Money'],\n\t//cases\n\t['UpperCase', 'TitleCase', 'CamelCase']];\n\t\n\tvar find = function find(tag) {\n\t  var arr = [];\n\t  for (var i = 0; i < conflicts.length; i++) {\n\t    if (conflicts[i].indexOf(tag) !== -1) {\n\t      arr = arr.concat(conflicts[i]);\n\t    }\n\t  }\n\t  return arr.filter(function (t) {\n\t    return t !== tag;\n\t  });\n\t};\n\t\n\tmodule.exports = find;\n\t\n\t// console.log(find('Person'));\n\t\n\t},{}],175:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar conflicts = _dereq_('./conflicts');\n\tvar tree = _dereq_('./tree');\n\t\n\tvar extra = {\n\t  Month: 'Singular',\n\t  // Year: 'Noun',\n\t  Time: 'Noun',\n\t  WeekDay: 'Noun',\n\t  Duration: 'Noun',\n\t  NumberRange: 'Contraction'\n\t};\n\t\n\tvar all_children = function all_children(obj) {\n\t  if (obj === true) {\n\t    return [];\n\t  }\n\t  var children = Object.keys(obj || {});\n\t  //two levels deep\n\t  children.forEach(function (str) {\n\t    if (_typeof(obj[str]) === 'object') {\n\t      var kids = Object.keys(obj[str]);\n\t      kids.forEach(function (gc) {\n\t        if (_typeof(obj[str][gc]) === 'object') {\n\t          var grandkids = Object.keys(obj[str][gc]);\n\t          children = children.concat(grandkids);\n\t        }\n\t      });\n\t      children = children.concat(kids);\n\t    }\n\t  });\n\t  return children;\n\t};\n\t\n\tvar build = function build() {\n\t  //make tags\n\t  var all = {};\n\t  //recursively add them\n\t  var add_tags = function add_tags(obj, is) {\n\t    Object.keys(obj).forEach(function (k) {\n\t      is = is.slice(0); //clone it\n\t      all[k] = {\n\t        parents: is,\n\t        children: all_children(obj[k])\n\t      };\n\t      if (obj[k] !== true) {\n\t        add_tags(obj[k], is.concat([k])); //recursive\n\t      }\n\t    });\n\t  };\n\t  add_tags(tree, []);\n\t\n\t  //add extras\n\t  Object.keys(all).forEach(function (tag) {\n\t    if (extra[tag]) {\n\t      all[tag].parents.push(extra[tag]);\n\t    }\n\t  });\n\t\n\t  //add conflicts\n\t  Object.keys(all).forEach(function (tag) {\n\t    all[tag].not = conflicts(tag);\n\t    var parents = all[tag].parents;\n\t    for (var i = 0; i < parents.length; i++) {\n\t      var alsoNot = conflicts(parents[i]);\n\t      all[tag].not = all[tag].not.concat(alsoNot);\n\t    }\n\t  });\n\t\n\t  return all;\n\t};\n\t\n\tmodule.exports = build();\n\t\n\t},{\"./conflicts\":174,\"./tree\":176}],176:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\t//the POS tags we use, according to their dependencies\n\t//(dont make it too deep, cause fns aren't properly clever-enough)\n\tmodule.exports = {\n\t  Noun: {\n\t    Singular: {\n\t      Person: {\n\t        FirstName: {\n\t          MaleName: true,\n\t          FemaleName: true\n\t        },\n\t        LastName: true,\n\t        Honorific: true\n\t      },\n\t      Place: {\n\t        Country: true,\n\t        City: true,\n\t        Address: true\n\t      },\n\t      Organization: {\n\t        SportsTeam: true,\n\t        Company: true,\n\t        School: true\n\t      }\n\t    },\n\t    Plural: true,\n\t    Pronoun: true,\n\t    Actor: true,\n\t    Unit: true,\n\t    Demonym: true,\n\t    Possessive: true\n\t  },\n\t  Date: { //not a noun, but usually is\n\t    Month: true,\n\t    WeekDay: true,\n\t    RelativeDay: true,\n\t    Year: true,\n\t    Duration: true,\n\t    Time: true,\n\t    Holiday: true\n\t  },\n\t  Verb: {\n\t    PresentTense: {\n\t      Infinitive: true,\n\t      Gerund: true\n\t    },\n\t    PastTense: true,\n\t    PerfectTense: true,\n\t    FuturePerfect: true,\n\t    Pluperfect: true,\n\t    Copula: true,\n\t    Modal: true,\n\t    Participle: true,\n\t    Particle: true,\n\t    PhrasalVerb: true\n\t  },\n\t  Adjective: {\n\t    Comparative: true,\n\t    Superlative: true\n\t  },\n\t  Adverb: true,\n\t  Value: {\n\t    Ordinal: true,\n\t    Cardinal: {\n\t      RomanNumeral: true\n\t    },\n\t    Fraction: true,\n\t    TextValue: true,\n\t    NumericValue: true,\n\t    NiceNumber: true,\n\t    Money: true,\n\t    NumberRange: true\n\t  },\n\t  Currency: true,\n\t  //glue\n\t  Determiner: true,\n\t  Conjunction: true,\n\t  Preposition: true,\n\t  QuestionWord: true,\n\t  Expression: true,\n\t  Url: true,\n\t  PhoneNumber: true,\n\t  HashTag: true,\n\t  Emoji: true,\n\t  Email: true,\n\t\n\t  //non-exclusive\n\t  Condition: true,\n\t  Auxillary: true,\n\t  Negative: true,\n\t  Contraction: true,\n\t\n\t  TitleCase: true,\n\t  CamelCase: true,\n\t  UpperCase: true,\n\t  Hyphenated: true,\n\t  Acronym: true,\n\t  ClauseEnd: true,\n\t  //phrases\n\t  Quotation: true\n\t};\n\t\n\t},{}],177:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar fns = _dereq_('./paths').fns;\n\tvar build_whitespace = _dereq_('./whitespace');\n\tvar makeUID = _dereq_('./makeUID');\n\t\n\tvar Term = function () {\n\t  function Term(str) {\n\t    _classCallCheck(this, Term);\n\t\n\t    this._text = fns.ensureString(str);\n\t    this.tag = {};\n\t    //seperate whitespace from the text\n\t    var parsed = build_whitespace(this._text);\n\t    this.whitespace = parsed.whitespace;\n\t    this._text = parsed.text;\n\t    // console.log(this.whitespace, this._text);\n\t    this.parent = null;\n\t    this.silent_term = '';\n\t    //has this term been modified\n\t    this.dirty = false;\n\t    this.normalize();\n\t    //make a unique id for this term\n\t    this.uid = makeUID(this.normal);\n\t  }\n\t\n\t  _createClass(Term, [{\n\t    key: 'index',\n\t\n\t    /** where in the sentence is it? zero-based. */\n\t    value: function index() {\n\t      var ts = this.parentTerms;\n\t      if (!ts) {\n\t        return null;\n\t      }\n\t      return ts.terms.indexOf(this);\n\t    }\n\t    /** make a copy with no references to the original  */\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var term = new Term(this._text, null);\n\t      term.tag = fns.copy(this.tag);\n\t      term.whitespace = fns.copy(this.whitespace);\n\t      term.silent_term = this.silent_term;\n\t      return term;\n\t    }\n\t  }, {\n\t    key: 'text',\n\t    set: function set(str) {\n\t      str = str || '';\n\t      this._text = str.trim();\n\t      this.dirty = true;\n\t      if (this._text !== str) {\n\t        this.whitespace = build_whitespace(str);\n\t      }\n\t      this.normalize();\n\t    },\n\t    get: function get() {\n\t      return this._text;\n\t    }\n\t  }, {\n\t    key: 'isA',\n\t    get: function get() {\n\t      return 'Term';\n\t    }\n\t  }]);\n\t\n\t  return Term;\n\t}();\n\t\n\tTerm = _dereq_('./methods/normalize')(Term);\n\tTerm = _dereq_('./methods/isA')(Term);\n\tTerm = _dereq_('./methods/out')(Term);\n\tTerm = _dereq_('./methods/tag')(Term);\n\tTerm = _dereq_('./methods/case')(Term);\n\tTerm = _dereq_('./methods/punctuation')(Term);\n\t\n\tmodule.exports = Term;\n\t\n\t},{\"./makeUID\":178,\"./methods/case\":179,\"./methods/isA\":180,\"./methods/normalize\":181,\"./methods/out\":185,\"./methods/punctuation\":187,\"./methods/tag\":188,\"./paths\":192,\"./whitespace\":193}],178:[function(_dereq_,module,exports){\n\t'use strict';\n\t//this is a not-well-thought-out way to reduce our dependence on `object===object` reference stuff\n\t//generates a unique id for this term\n\t//may need to change when the term really-transforms? not sure.\n\t\n\tvar uid = function uid(str) {\n\t  var nums = '';\n\t  for (var i = 0; i < 5; i++) {\n\t    nums += parseInt(Math.random() * 9, 10);\n\t  }\n\t  return str + '-' + nums;\n\t};\n\tmodule.exports = uid;\n\t\n\t},{}],179:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar addMethods = function addMethods(Term) {\n\t\n\t  var methods = {\n\t    toUpperCase: function toUpperCase() {\n\t      this.text = this.text.toUpperCase();\n\t      this.tagAs('#UpperCase', 'toUpperCase');\n\t      return this;\n\t    },\n\t    toLowerCase: function toLowerCase() {\n\t      this.text = this.text.toLowerCase();\n\t      this.unTag('#TitleCase');\n\t      this.unTag('#UpperCase');\n\t      return this;\n\t    },\n\t    toTitleCase: function toTitleCase() {\n\t      this.text = this.text.replace(/^[a-z]/, function (x) {\n\t        return x.toUpperCase();\n\t      });\n\t      this.tagAs('#TitleCase', 'toTitleCase');\n\t      return this;\n\t    },\n\t    //(camelCase() is handled in `./terms` )\n\t\n\t    /** is it titlecased because it deserves it? Like a person's name? */\n\t    needsTitleCase: function needsTitleCase() {\n\t      var titleCases = ['Person', 'Place', 'Organization', 'Acronym', 'UpperCase', 'Currency', 'RomanNumeral', 'Month', 'WeekDay', 'Holiday', 'Demonym'];\n\t      for (var i = 0; i < titleCases.length; i++) {\n\t        if (this.tag[titleCases[i]]) {\n\t          return true;\n\t        }\n\t      }\n\t      //specific words that keep their titlecase\n\t      //https://en.wikipedia.org/wiki/Capitonym\n\t      var irregulars = ['i', 'god', 'allah'];\n\t      for (var _i = 0; _i < irregulars.length; _i++) {\n\t        if (this.normal === irregulars[_i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Term.prototype[k] = methods[k];\n\t  });\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],180:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar addMethods = function addMethods(Term) {\n\t\n\t  var methods = {\n\t    /** does it appear to be an acronym, like FBI or M.L.B. */\n\t    isAcronym: function isAcronym() {\n\t      //like N.D.A\n\t      if (this.text.match(/([A-Z]\\.)+[A-Z]?$/)) {\n\t        return true;\n\t      }\n\t      //like 'F.'\n\t      if (this.text.match(/^[A-Z]\\.$/)) {\n\t        return true;\n\t      }\n\t      //like NDA\n\t      if (this.text.match(/[A-Z]{3}$/)) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /** check if it is word-like in english */\n\t    isWord: function isWord() {\n\t      var t = this;\n\t      //assume a contraction produces a word-word\n\t      if (t.silent_term) {\n\t        return true;\n\t      }\n\t      //no letters or numbers\n\t      if (!t.text.match(/[a-z|0-9]/i)) {\n\t        return false;\n\t      }\n\t      //has letters, but with no vowels\n\t      if (t.normal.match(/[a-z]/) && t.normal.length > 1 && !t.normal.match(/[aeiouy]/i)) {\n\t        return false;\n\t      }\n\t      //has numbers but not a 'value'\n\t      if (t.normal.match(/[0-9]/)) {\n\t        //s4e\n\t        if (t.normal.match(/[a-z][0-9][a-z]/)) {\n\t          return false;\n\t        }\n\t        //ensure it looks like a 'value' eg '-$4,231.00'\n\t        if (!t.normal.match(/^([$-])*?([0-9,\\.])*?([s\\$%])*?$/)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  };\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Term.prototype[k] = methods[k];\n\t  });\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],181:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar addNormal = _dereq_('./normalize').addNormal;\n\tvar addRoot = _dereq_('./root');\n\t\n\tvar addMethods = function addMethods(Term) {\n\t\n\t  var methods = {\n\t    normalize: function normalize() {\n\t      addNormal(this);\n\t      addRoot(this);\n\t      return this;\n\t    }\n\t  };\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Term.prototype[k] = methods[k];\n\t  });\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{\"./normalize\":182,\"./root\":183}],182:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar killUnicode = _dereq_('./unicode');\n\t\n\t//some basic operations on a string to reduce noise\n\texports.normalize = function (str) {\n\t  str = str || '';\n\t  str = str.toLowerCase();\n\t  str = str.trim();\n\t  //(very) rough asci transliteration -  bjŏrk -> bjork\n\t  str = killUnicode(str);\n\t  //hashtags, atmentions\n\t  str = str.replace(/^[#@]/, '');\n\t  // coerce single curly quotes\n\t  str = str.replace(/[\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035]+/g, '\\'');\n\t  // coerce double curly quotes\n\t  str = str.replace(/[\\u201C\\u201D\\u201E\\u201F\\u2033\\u2036\"]+/g, '');\n\t  //coerce unicode elipses\n\t  str = str.replace(/\\u2026/g, '...');\n\t\n\t  //strip leading & trailing grammatical punctuation\n\t  if (!str.match(/^[:;]/)) {\n\t    str = str.replace(/\\.{3,}$/g, '');\n\t    str = str.replace(/['\",\\.!:;\\?\\)]$/g, '');\n\t    str = str.replace(/^['\"\\(]/g, '');\n\t  }\n\t  return str;\n\t};\n\t\n\texports.addNormal = function (term) {\n\t  var str = term._text || '';\n\t  str = exports.normalize(str);\n\t  //compact acronyms\n\t  if (term.isAcronym()) {\n\t    str = str.replace(/\\./g, '');\n\t  }\n\t  //nice-numbers\n\t  str = str.replace(/([0-9]),([0-9])/g, '$1$2');\n\t  term.normal = str;\n\t};\n\t\n\t// console.log(normalize('Dr. V Cooper'));\n\t\n\t},{\"./unicode\":184}],183:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar rootForm = function rootForm(term) {\n\t  var str = term.normal || term.silent_term || '';\n\t  //plural\n\t  // if (term.tag.Plural) {\n\t  // str = term.nouns().toSingular().normal || str;\n\t  // }\n\t  str = str.replace(/'s\\b/, '');\n\t  str = str.replace(/'\\b/, '');\n\t  term.root = str;\n\t};\n\t\n\tmodule.exports = rootForm;\n\t\n\t},{}],184:[function(_dereq_,module,exports){\n\t'use strict';\n\t//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n\t//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n\t//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n\t//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\n\t\n\tvar compact = {\n\t  '!': '¡',\n\t  '?': '¿Ɂ',\n\t  'a': 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАДадѦѧӐӑӒӓƛɅæ',\n\t  'b': 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬбвъьѢѣҌҍҔҕƥƾ',\n\t  'c': '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾϿЄСсєҀҁҪҫ',\n\t  'd': 'ÐĎďĐđƉƊȡƋƌǷ',\n\t  'e': 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n\t  'f': 'ƑƒϜϝӺӻҒғӶӷſ',\n\t  'g': 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n\t  'h': 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n\t  'I': 'ÌÍÎÏ',\n\t  'i': 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n\t  'j': 'ĴĵǰȷɈɉϳЈј',\n\t  'k': 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n\t  'l': 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n\t  'm': 'ΜϺϻМмӍӎ',\n\t  'n': 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n\t  'o': 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ¤ƍΏ',\n\t  'p': 'ƤƿΡρϷϸϼРрҎҏÞ',\n\t  'q': 'Ɋɋ',\n\t  'r': 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n\t  's': 'ŚśŜŝŞşŠšƧƨȘșȿςϚϛϟϨϩЅѕ',\n\t  't': 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮϯТт҂Ҭҭ',\n\t  'u': 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύϑЏЦЧцџҴҵҶҷӋӌӇӈ',\n\t  'v': 'νѴѵѶѷ',\n\t  'w': 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n\t  'x': '×ΧχϗϰХхҲҳӼӽӾӿ',\n\t  'y': 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n\t  'z': 'ŹźŻżŽžƩƵƶȤȥɀΖζ'\n\t};\n\t//decompress data into two hashes\n\tvar unicode = {};\n\tObject.keys(compact).forEach(function (k) {\n\t  compact[k].split('').forEach(function (s) {\n\t    unicode[s] = k;\n\t  });\n\t});\n\t\n\tvar killUnicode = function killUnicode(str) {\n\t  var chars = str.split('');\n\t  chars.forEach(function (s, i) {\n\t    if (unicode[s]) {\n\t      chars[i] = unicode[s];\n\t    }\n\t  });\n\t  return chars.join('');\n\t};\n\tmodule.exports = killUnicode;\n\t// console.log(fixUnicode('bjŏȒk'));\n\t\n\t},{}],185:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar renderHtml = _dereq_('./renderHtml');\n\tvar fns = _dereq_('../../paths').fns;\n\t\n\tvar methods = {\n\t  /** a pixel-perfect reproduction of the input, with whitespace preserved */\n\t  text: function text(r) {\n\t    return r.whitespace.before + r._text + r.whitespace.after;\n\t  },\n\t  /** a lowercased, punctuation-cleaned, whitespace-trimmed version of the word */\n\t  normal: function normal(r) {\n\t    return r.normal;\n\t  },\n\t  /** even-more normalized than normal */\n\t  root: function root(r) {\n\t    return r.root || r.normal;\n\t  },\n\t  /** the &encoded term in a span element, with POS as classNames */\n\t  html: function html(r) {\n\t    return renderHtml(r);\n\t  },\n\t  /** a simplified response for Part-of-Speech tagging*/\n\t  tags: function tags(r) {\n\t    return {\n\t      text: r.text,\n\t      normal: r.normal,\n\t      tags: Object.keys(r.tag)\n\t    };\n\t  },\n\t  /** check-print information for the console */\n\t  debug: function debug(r) {\n\t    var tags = Object.keys(r.tag).map(function (tag) {\n\t      return fns.printTag(tag);\n\t    }).join(', ');\n\t    var word = r.text;\n\t    // word = r.whitespace.before + word + r.whitespace.after;\n\t    word = '\\'' + fns.yellow(word || '-') + '\\'';\n\t    if (r.dirty) {\n\t      // word += fns.red('*');\n\t    }\n\t    var silent = '';\n\t    if (r.silent_term) {\n\t      silent = '[' + r.silent_term + ']';\n\t    }\n\t    word = fns.leftPad(word, 25);\n\t    word += fns.leftPad(silent, 5);\n\t    console.log('   ' + word + '   ' + '     - ' + tags);\n\t  }\n\t};\n\t\n\tvar addMethods = function addMethods(Term) {\n\t  //hook them into result.proto\n\t  Term.prototype.out = function (fn) {\n\t    if (!methods[fn]) {\n\t      fn = 'text';\n\t    }\n\t    return methods[fn](this);\n\t  };\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{\"../../paths\":192,\"./renderHtml\":186}],186:[function(_dereq_,module,exports){\n\t'use strict';\n\t//turn xml special characters into apersand-encoding.\n\t//i'm not sure this is perfectly safe.\n\t\n\tvar escapeHtml = function escapeHtml(s) {\n\t  var HTML_CHAR_MAP = {\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '&': '&amp;',\n\t    '\"': '&quot;',\n\t    '\\'': '&#39;',\n\t    ' ': '&nbsp;'\n\t  };\n\t  return s.replace(/[<>&\"' ]/g, function (ch) {\n\t    return HTML_CHAR_MAP[ch];\n\t  });\n\t};\n\t\n\t//remove html elements already in the text\n\t//not tested!\n\t//http://stackoverflow.com/questions/295566/sanitize-rewrite-html-on-the-client-side\n\tvar sanitize = function sanitize(html) {\n\t  var tagBody = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\n\t  var tagOrComment = new RegExp('<(?:'\n\t  // Comment body.\n\t  + '!--(?:(?:-*[^->])*--+|-?)'\n\t  // Special \"raw text\" elements whose content should be elided.\n\t  + '|script\\\\b' + tagBody + '>[\\\\s\\\\S]*?</script\\\\s*' + '|style\\\\b' + tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\n\t  // Regular name\n\t  + '|/?[a-z]' + tagBody + ')>', 'gi');\n\t  var oldHtml = void 0;\n\t  do {\n\t    oldHtml = html;\n\t    html = html.replace(tagOrComment, '');\n\t  } while (html !== oldHtml);\n\t  return html.replace(/</g, '&lt;');\n\t};\n\t\n\t//turn the term into ~properly~ formatted html\n\tvar renderHtml = function renderHtml(t) {\n\t  var classes = Object.keys(t.tag).filter(function (tag) {\n\t    return tag !== 'Term';\n\t  });\n\t  classes = classes.map(function (c) {\n\t    return 'nl-' + c;\n\t  });\n\t  classes = classes.join(' ');\n\t  var text = sanitize(t.text);\n\t  text = escapeHtml(text);\n\t  var el = '<span class=\"' + classes + '\">' + text + '</span>';\n\t  return escapeHtml(t.whitespace.before) + el + escapeHtml(t.whitespace.after);\n\t};\n\t\n\tmodule.exports = renderHtml;\n\t\n\t},{}],187:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar addMethods = function addMethods(Term) {\n\t\n\t  var methods = {\n\t    /** the punctuation at the end of this term*/\n\t    endPunctuation: function endPunctuation() {\n\t      var m = this.text.match(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i);\n\t      if (m) {\n\t        var allowed = {\n\t          ',': 'comma',\n\t          ':': 'colon',\n\t          ';': 'semicolon',\n\t          '.': 'period',\n\t          '...': 'elipses',\n\t          '!': 'exclamation',\n\t          '?': 'question'\n\t        };\n\t        if (allowed[m[1]]) {\n\t          return m[1];\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t    setPunctuation: function setPunctuation(punct) {\n\t      this.text = this.text.replace(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i, '');\n\t      this.text += punct;\n\t      return this;\n\t    },\n\t\n\t    /** check if the term ends with a comma */\n\t    hasComma: function hasComma() {\n\t      if (this.endPunctuation() === 'comma') {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    killPunctuation: function killPunctuation() {\n\t      this.text = this._text.replace(/([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/, '');\n\t      return this;\n\t    }\n\t  };\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Term.prototype[k] = methods[k];\n\t  });\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],188:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar setTag = _dereq_('./setTag');\n\tvar _unTag = _dereq_('./unTag');\n\tvar tagset = _dereq_('./paths').tags;\n\t\n\tvar addMethods = function addMethods(Term) {\n\t\n\t  var methods = {\n\t    /** set the term as this part-of-speech */\n\t    tagAs: function tagAs(tag, reason) {\n\t      setTag(this, tag, reason);\n\t    },\n\t    /** remove this part-of-speech from the term*/\n\t    unTag: function unTag(tag, reason) {\n\t      _unTag(this, tag, reason);\n\t    },\n\t\n\t    /** is this tag compatible with this word */\n\t    canBe: function canBe(tag) {\n\t      tag = tag || '';\n\t      tag = tag.replace(/^#/, '');\n\t      var not = tagset[tag].not || [];\n\t      for (var i = 0; i < not.length; i++) {\n\t        if (this.tag[not[i]]) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into term.prototype\n\t  Object.keys(methods).forEach(function (k) {\n\t    Term.prototype[k] = methods[k];\n\t  });\n\t  return Term;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{\"./paths\":189,\"./setTag\":190,\"./unTag\":191}],189:[function(_dereq_,module,exports){\n\targuments[4][99][0].apply(exports,arguments)\n\t},{\"../../paths\":192,\"dup\":99}],190:[function(_dereq_,module,exports){\n\t'use strict';\n\t//set a term as a particular Part-of-speech\n\t\n\tvar path = _dereq_('./paths');\n\tvar log = path.log;\n\tvar tagset = path.tags;\n\tvar unTag = _dereq_('./unTag');\n\t\n\tvar makeCompatible = function makeCompatible(term, tag, reason) {\n\t  if (!tagset[tag]) {\n\t    return;\n\t  }\n\t  //find incompatible tags\n\t  var not = tagset[tag].not || [];\n\t  for (var i = 0; i < not.length; i++) {\n\t    unTag(term, not[i], reason);\n\t  }\n\t};\n\t\n\tvar tag_one = function tag_one(term, tag, reason) {\n\t  //ignore if already tagged\n\t  if (term.tag[tag]) {\n\t    return;\n\t  }\n\t  reason = reason || '';\n\t  //clean first\n\t  makeCompatible(term, tag, reason);\n\t  // unTag(term, tag, reason);\n\t  log.tagAs(term, tag, reason);\n\t  term.tag[tag] = true;\n\t};\n\t\n\tvar tagAll = function tagAll(term, tag, reason) {\n\t  if (!term || !tag || typeof tag !== 'string') {\n\t    // console.log(tag)\n\t    return;\n\t  }\n\t  tag = tag || '';\n\t  tag = tag.replace(/^#/, '');\n\t  tag_one(term, tag, reason);\n\t  //find assumed-tags\n\t  if (tagset[tag]) {\n\t    var tags = tagset[tag].parents || [];\n\t    for (var i = 0; i < tags.length; i++) {\n\t      tag_one(term, tags[i], '-');\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = tagAll;\n\t// console.log(tagset['Person']);\n\t\n\t},{\"./paths\":189,\"./unTag\":191}],191:[function(_dereq_,module,exports){\n\t'use strict';\n\t//set a term as a particular Part-of-speech\n\t\n\tvar path = _dereq_('./paths');\n\tvar log = path.log;\n\tvar tagset = path.tags;\n\t\n\t//remove a tag from a term\n\tvar unTagOne = function unTagOne(term, tag, reason) {\n\t  if (term.tag[tag]) {\n\t    log.tell('   --' + tag + ' ' + (reason || ''));\n\t    delete term.tag[tag];\n\t  }\n\t};\n\t\n\tvar unTagAll = function unTagAll(term, tag, reason) {\n\t  if (!term || !tag) {\n\t    return;\n\t  }\n\t  unTagOne(term, tag, reason);\n\t  if (tagset[tag]) {\n\t    //pull-out their children (dependants) too\n\t    //this should probably be recursive, instead of just 2-deep\n\t    var killAlso = tagset[tag].children || [];\n\t    for (var o = 0; o < killAlso.length; o++) {\n\t      //kill its child\n\t      unTagOne(term, killAlso[o], reason);\n\t      //kill grandchildren too\n\t      var kill2 = tagset[killAlso[o]].children || [];\n\t      for (var i2 = 0; i2 < kill2.length; i2++) {\n\t        unTagOne(term, kill2[i2], reason);\n\t      }\n\t    }\n\t  }\n\t  return;\n\t};\n\tmodule.exports = unTagAll;\n\t\n\t},{\"./paths\":189}],192:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  fns: _dereq_('../fns'),\n\t  log: _dereq_('../log'),\n\t  data: _dereq_('../data'),\n\t  tags: _dereq_('../tags')\n\t};\n\t\n\t},{\"../data\":6,\"../fns\":21,\"../log\":23,\"../tags\":175}],193:[function(_dereq_,module,exports){\n\t'use strict';\n\t//seperate the 'meat' from the trailing/leading whitespace.\n\t//works in concert with ./src/result/tokenize.js\n\t\n\tvar build_whitespace = function build_whitespace(str) {\n\t  var whitespace = {\n\t    before: '',\n\t    after: ''\n\t  };\n\t  //get before punctuation/whitespace\n\t  var m = str.match(/^(\\s|-+|\\.\\.+)+/);\n\t  if (m) {\n\t    whitespace.before = m[0];\n\t    str = str.replace(/^(\\s|-+|\\.\\.+)+/, '');\n\t  }\n\t  //get after punctuation/whitespace\n\t  m = str.match(/(\\s+|-+|\\.\\.+)$/);\n\t  if (m) {\n\t    str = str.replace(/(\\s+|-+|\\.\\.+)$/, '');\n\t    whitespace.after = m[0];\n\t  }\n\t  return {\n\t    whitespace: whitespace,\n\t    text: str\n\t  };\n\t};\n\tmodule.exports = build_whitespace;\n\t\n\t},{}],194:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar Term = _dereq_('../term');\n\t\n\tvar notWord = {\n\t  '-': true,\n\t  '--': true,\n\t  '...': true\n\t};\n\t\n\t//turn a string into an array of terms (naiive for now, lumped later)\n\tvar fromString = function fromString(str) {\n\t  var all = [];\n\t  //start with a naiive split\n\t  str = str || '';\n\t  if (typeof str === 'number') {\n\t    str = '' + str;\n\t  }\n\t  var firstSplit = str.split(/(\\S+)/);\n\t  var arr = [];\n\t  for (var i = 0; i < firstSplit.length; i++) {\n\t    var word = firstSplit[i];\n\t    var hasHyphen = word.match(/^([a-z]+)(-)([a-z0-9].*)/i);\n\t    if (hasHyphen) {\n\t      //support multiple-hyphenated-terms\n\t      var hyphens = word.split('-');\n\t      for (var o = 0; o < hyphens.length; o++) {\n\t        if (o === hyphens.length - 1) {\n\t          arr.push(hyphens[o]);\n\t        } else {\n\t          arr.push(hyphens[o] + '-');\n\t        }\n\t      }\n\t    } else {\n\t      arr.push(word);\n\t    }\n\t  }\n\t  //greedy merge whitespace+arr to the right\n\t  var carry = '';\n\t  for (var _i = 0; _i < arr.length; _i++) {\n\t    //if it's more than a whitespace\n\t    if (arr[_i].match(/\\S/) && !notWord[arr[_i]]) {\n\t      all.push(carry + arr[_i]);\n\t      carry = '';\n\t    } else {\n\t      carry += arr[_i];\n\t    }\n\t  }\n\t  //handle last one\n\t  if (carry && all.length > 0) {\n\t    all[all.length - 1] += carry; //put it on the end\n\t  }\n\t  return all.map(function (t) {\n\t    return new Term(t);\n\t  });\n\t};\n\tmodule.exports = fromString;\n\t\n\t},{\"../term\":177}],195:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar tagger = _dereq_('../tagger');\n\tvar build = _dereq_('./build');\n\t\n\tvar Terms = function () {\n\t  function Terms(arr, lexicon, refText, refTerms) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Terms);\n\t\n\t    this.terms = arr;\n\t    this.lexicon = lexicon;\n\t    this.refText = refText;\n\t    this._refTerms = refTerms;\n\t    this.count = undefined;\n\t    this.get = function (n) {\n\t      return _this.terms[n];\n\t    };\n\t  }\n\t\n\t  _createClass(Terms, [{\n\t    key: 'posTag',\n\t    value: function posTag() {\n\t      tagger(this);\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'firstTerm',\n\t    value: function firstTerm() {\n\t      return this.terms[0];\n\t    }\n\t  }, {\n\t    key: 'lastTerm',\n\t    value: function lastTerm() {\n\t      return this.terms[this.terms.length - 1];\n\t    }\n\t  }, {\n\t    key: 'all',\n\t    value: function all() {\n\t      return this.parent;\n\t    }\n\t  }, {\n\t    key: 'data',\n\t    value: function data() {\n\t      return {\n\t        text: this.out('text'),\n\t        normal: this.out('normal')\n\t      };\n\t    }\n\t  }, {\n\t    key: 'found',\n\t    get: function get() {\n\t      return this.terms.length > 0;\n\t    }\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return this.terms.length;\n\t    }\n\t  }, {\n\t    key: 'isA',\n\t    get: function get() {\n\t      return 'Terms';\n\t    }\n\t  }, {\n\t    key: 'refTerms',\n\t    get: function get() {\n\t      return this._refTerms || this;\n\t    },\n\t    set: function set(ts) {\n\t      this._refTerms = ts;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'dirty',\n\t    set: function set(dirt) {\n\t      this.terms.forEach(function (t) {\n\t        t.dirty = dirt;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'parent',\n\t    get: function get() {\n\t      return this.refText || this;\n\t    },\n\t    set: function set(r) {\n\t      this.refText = r;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'parentTerms',\n\t    get: function get() {\n\t      return this.refTerms || this;\n\t    },\n\t    set: function set(r) {\n\t      this.refTerms = r;\n\t      return this;\n\t    }\n\t  }, {\n\t    key: 'whitespace',\n\t    get: function get() {\n\t      var _this2 = this;\n\t\n\t      return {\n\t        before: function before(str) {\n\t          _this2.firstTerm().whitespace.before = str;\n\t          return _this2;\n\t        },\n\t        after: function after(str) {\n\t          _this2.lastTerm().whitespace.after = str;\n\t          return _this2;\n\t        }\n\t      };\n\t    }\n\t  }], [{\n\t    key: 'fromString',\n\t    value: function fromString(str, lexicon) {\n\t      var termArr = build(str);\n\t      var ts = new Terms(termArr, lexicon, null);\n\t      //give each term a reference to this ts\n\t      ts.terms.forEach(function (t) {\n\t        t.parentTerms = ts;\n\t      });\n\t      ts.posTag();\n\t      return ts;\n\t    }\n\t  }]);\n\t\n\t  return Terms;\n\t}();\n\t\n\tTerms = _dereq_('./match')(Terms);\n\tTerms = _dereq_('./match/not')(Terms);\n\tTerms = _dereq_('./methods/tag')(Terms);\n\tTerms = _dereq_('./methods/loops')(Terms);\n\tTerms = _dereq_('./methods/delete')(Terms);\n\tTerms = _dereq_('./methods/insert')(Terms);\n\tTerms = _dereq_('./methods/misc')(Terms);\n\tTerms = _dereq_('./methods/out')(Terms);\n\tTerms = _dereq_('./methods/replace')(Terms);\n\tTerms = _dereq_('./methods/split')(Terms);\n\tTerms = _dereq_('./methods/transform')(Terms);\n\tmodule.exports = Terms;\n\t\n\t},{\"../tagger\":140,\"./build\":194,\"./match\":196,\"./match/not\":202,\"./methods/delete\":203,\"./methods/insert\":204,\"./methods/loops\":205,\"./methods/misc\":206,\"./methods/out\":207,\"./methods/replace\":208,\"./methods/split\":209,\"./methods/tag\":210,\"./methods/transform\":211}],196:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar syntax = _dereq_('./lib/syntax');\n\tvar startHere = _dereq_('./lib/startHere');\n\tvar Text = _dereq_('../../result/index');\n\t// const diff = require('./diff');\n\t\n\t\n\tvar matchMethods = function matchMethods(Terms) {\n\t\n\t  //support {word:true} whitelist\n\t  var matchObj = function matchObj(ts, obj) {\n\t    var matches = ts.terms.filter(function (t) {\n\t      return obj[t.normal];\n\t    });\n\t    matches = matches.map(function (a) {\n\t      return new Terms([a], ts.lexicon, ts.refText, ts.refTerms);\n\t    });\n\t    return new Text(matches, ts.lexicon, ts.parent);\n\t  };\n\t\n\t  //support [word, word] whitelist\n\t  var matchArr = function matchArr(r, arr) {\n\t    //its faster this way\n\t    var obj = arr.reduce(function (h, a) {\n\t      h[a] = true;\n\t      return h;\n\t    }, {});\n\t    return matchObj(r, obj);\n\t  };\n\t\n\t  //support regex-like whitelist-match\n\t  var matchString = function matchString(r, str, verbose) {\n\t    var matches = [];\n\t    var regs = syntax(str);\n\t    for (var t = 0; t < r.terms.length; t++) {\n\t      //don't loop through if '^'\n\t      if (regs[0] && regs[0].starting && t > 0) {\n\t        break;\n\t      }\n\t      var m = startHere(r, t, regs, verbose);\n\t      if (m) {\n\t        matches.push(m);\n\t        //ok, don't try to match these again.\n\t        var skip = m.length - 1;\n\t        t += skip; //this could use some work\n\t      }\n\t    }\n\t    matches = matches.map(function (a) {\n\t      return new Terms(a, r.lexicon, r.refText, r.refTerms);\n\t    });\n\t    return new Text(matches, r.lexicon, r.parent);\n\t  };\n\t\n\t  var methods = {\n\t\n\t    /**match all */\n\t    match: function match(want, verbose) {\n\t      //support regex-like whitelist-match\n\t      if (typeof want === 'string') {\n\t        return matchString(this, want, verbose);\n\t      }\n\t      if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n\t        var type = Object.prototype.toString.call(want);\n\t        //support [word, word] whitelist\n\t        if (type === '[object Array]') {\n\t          return matchArr(this, want, verbose);\n\t        }\n\t        //support {word:true} whitelist\n\t        if (type === '[object Object]') {\n\t          return matchObj(this, want, verbose);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**return first match */\n\t    matchOne: function matchOne(str) {\n\t      var regs = syntax(str);\n\t      for (var t = 0; t < this.terms.length; t++) {\n\t        //don't loop through if '^'\n\t        if (regs[0] && regs[0].starting && t > 0) {\n\t          break;\n\t        }\n\t        var m = startHere(this, t, regs);\n\t        if (m) {\n\t          return m;\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t\n\t    /**return first match */\n\t    has: function has(str) {\n\t      var m = this.matchOne(str);\n\t      return !!m;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = matchMethods;\n\t\n\t},{\"../../result/index\":25,\"./lib/startHere\":200,\"./lib/syntax\":201}],197:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('./paths').fns;\n\t\n\t//compare 1 term to one reg\n\tvar perfectMatch = function perfectMatch(term, reg) {\n\t  if (!term || !reg) {\n\t    return false;\n\t  }\n\t  //support '.' - any\n\t  if (reg.anyOne) {\n\t    return true;\n\t  }\n\t  //pos-match\n\t  if (reg.tag) {\n\t    for (var i = 0; i < reg.tag.length; i++) {\n\t      var tag = reg.tag[i];\n\t      if (term.tag[tag]) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t  //one-of term-match\n\t  if (reg.oneOf) {\n\t    for (var _i = 0; _i < reg.oneOf.length; _i++) {\n\t      var str = reg.oneOf[_i];\n\t      //try a tag match\n\t      if (str.match(/^#/)) {\n\t        var _tag = str.replace(/^#/, '');\n\t        _tag = fns.titleCase(_tag);\n\t        if (term.tag[_tag]) {\n\t          return true;\n\t        }\n\t        //try a string-match\n\t      } else if (term.normal === str || term.text === str) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t  //text-match\n\t  if (reg.normal) {\n\t    if (term.normal === reg.normal || term.text === reg.normal || term.root === reg.normal) {\n\t      return true;\n\t    }\n\t    //try contraction match too\n\t    if (term.silent_term === reg.normal) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t};\n\t\n\t//wrap above method, to support '!' negation\n\tvar isMatch = function isMatch(term, reg, verbose) {\n\t  var found = perfectMatch(term, reg, verbose);\n\t  if (reg.negative) {\n\t    found = !!!found;\n\t  }\n\t  return found;\n\t};\n\tmodule.exports = isMatch;\n\t\n\t},{\"./paths\":199}],198:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('./paths').fns;\n\t\n\tvar almostMatch = function almostMatch(reg_str, term) {\n\t  return fns.startsWith(term.normal, reg_str);\n\t};\n\t\n\t// match ['john', 'smith'] regs, when the term is lumped\n\tvar lumpMatch = function lumpMatch(term, regs, reg_i) {\n\t  var reg_str = regs[reg_i].normal;\n\t  //is this a partial match? 'tony'& 'tony hawk'\n\t  if (almostMatch(reg_str, term)) {\n\t    //try to grow it\n\t    for (reg_i = reg_i + 1; reg_i < regs.length; reg_i++) {\n\t      reg_str += ' ' + regs[reg_i].normal;\n\t      //is it now perfect?\n\t      if (reg_str === term.normal) {\n\t        return reg_i;\n\t      }\n\t      //is it still almost?\n\t      if (almostMatch(reg_str, term)) {\n\t        continue;\n\t      }\n\t      return null;\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = lumpMatch;\n\t\n\t},{\"./paths\":199}],199:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  fns: _dereq_('../../../fns'),\n\t  log: _dereq_('../../../log')\n\t};\n\t\n\t},{\"../../../fns\":21,\"../../../log\":23}],200:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar lumpMatch = _dereq_('./lumpMatch');\n\tvar isMatch = _dereq_('./isMatch');\n\t\n\t// match everything until this point - '*'\n\tvar greedyUntil = function greedyUntil(ts, i, reg) {\n\t  for (i = i; i < ts.length; i++) {\n\t    var t = ts.terms[i];\n\t    if (isMatch(t, reg)) {\n\t      return i;\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\t//keep matching this reg as long as possible\n\tvar greedyOf = function greedyOf(ts, i, reg, until) {\n\t  for (i = i; i < ts.length; i++) {\n\t    var t = ts.terms[i];\n\t    //found next reg ('until')\n\t    if (until && isMatch(t, until)) {\n\t      return i;\n\t    }\n\t    //die here\n\t    if (!isMatch(t, reg)) {\n\t      return i;\n\t    }\n\t  }\n\t  return i;\n\t};\n\t\n\t//try and match all regs, starting at this term\n\tvar startHere = function startHere(ts, startAt, regs, verbose) {\n\t  var term_i = startAt;\n\t  //check each regex-thing\n\t  for (var reg_i = 0; reg_i < regs.length; reg_i++) {\n\t    var term = ts.terms[term_i];\n\t    var reg = regs[reg_i];\n\t    var next_reg = regs[reg_i + 1];\n\t\n\t    if (!term) {\n\t      //we didn't need it anyways\n\t      if (reg.optional) {\n\t        continue;\n\t      }\n\t      return null;\n\t    }\n\t\n\t    //catch '^' errors\n\t    if (reg.starting && term_i > 0) {\n\t      return null;\n\t    }\n\t\n\t    //catch '$' errors\n\t    if (reg.ending && term_i !== ts.length - 1 && !reg.minMax) {\n\t      return null;\n\t    }\n\t\n\t    //support '*'\n\t    if (regs[reg_i].astrix) {\n\t      //just grab until the end..\n\t      if (!next_reg) {\n\t        return ts.terms.slice(startAt, ts.length);\n\t      }\n\t      var foundAt = greedyUntil(ts, term_i, regs[reg_i + 1]);\n\t      if (!foundAt) {\n\t        return null;\n\t      }\n\t      term_i = foundAt + 1;\n\t      reg_i += 1;\n\t      continue;\n\t    }\n\t\n\t    //support '{x,y}'\n\t    if (regs[reg_i].minMax) {\n\t      //on last reg?\n\t      if (!next_reg) {\n\t        var len = ts.length;\n\t        var max = regs[reg_i].minMax.max + startAt;\n\t        //if it must go to the end, but can't\n\t        if (regs[reg_i].ending && max < len) {\n\t          return null;\n\t        }\n\t        //dont grab past the end\n\t        if (max < len) {\n\t          len = max;\n\t        }\n\t        return ts.terms.slice(startAt, len);\n\t      }\n\t      //otherwise, match until this next thing\n\t      var _foundAt = greedyUntil(ts, term_i, next_reg);\n\t      if (!_foundAt) {\n\t        return null;\n\t      }\n\t      //if it's too close/far..\n\t      var minMax = regs[reg_i].minMax;\n\t      if (_foundAt < minMax.min || _foundAt > minMax.max) {\n\t        return null;\n\t      }\n\t      term_i = _foundAt + 1;\n\t      reg_i += 1;\n\t      continue;\n\t    }\n\t\n\t    //if optional, check next one\n\t    if (reg.optional) {\n\t      var until = regs[reg_i + 1];\n\t      term_i = greedyOf(ts, term_i, reg, until);\n\t      continue;\n\t    }\n\t\n\t    //check a perfect match\n\t    if (isMatch(term, reg, verbose)) {\n\t      term_i += 1;\n\t      //try to greedy-match '+'\n\t      if (reg.consecutive) {\n\t        var _until = regs[reg_i + 1];\n\t        term_i = greedyOf(ts, term_i, reg, _until);\n\t      }\n\t      continue;\n\t    }\n\t\n\t    if (term.silent_term && !term.normal) {\n\t      //skip over silent contraction terms\n\t      //we will continue on it, but not start on it\n\t      if (reg_i === 0) {\n\t        return null;\n\t      }\n\t      //try the next term, but with this regex again\n\t      term_i += 1;\n\t      reg_i -= 1;\n\t      continue;\n\t    }\n\t\n\t    //handle partial-matches of lumped terms\n\t    var lumpUntil = lumpMatch(term, regs, reg_i);\n\t    if (lumpUntil) {\n\t      reg_i = lumpUntil;\n\t      term_i += 1;\n\t      continue;\n\t    }\n\t\n\t    //was it optional anways?\n\t    if (reg.optional) {\n\t      continue;\n\t    }\n\t    return null;\n\t  }\n\t  return ts.terms.slice(startAt, term_i);\n\t};\n\t\n\tmodule.exports = startHere;\n\t\n\t},{\"./isMatch\":197,\"./lumpMatch\":198}],201:[function(_dereq_,module,exports){\n\t'use strict';\n\t// parse a search lookup term find the regex-like syntax in this term\n\t\n\tvar fns = _dereq_('./paths').fns;\n\t\n\t//turn 'regex-like' search string into parsed json\n\tvar parse_term = function parse_term(term) {\n\t  term = term || '';\n\t  term = term.trim();\n\t  var reg = {\n\t    optional: false\n\t  };\n\t  //order matters..\n\t\n\t  //negation ! flag\n\t  if (fns.startsWith(term, '!')) {\n\t    term = term.substr(1, term.length);\n\t    reg.negative = true;\n\t  }\n\t  //leading ^ flag\n\t  if (fns.startsWith(term, '^')) {\n\t    term = term.substr(1, term.length);\n\t    reg.starting = true;\n\t  }\n\t  //trailing $ flag means ending\n\t  if (fns.endsWith(term, '$')) {\n\t    term = term.replace(/\\$$/, '');\n\t    reg.ending = true;\n\t  }\n\t  //optional flag\n\t  if (fns.endsWith(term, '?')) {\n\t    term = term.replace(/\\?$/, '');\n\t    reg.optional = true;\n\t  }\n\t  //atleast-one-but-greedy flag\n\t  if (fns.endsWith(term, '+')) {\n\t    term = term.replace(/\\+$/, '');\n\t    reg.consecutive = true;\n\t  }\n\t  //pos flag\n\t  if (fns.startsWith(term, '#')) {\n\t    term = term.replace(/^\\#/, '');\n\t    reg.tag = [fns.titleCase(term)];\n\t    term = null;\n\t  }\n\t  //one_of options flag\n\t  if (fns.startsWith(term, '(') && fns.endsWith(term, ')')) {\n\t    term = term.replace(/\\)$/, '');\n\t    term = term.replace(/^\\(/, '');\n\t    reg.oneOf = term.split(/\\|/g);\n\t    term = null;\n\t  }\n\t  //min/max any '{1,3}'\n\t  if (fns.startsWith(term, '{') && fns.endsWith(term, '}')) {\n\t    var m = term.match(/\\{([0-9]+), ?([0-9]+)\\}/);\n\t    reg.minMax = {\n\t      min: parseInt(m[1], 10),\n\t      max: parseInt(m[2], 10)\n\t    };\n\t    term = null;\n\t  }\n\t  //a period means any one term\n\t  if (term === '.') {\n\t    reg.anyOne = true;\n\t    term = null;\n\t  }\n\t  //a * means anything until sentence end\n\t  if (term === '*') {\n\t    reg.astrix = true;\n\t    term = null;\n\t  }\n\t  reg.normal = term;\n\t  if (reg.normal) {\n\t    reg.normal = reg.normal.toLowerCase();\n\t  }\n\t  return reg;\n\t};\n\t\n\t//turn a match string into an array of objects\n\tvar parse_all = function parse_all(reg) {\n\t  reg = reg || '';\n\t  reg = reg.split(/ +/);\n\t  return reg.map(parse_term);\n\t};\n\t// console.log(parse_all(''));\n\t\n\tmodule.exports = parse_all;\n\t\n\t},{\"./paths\":199}],202:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar syntax = _dereq_('./lib/syntax');\n\tvar startHere = _dereq_('./lib/startHere');\n\tvar Text = _dereq_('../../result/index');\n\t// const diff = require('./diff');\n\t\n\tvar addfns = function addfns(Terms) {\n\t\n\t  var fns = {\n\t    //blacklist from a {word:true} object\n\t    notObj: function notObj(r, obj) {\n\t      var matches = [];\n\t      var current = [];\n\t      r.terms.forEach(function (t) {\n\t        //TODO: support multi-word blacklists\n\t        //we should blacklist this term\n\t        if (obj.hasOwnProperty(t.normal)) {\n\t          if (current.length) {\n\t            matches.push(current);\n\t          }\n\t          current = [];\n\t        } else {\n\t          current.push(t);\n\t        }\n\t      });\n\t      //add remainder\n\t      if (current.length) {\n\t        matches.push(current);\n\t      }\n\t      matches = matches.map(function (a) {\n\t        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n\t      });\n\t      return new Text(matches, r.lexicon, r.parent);\n\t    },\n\t\n\t    //blacklist from a match string\n\t    notString: function notString(r, want, verbose) {\n\t      var matches = [];\n\t      var regs = syntax(want);\n\t      var terms = [];\n\t      //try the match starting from each term\n\t      for (var i = 0; i < r.terms.length; i++) {\n\t        var bad = startHere(r, i, regs, verbose);\n\t        if (bad) {\n\t          //reset matches\n\t          if (terms.length > 0) {\n\t            matches.push(terms);\n\t            terms = [];\n\t          }\n\t          //skip these terms now\n\t          i += bad.length - 1;\n\t          continue;\n\t        }\n\t        terms.push(r.terms[i]);\n\t      }\n\t      //remaining ones\n\t      if (terms.length > 0) {\n\t        matches.push(terms);\n\t      }\n\t      matches = matches.map(function (a) {\n\t        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n\t      });\n\t      // return matches\n\t      return new Text(matches, r.lexicon, r.parent);\n\t    }\n\t  };\n\t  //blacklist from a [word, word] array\n\t  fns.notArray = function (r, arr) {\n\t    var obj = arr.reduce(function (h, a) {\n\t      h[a] = true;\n\t      return h;\n\t    }, {});\n\t    return fns.notObj(r, obj);\n\t  };\n\t\n\t  /**return everything but these matches*/\n\t  Terms.prototype.not = function (want, verbose) {\n\t    //support [word, word] blacklist\n\t    if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n\t      var type = Object.prototype.toString.call(want);\n\t      if (type === '[object Array]') {\n\t        return fns.notArray(this, want, verbose);\n\t      }\n\t      if (type === '[object Object]') {\n\t        return fns.notObj(this, want, verbose);\n\t      }\n\t    }\n\t    if (typeof want === 'string') {\n\t      return fns.notString(this, want, verbose);\n\t    }\n\t    return this;\n\t  };\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = addfns;\n\t\n\t},{\"../../result/index\":25,\"./lib/startHere\":200,\"./lib/syntax\":201}],203:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar mutate = _dereq_('../mutate');\n\t\n\tvar deleteMethods = function deleteMethods(Terms) {\n\t\n\t  var methods = {\n\t\n\t    'delete': function _delete(reg) {\n\t      //don't touch parent if empty\n\t      if (!this.found) {\n\t        return this;\n\t      }\n\t      //remove all selected\n\t      if (!reg) {\n\t        this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n\t        return this;\n\t      }\n\t      //only remove a portion of this\n\t      var found = this.match(reg);\n\t      if (found.found) {\n\t        var r = mutate.deleteThese(this, found);\n\t        return r;\n\t      }\n\t      return this.parentTerms;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = deleteMethods;\n\t\n\t},{\"../mutate\":212}],204:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar mutate = _dereq_('../mutate');\n\t\n\t//whitespace\n\tvar addSpaceAt = function addSpaceAt(ts, i) {\n\t  if (!ts.terms.length || !ts.terms[i]) {\n\t    return ts;\n\t  }\n\t  ts.terms[i].whitespace.before = ' ';\n\t  return ts;\n\t};\n\t\n\tvar insertMethods = function insertMethods(Terms) {\n\t\n\t  //accept any sorta thing\n\t  var ensureTerms = function ensureTerms(input) {\n\t    if (input.isA === 'Terms') {\n\t      return input;\n\t    }\n\t    if (input.isA === 'Term') {\n\t      return new Terms([input]);\n\t    }\n\t    return Terms.fromString(input);\n\t  };\n\t\n\t  var methods = {\n\t\n\t    insertBefore: function insertBefore(input, tag) {\n\t      var original_l = this.terms.length;\n\t      var ts = ensureTerms(input);\n\t      if (tag) {\n\t        ts.tagAs(tag);\n\t      }\n\t      var index = this.index();\n\t      //pad a space on parent\n\t      addSpaceAt(this.parentTerms, index);\n\t      if (index > 0) {\n\t        addSpaceAt(ts, 0); //if in middle of sentence\n\t      }\n\t      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n\t      //also copy them to current selection\n\t      if (this.terms.length === original_l) {\n\t        this.terms = ts.terms.concat(this.terms);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    insertAfter: function insertAfter(input, tag) {\n\t      var original_l = this.terms.length;\n\t      var ts = ensureTerms(input);\n\t      if (tag) {\n\t        ts.tagAs(tag);\n\t      }\n\t      var index = this.terms[this.terms.length - 1].index();\n\t      //beginning whitespace to ts\n\t      addSpaceAt(ts, 0);\n\t      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index + 1, ts);\n\t      //also copy them to current selection\n\t      if (this.terms.length === original_l) {\n\t        this.terms = this.terms.concat(ts.terms);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    insertAt: function insertAt(index, input, tag) {\n\t      if (index < 0) {\n\t        index = 0;\n\t      }\n\t      var original_l = this.terms.length;\n\t      var ts = ensureTerms(input);\n\t      //tag that thing too\n\t      if (tag) {\n\t        ts.tagAs(tag);\n\t      }\n\t      if (index > 0) {\n\t        addSpaceAt(ts, 0); //if in middle of sentence\n\t      }\n\t      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n\t      //also copy them to current selection\n\t      if (this.terms.length === original_l) {\n\t        //splice the new terms into this (yikes!)\n\t        Array.prototype.splice.apply(this.terms, [index, 0].concat(ts.terms));\n\t      }\n\t      //beginning whitespace to ts\n\t      if (index === 0) {\n\t        this.terms[0].whitespace.before = '';\n\t        ts.terms[ts.terms.length - 1].whitespace.after = ' ';\n\t      }\n\t      return this;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = insertMethods;\n\t\n\t},{\"../mutate\":212}],205:[function(_dereq_,module,exports){\n\t'use strict';\n\t//these methods are simply term-methods called in a loop\n\t\n\tvar addMethods = function addMethods(Terms) {\n\t\n\t  var foreach = [\n\t  // ['tagAs'],\n\t  // ['unTag'],\n\t  // ['canBe'],\n\t  ['toUpperCase', 'UpperCase'], ['toLowerCase'], ['toTitleCase', 'TitleCase']];\n\t\n\t  foreach.forEach(function (arr) {\n\t    var k = arr[0];\n\t    var tag = arr[1];\n\t    var myFn = function myFn() {\n\t      var args = arguments;\n\t      this.terms.forEach(function (t) {\n\t        t[k].apply(t, args);\n\t      });\n\t      if (tag) {\n\t        this.tagAs(tag, k);\n\t      }\n\t      return this;\n\t    };\n\t    Terms.prototype[k] = myFn;\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],206:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar miscMethods = function miscMethods(Terms) {\n\t\n\t  var methods = {\n\t    term: function term(n) {\n\t      return this.terms[n];\n\t    },\n\t    first: function first() {\n\t      var t = this.terms[0];\n\t      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n\t    },\n\t    last: function last() {\n\t      var t = this.terms[this.terms.length - 1];\n\t      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n\t    },\n\t    slice: function slice(start, end) {\n\t      var terms = this.terms.slice(start, end);\n\t      return new Terms(terms, this.lexicon, this.refText, this.refTerms);\n\t    },\n\t    endPunctuation: function endPunctuation() {\n\t      return this.last().terms[0].endPunctuation();\n\t    },\n\t    canBe: function canBe(tag) {\n\t      tag = tag || '';\n\t      tag = tag.replace(/^#/, '');\n\t      //atleast one of these\n\t      for (var i = 0; i < this.terms.length; i++) {\n\t        if (!this.terms[i].canBe(tag)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t    index: function index() {\n\t      var parent = this.parentTerms;\n\t      var first = this.terms[0];\n\t      if (!parent || !first) {\n\t        return null; //maybe..\n\t      }\n\t      for (var i = 0; i < parent.terms.length; i++) {\n\t        if (first === parent.terms[i]) {\n\t          return i;\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t    termIndex: function termIndex() {\n\t      var first = this.terms[0];\n\t      var ref = this.refText || this;\n\t      if (!ref || !first) {\n\t        return null; //maybe..\n\t      }\n\t      // console.log(ref);\n\t      var n = 0;\n\t      for (var i = 0; i < ref.list.length; i++) {\n\t        var ts = ref.list[i];\n\t        for (var o = 0; o < ts.terms.length; o++) {\n\t          if (ts.terms[o] === first) {\n\t            return n;\n\t          }\n\t          n += 1;\n\t        }\n\t      }\n\t      return n;\n\t    },\n\t    //number of characters in this match\n\t    chars: function chars() {\n\t      return this.terms.reduce(function (i, t) {\n\t        i += t.whitespace.before.length;\n\t        i += t.text.length;\n\t        i += t.whitespace.after.length;\n\t        return i;\n\t      }, 0);\n\t    },\n\t\n\t    //just .length\n\t    wordCount: function wordCount() {\n\t      return this.terms.length;\n\t    },\n\t\n\t\n\t    //this has term-order logic, so has to be here\n\t    toCamelCase: function toCamelCase() {\n\t      this.toTitleCase();\n\t      this.terms.forEach(function (t, i) {\n\t        if (i !== 0) {\n\t          t.whitespace.before = '';\n\t        }\n\t        t.whitespace.after = '';\n\t      });\n\t      this.tagAs('#CamelCase', 'toCamelCase');\n\t      return this;\n\t    }\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = miscMethods;\n\t\n\t},{}],207:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar fns = _dereq_('../paths').fns;\n\t\n\tvar methods = {\n\t  text: function text(ts) {\n\t    return ts.terms.reduce(function (str, t) {\n\t      str += t.out('text');\n\t      return str;\n\t    }, '');\n\t  },\n\t\n\t  normal: function normal(ts) {\n\t    var terms = ts.terms.filter(function (t) {\n\t      return t.text;\n\t    });\n\t    terms = terms.map(function (t) {\n\t      return t.normal; //+ punct;\n\t    });\n\t    return terms.join(' ');\n\t  },\n\t\n\t  grid: function grid(ts) {\n\t    var str = '  ';\n\t    str += ts.terms.reduce(function (s, t) {\n\t      s += fns.leftPad(t.text, 11);\n\t      return s;\n\t    }, '');\n\t    return str + '\\n\\n';\n\t  },\n\t\n\t  color: function color(ts) {\n\t    return ts.terms.reduce(function (s, t) {\n\t      s += fns.printTerm(t);\n\t      return s;\n\t    }, '');\n\t  },\n\t  /** no punctuation, fancy business **/\n\t  root: function root(ts) {\n\t    return ts.terms.filter(function (t) {\n\t      return t.text;\n\t    }).map(function (t) {\n\t      return t.root;\n\t    }).join(' ').toLowerCase();\n\t  },\n\t\n\t  html: function html(ts) {\n\t    return ts.terms.map(function (t) {\n\t      return t.render.html();\n\t    }).join(' ');\n\t  },\n\t  debug: function debug(ts) {\n\t    ts.terms.forEach(function (t) {\n\t      t.out('debug');\n\t    });\n\t  }\n\t};\n\tmethods.plaintext = methods.text;\n\tmethods.normalize = methods.normal;\n\tmethods.normalized = methods.normal;\n\tmethods.colors = methods.color;\n\tmethods.tags = methods.terms;\n\t\n\tvar renderMethods = function renderMethods(Terms) {\n\t  Terms.prototype.out = function (str) {\n\t    if (methods[str]) {\n\t      return methods[str](this);\n\t    }\n\t    return methods.text(this);\n\t  };\n\t  //check method\n\t  Terms.prototype.debug = function () {\n\t    return methods.debug(this);\n\t  };\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = renderMethods;\n\t\n\t},{\"../paths\":213}],208:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar mutate = _dereq_('../mutate');\n\t\n\tvar replaceMethods = function replaceMethods(Terms) {\n\t  var methods = {\n\t\n\t    /**swap this for that */\n\t    replace: function replace(str1, str2) {\n\t      //in this form, we 'replaceWith'\n\t      if (str2 === undefined) {\n\t        return this.replaceWith(str1);\n\t      }\n\t      this.match(str1).replaceWith(str2);\n\t      return this;\n\t    },\n\t\n\t    /**swap this for that */\n\t    replaceWith: function replaceWith(str, tag) {\n\t      var toAdd = Terms.fromString(str);\n\t      if (tag) {\n\t        toAdd.tagAs(tag, 'user-given');\n\t      }\n\t      var index = this.index();\n\t      this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n\t      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, toAdd);\n\t      this.terms = toAdd.terms;\n\t      return this;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = replaceMethods;\n\t\n\t},{\"../mutate\":212}],209:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\t//break apart a termlist into (before, match after)\n\t\n\tvar breakUpHere = function breakUpHere(terms, ts) {\n\t  var firstTerm = ts.terms[0];\n\t  var len = ts.terms.length;\n\t  for (var i = 0; i < terms.length; i++) {\n\t    if (terms[i] === firstTerm) {\n\t      return {\n\t        before: terms.slice(0, i),\n\t        match: terms.slice(i, i + len),\n\t        after: terms.slice(i + len, terms.length)\n\t      };\n\t    }\n\t  }\n\t  return {\n\t    after: terms\n\t  };\n\t};\n\t\n\tvar splitMethods = function splitMethods(Terms) {\n\t\n\t  var methods = {\n\t\n\t    /** at the end of the match, split the terms **/\n\t    splitAfter: function splitAfter(reg, verbose) {\n\t      var _this = this;\n\t\n\t      var ms = this.match(reg, verbose); //Array[ts]\n\t      var termArr = this.terms;\n\t      var all = [];\n\t      ms.list.forEach(function (lookFor) {\n\t        var section = breakUpHere(termArr, lookFor);\n\t        if (section.before && section.match) {\n\t          all.push(section.before.concat(section.match));\n\t        }\n\t        termArr = section.after;\n\t      });\n\t      //add the remaining\n\t      if (termArr.length) {\n\t        all.push(termArr);\n\t      }\n\t      //make them termlists\n\t      all = all.map(function (ts) {\n\t        var parent = _this.refText; //|| this;\n\t        return new Terms(ts, _this.lexicon, parent, _this.refTerms);\n\t      });\n\t      return all;\n\t    },\n\t\n\t    /** return only before & after  the match**/\n\t    splitOn: function splitOn(reg, verbose) {\n\t      var _this2 = this;\n\t\n\t      var ms = this.match(reg, verbose); //Array[ts]\n\t      var termArr = this.terms;\n\t      var all = [];\n\t      ms.list.forEach(function (lookFor) {\n\t        var section = breakUpHere(termArr, lookFor);\n\t        if (section.before) {\n\t          all.push(section.before);\n\t        }\n\t        if (section.match) {\n\t          all.push(section.match);\n\t        }\n\t        termArr = section.after;\n\t      });\n\t      //add the remaining\n\t      if (termArr.length) {\n\t        all.push(termArr);\n\t      }\n\t      //make them termlists\n\t      all = all.filter(function (a) {\n\t        return a && a.length;\n\t      });\n\t      all = all.map(function (ts) {\n\t        return new Terms(ts, ts.lexicon, ts.refText, _this2.refTerms);\n\t      });\n\t      return all;\n\t    },\n\t\n\t    /** at the start of the match, split the terms**/\n\t    splitBefore: function splitBefore(reg, verbose) {\n\t      var _this3 = this;\n\t\n\t      var ms = this.match(reg, verbose); //Array[ts]\n\t      var termArr = this.terms;\n\t      var all = [];\n\t      ms.list.forEach(function (lookFor) {\n\t        var section = breakUpHere(termArr, lookFor);\n\t        if (section.before) {\n\t          all.push(section.before);\n\t        }\n\t        if (section.match) {\n\t          all.push(section.match);\n\t        }\n\t        termArr = section.after;\n\t      });\n\t      //add the remaining\n\t      if (termArr.length) {\n\t        all.push(termArr);\n\t      }\n\t      //cleanup-step: merge all (middle) matches with the next one\n\t      for (var i = 0; i < all.length; i++) {\n\t        for (var o = 0; o < ms.length; o++) {\n\t          if (ms.list[o].terms[0] === all[i][0]) {\n\t            if (all[i + 1]) {\n\t              all[i] = all[i].concat(all[i + 1]);\n\t              all[i + 1] = [];\n\t            }\n\t          }\n\t        }\n\t      }\n\t      //make them termlists\n\t      all = all.filter(function (a) {\n\t        return a && a.length;\n\t      });\n\t      all = all.map(function (ts) {\n\t        return new Terms(ts, ts.lexicon, ts.refText, _this3.refTerms);\n\t      });\n\t      return all;\n\t    }\n\t\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = splitMethods;\n\texports = splitMethods;\n\t\n\t},{}],210:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar addMethods = function addMethods(Terms) {\n\t\n\t  var methods = {\n\t    tagAs: function tagAs(tag, reason) {\n\t      this.terms.forEach(function (t) {\n\t        t.tagAs(tag, reason);\n\t      });\n\t    },\n\t    unTag: function unTag(tag, reason) {\n\t      this.terms.forEach(function (t) {\n\t        t.unTag(tag, reason);\n\t      });\n\t    },\n\t    canBe: function canBe(tag, reason) {\n\t      this.terms.forEach(function (t) {\n\t        t.canBe(tag, reason);\n\t      });\n\t    }\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = addMethods;\n\t\n\t},{}],211:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar transforms = function transforms(Terms) {\n\t\n\t  var methods = {\n\t\n\t    clone: function clone() {\n\t      var terms = this.terms.map(function (t) {\n\t        return t.clone();\n\t      });\n\t      return new Terms(terms, this.lexicon, this.refText, null); //, this.refTerms\n\t    },\n\t    hyphenate: function hyphenate() {\n\t      var _this = this;\n\t\n\t      this.terms.forEach(function (t, i) {\n\t        if (i !== _this.terms.length - 1) {\n\t          t.whitespace.after = '-';\n\t        }\n\t        if (i !== 0) {\n\t          t.whitespace.before = '';\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t    dehyphenate: function dehyphenate() {\n\t      this.terms.forEach(function (t) {\n\t        if (t.whitespace.after === '-') {\n\t          t.whitespace.after = ' ';\n\t        }\n\t      });\n\t      return this;\n\t    }\n\t  };\n\t\n\t  //hook them into result.proto\n\t  Object.keys(methods).forEach(function (k) {\n\t    Terms.prototype[k] = methods[k];\n\t  });\n\t  return Terms;\n\t};\n\t\n\tmodule.exports = transforms;\n\t\n\t},{}],212:[function(_dereq_,module,exports){\n\t'use strict';\n\t//\n\t\n\tvar getTerms = function getTerms(needle) {\n\t  var arr = [];\n\t  if (needle.isA === 'Terms') {\n\t    arr = needle.terms;\n\t  } else if (needle.isA === 'Text') {\n\t    arr = needle.flatten().list[0].terms;\n\t  } else if (needle.isA === 'Term') {\n\t    arr = [needle];\n\t  }\n\t  return arr;\n\t};\n\t\n\t//remove them\n\texports.deleteThese = function (source, needle) {\n\t  var arr = getTerms(needle);\n\t  source.terms = source.terms.filter(function (t) {\n\t    for (var i = 0; i < arr.length; i++) {\n\t      if (t === arr[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  });\n\t  return source;\n\t};\n\t\n\t//add them\n\texports.insertAt = function (terms, i, needle) {\n\t  needle.dirty = true;\n\t  var arr = getTerms(needle);\n\t  //handle whitespace\n\t  if (i > 0 && arr[0]) {\n\t    arr[0].whitespace.before = ' ';\n\t  }\n\t  //gnarly splice\n\t  //-( basically  - terms.splice(i+1, 0, arr) )\n\t  Array.prototype.splice.apply(terms, [i, 0].concat(arr));\n\t  return terms;\n\t};\n\t\n\t},{}],213:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  data: _dereq_('../data/index'),\n\t  lexicon: _dereq_('../data/lexicon'),\n\t  fns: _dereq_('../fns'),\n\t  log: _dereq_('../log'),\n\t  Term: _dereq_('../term')\n\t};\n\t\n\t},{\"../data/index\":6,\"../data/lexicon\":7,\"../fns\":21,\"../log\":23,\"../term\":177}],214:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:68;1:5A;2:6A;3:4I;4:5K;5:5N;6:62;7:66;a5Yb5Fc51d4Le49f3Vg3Ih35i2Tj2Rk2Ql2Fm27n1Zo1Kp13qu11r0Vs05tYuJvGw8year1za1D;arEeDholeCiBo9r8;o4Hy;man1o8u5P;d5Rzy;ck0despr63ly,ry;!sa3;a4Gek1lco1C;p0y;a9i8ola3W;b6Fol4K;gabo5Hin,nilla,rio5B;g1lt3ZnDpArb4Ms9tter8;!mo6;ed,u2;b1Hp9s8t19;ca3et,tairs;er,i3R;authorFdeDeCfair,ivers2known,like1precedMrAs9ti5w8;iel5ritt5C;ig1Kupervis0;e8u1;cognBgul5Il5I;v58xpect0;cid0r8;!grou53stood;iz0;aCeBiAo9r8;anqu4Jen5i4Doubl0ue;geth4p,rp5H;dy,me1ny;en57st0;boo,l8n,wd3R;ent0;aWca3PeUhTiRkin0FlOmNnobb42oKpIqueam42tCu8ymb58;bAdd4Wp8r3F;er8re0J;!b,i1Z;du0t3;aCeAi0Nr9u8yl3X;p56r5;aightfor4Vip0;ad8reotyp0;fa6y;nda5Frk;a4Si8lend51rig0V;cy,r19;le9mb4phist1Lr8u13vi3J;d4Yry;!mn;el1ug;e9i8y;ck,g09my;ek,nd4;ck,l1n8;ce4Ig3;a5e4iTut,y;c8em1lf3Fni1Fre1Eve4Gxy;o11r38;cr0int1l2Lme,v1Z;aCeAi9o8;bu6o2Csy,y2;ght0Ytzy,v2;a8b0Ucondi3Emo3Epublic37t1S;dy,l,r;b4Hci6gg0nd3S;a8icke6;ck,i4V;aKeIhoHicayu13lac4EoGr9u8;bl4Amp0ny;eDiAo8;!b02f8p4;ou3Su7;c9m8or;a2Le;ey,k1;ci7mi14se4M;li30puli6;ny;r8ti2Y;fe4Cv2J;in1Lr8st;allel0t8;-ti8i2;me;bKffIi1kHnGpFrg0Yth4utEv8;al,er8;!aBn9t,w8;e8roug9;ig8;ht;ll;do0Ger,g1Ysi0E;en,posi2K;g1Wli0D;!ay;b8li0B;eat;e7s8;ce08ole2E;aEeDiBo8ua3M;b3n9rLsy,t8;ab3;descri3Qstop;g8mb3;ht1;arby,cessa1Pighbor1xt;ive,k0;aDeBiAo8ultip3;bi3dern,l5n1Jo8st;dy,t;ld,nX;a8di04re;s1ty;cab2Vd1genta,in,jUkeshift,le,mmo8ny;th;aHeCiAo8;f0Zne1u8ve1w1y2;sy,t1Q;ke1m8ter2ve1;it0;ftBg9th2v8wd;el;al,e8;nda17;!-Z;ngu2Sst,tt4;ap1Di0EnoX;agg0ol1u8;i1ZniFstifi0veni3;cy,de2gno33llImFn8;br0doDiGn4sAt8;a2Wen7ox8;ic2F;a9i8;de;ne;or;men7p8;ar8erfe2Port0rop4;ti2;!eg2;aHeEiCoBu8;ge,m8rt;b3dr8id;um;me1ne6ok0s03ur1;ghfalut1Bl1sp8;an23;a9f03l8;l0UpO;dy,ven1;l9n5rro8;wi0A;f,low0;aIener1WhGid5loFoDr9u8;ard0;aAey,is1o8;o8ss;vy;tis,y;ld,ne,o8;d,fy;b2oI;a8o8;st1;in8u5y;ful;aIeGiElag21oArie9u8;n,rY;nd1;aAol09r8ul;e8m4;gPign;my;erce ,n8t;al,i09;ma3r8;ti3;bl0ke,l7n0Lr,u8vori06;l8x;ty;aEerie,lDnti0ZtheCvBx8;a1Hcess,pe9t8ube1M;ra;ct0rt;eryday,il;re2;dLiX;rBs8;t,yg8;oi8;ng;th1;aLeHiCoArea9u8;e,mb;ry;ne,ub3;le;dact0Officu0Xre,s9v8;er7;cre9eas0gruntl0hone6ord8tress0;er1;et;adpAn7rang0t9vo8;ut;ail0ermin0;an;i1mag0n8pp4;ish;agey,ertaKhIivHlFoAr8udd1;a8isp,owd0;mp0vZz0;loBm9ncre8rZst1vert,ward1zy;te;mon,ple8;te,x;ni2ss2;ev4o8;s0u5;il;eesy,i8;ef,l1;in;aLeIizarTlFoBrAu8;r1sy;ly;isk,okK;gAld,tt9un8;cy;om;us;an9iCo8;nd,o5;d,k;hi9lov0nt,st,tt4yo9;er;nd;ckBd,ld,nkArr9w5;dy;en;ruW;!wards;bRctu2dKfraJgain6hHlEntiquDpCrab,sleep,verBw8;a9k8;waU;re;age;pareUt;at0;coh8l,oof;ol8;ic;ead;st;id;eHuCv8;a9er7;se;nc0;ed;lt;al;erElDoBruAs8;eEtra8;ct;pt;a8ve;rd;aze,e;ra8;nt\";\n\t\n\t},{}],215:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"a05by 03d00eXfShQinPjustOkinda,mMnKoFpDquite,rAs6t3up2very,w1ye0;p,s;ay,ell; to,wards5;h1o0wiN;o,t6ward;en,us;everal,o0uch;!me1on,rt0; of;hUtimes,w04;a1e0;alP;ndomOthL;ar excellCer0oint blank; Khaps;f3n0;ce0ly;! 0;agXmoR; courFten;ewGo0; longCt withstanding;aybe,eanwhi9ore0;!ovA;! aboQ;deed,steR;en0;ce;or1urther0;!moG; 0ev3;examp0good,suE;le;n mas1v0;er;se;amn,e 1irect0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\";\n\t\n\t},{}],216:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"aCbBcAd9f8h7i6jfk,kul,l4m3ord,p1s0yyz;fo,yd;ek,h0;l,x;co,ia,uc;a0gw,hr;s,x;ax,cn,st;kg,nd;co,ra;en,fw,xb;dg,gk,lt;cn,kk;ms,tl\";\n\t\n\t},{}],217:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"a2Tb23c1Td1Oe1Nf1Lg1Gh18i16jakar2Ek0Xl0Rm0En0Ao08pXquiWrTsJtAu9v6w3y1z0;agreb,uri1W;ang1Qe0okohama;katerin1Frev31;ars1ellingt1Oin0rocl1;nipeg,terth0V;aw;a1i0;en2Glni2Y;lenc2Tncouv0Gr2F;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj22l13miso2Ira29; haJssaloni0X;gucigalpa,hr2Nl av0L;i0llinn,mpe2Angi07rtu;chu21n2LpT;a3e2h1kopje,t0ydney;ockholm,uttga11;angh1Eenzh1W;o0KvZ;int peters0Ul3n0ppo1E; 0ti1A;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t24;ga,o de janei16;to;a8e6h5i4o2r0ueb1Pyongya1M;a0etor23;gue;rt0zn23; elizabe3o;ls1Frae23;iladelph1Ynom pe07oenix;r0tah tik18;th;lerJr0tr0Z;is;dessa,s0ttawa;a1Glo;a2ew 0is;delTtaip0york;ei;goya,nt0Tpl0T;a5e4i3o1u0;mb0Kni0H;nt0scH;evideo,real;l1Ln01skolc;dellín,lbour0R;drid,l5n3r0;ib1se0;ille;or;chest0dalay,i0Y;er;mo;a4i1o0uxembou1FvAy00;ndZs angel0E;ege,ma0nz,sbYverpo1;!ss0;ol; pla0Husan0E;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Jndy,ohsiu0Gra0un02;c0j;hi;ncheLstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stH;nh;lsin0rakliF;ki;ifa,m0noi,va09;bu0RiltC;dan3en2hent,iza,othen1raz,ua0;dalaj0Fngzhou,tema05;bu0O;eToa;sk;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg\";\n\t\n\t},{}],218:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:39;1:2M;a2Xb2Ec22d1Ye1Sf1Mg1Bh19i13j11k0Zl0Um0Gn05om3DpZqat1JrXsKtCu6v4wal3yemTz2;a25imbabwe;es,lis and futu2Y;a2enezue32ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2Y;k.,s.2; 28a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Ys and caic1U; and 2-2;toba1K;go,kel0Ynga;iw2Wji2nz2S;ki2U;aCcotl1eBi8lov7o5pa2Cri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Rriname;lomon1Wmal0uth 2;afr2JkLsud2P;ak0en0;erra leoEn2;gapo1Xt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele25luc0mart20;epublic of ir0Com2Duss0w2;an26;a3eHhilippinTitcairn1Lo2uerto riM;l1rtugE;ki2Cl3nama,pua new0Ura2;gu6;au,esti2;ne;aAe8i6or2;folk1Hth3w2;ay; k2ern mariana1C;or0N;caragua,ger2ue;!ia;p2ther19w zeal1;al;mib0u2;ru;a6exi5icro0Ao2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i15;shall0Wtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed01;a5e4i2uxembourg;b2echtenste11thu1F;er0ya;ban0Hsotho;os,tv0;azakh1Ee2iriba03osovo,uwait,yrgyz1E;eling0Knya;a2erFord1D;ma16p1C;c6nd5r3s2taly,vory coast;le of m1Arael;a2el1;n,q;ia,oJ;el1;aiTon2ungary;dur0Ng kong;aBeAha0Qibralt9re7u2;a5ern4inea2ya0P;!-biss2;au;sey;deloupe,m,tema0Q;e2na0N;ce,nl1;ar;org0rmany;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\";\n\t\n\t},{}],219:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:17;a0Wb0Mc0Bd09e08f06g03h01iXjUkSlOmKnHomGpCqatari,rAs6t4u3v2wel0Qz1;am0Eimbabwe0;enezuel0ietnam0G;g8krai11;aiwShai,rinida0Hu1;ni0Prkmen;a3cot0Je2ingapoNlovak,oma0Tpa04udQw1y0X;edi0Jiss;negal0Ar07;mo0uT;o5us0Kw1;and0;a2eru0Ghilipp0Po1;li0Drtugu05;kist2lesti0Qna1raguay0;ma0P;ani;amiYi1orweO;caragu0geri1;an,en;a2ex0Mo1;ngo0Erocc0;cedo0Ila1;gasy,y07;a3eb8i1;b1thua0F;e0Dy0;o,t01;azakh,eny0o1uwaiti;re0;a1orda0A;ma0Bp1;anM;celandic,nd3r1sraeli,ta02vo06;a1iS;ni0qi;i0oneU;aiCin1ondur0unM;di;amCe1hanai0reek,uatemal0;or1rm0;gi0;i1ren6;lipino,n3;cuadoVgyp5ngliIstoWthiopi0urope0;a1ominXut3;niG;a8h5o3roa2ub0ze1;ch;ti0;lom1ngol4;bi0;a5i1;le0n1;ese;liforLm1na2;bo1erooK;di0;a9el7o5r2ul1;gaG;aziBi1;ti1;sh;li1sD;vi0;aru1gi0;si0;ngladeshi,sque;f9l6merAngol0r4si0us1;sie,tr1;a1i0;li0;gent1me4;ine;ba2ge1;ri0;ni0;gh0r1;ic0;an\";\n\t\n\t},{}],220:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"aZbYdTeRfuck,gQhKlHmGnFoCpAsh9u7voi01w3y0;a1eKu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! huh,-Oh,m;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a3e1i,mm,urr0;ah;e,ll0y;!o;ha0i;!ha;ah,ee,oodbye,rr;e0h,t cetera,ww;k,p;'3a0uh;m0ng;mit,n0;!it;oh;ah,oo,ye; 1h0rgh;!em;la\";\n\t\n\t},{}],221:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:81;1:7E;2:7G;3:7Y;4:65;5:7P;6:7T;7:7O;8:7U;9:7C;A:6K;B:7R;C:6X;D:79;a78b6Pc5Ud5Ce4Rf4Jg47h3Zi3Uj38k2Sl21m1An14o12p0Ur0FsYtNursu9vIwGyEza7;olan2vE;etDon5Z;an2enMhi6PilE;a,la,ma;aHeFiE;ctor1o9rgin1vi3B;l4VrE;a,na,oniA;len5Ones7N;aLeJheIi3onHrE;acCiFuE;dy;c1na,s8;i4Vya;l4Nres0;o3GrE;e1Oi,ri;bit8mEn29ra,s8;a7iEmy;!ka;aTel4HhLiKoItHuFyE;b7Tlv1;e,sEzV;an17i;acCel1H;f1nEph1;d7ia,ja,ya;lv1mon0;aHeEi24;e3i9lFrE;i,yl;ia,ly;nFrEu3w3;i,on;a,ia,nEon;a,on;b24i2l5Ymant8nd7raB;aPeLhon2i5oFuE;by,th;bIch4Pn2sFxE;an4W;aFeE;ma2Ut5;!lind;er5yn;bFnE;a,ee;a,eE;cAkaB;chEmo3qu3I;a3HelEi2;!e,le;aHeGhylFriE;scil0Oyamva2;is,lis;arl,t7;ige,mGrvati,tricFulE;a,etDin0;a,e,ia;!e9;f4BlE;ga,iv1;aIelHiForE;a,ma;cEkki,na;ho2No2N;!l;di6Hi36o0Qtas8;aOeKiHonFrignayani,uri2ZyrE;a,na,t2J;a,iE;ca,q3G;ch3SlFrE;an2iam;dred,iA;ag1DgGliFrE;ced63edi36;n2s5Q;an,han;bSdel4e,gdale3li59nRrHtil2uGvFx4yE;a,ra;is;de,re6;cMgKiGl3Fs8tFyanE;!n;a,ha,i3;aFb2Hja,l2Ena,sEtza;a,ol,sa;!nE;!a,e,n0;arEo,r4AueriD;et4Ai5;elLia;dakran5on,ue9;el,le;aXeSiOoKuGyE;d1nE;!a,da,e4Vn1D;ciGelFiEpe;sa;a,la;a,l3Un2;is,la,rEui2Q;aFeEna,ra4;n0t5;!in0;lGndEsa;a,sE;ay,ey,i,y;a,i0Fli0F;aHiGla,nFoEslCt1M;la,na;a,o7;gh,la;!h,n07;don2Hna,ra,tHurFvern0xE;mi;a,eE;l,n;as8is8oE;nEya;ya;aMeJhadija,iGrE;istEy2G;a,en,in0M;mErst6;!beE;rlC;is8lFnd7rE;i,ri;ey,i,lCy;nyakumari,rItFvi5yE;!la;aFe,hEi3Cri3y;ar4er4le6r12;ri3;a,en,iEla;!ma,n;aTeNilKoGuE;anEdi1Fl1st4;a,i5;!anGcel0VdFhan1Rl3Eni,seEva3y37;fi3ph4;i32y;!a,e,n02;!iFlE;!iE;an;anHle3nFri,sE;iAsiA;a,if3LnE;a,if3K;a,e3Cin0nE;a,e3Bin0;cHde,nEsm4vie7;a,eFiE;ce,n0s;!l2At2G;l0EquelE;in0yn;da,mog2Vngrid,rHsEva;abelFiE;do7;!a,e,l0;en0ma;aIeGilE;aEda,laE;ry;ath33i26lenEnriet5;!a,e;nFrE;i21ri21;aBnaB;aMeKiJlHrFwenE;!dolY;acEetch6;e,ie9;adys,enEor1;a,da,na;na,seH;nevieve,orgi0OrE;ald4trude;brielFil,le,yE;le;a,e,le;aKeIlorHrE;ancEe2ie2;es,iE;n0sA;a,en1V;lErn;ic1;tiPy1P;dWile6k5lPmOrMstJtHuGvE;a,elE;yn;gen1la,ni1O;hEta;el;eEh28;lEr;a,e,l0;iEma,nest4;ca,ka,n;ma;a4eIiFl6ma,oiVsa,vE;a,i7;sEzaF;aEe;!beH;anor,nE;!a;iEna;th;aReKiJoE;lHminiqGnPrE;a,e6is,othE;ea,y;ue;ly,or24;anWna;anJbIe,lGnEsir1Z;a,iE;se;a,ia,la,orE;es,is;oraBra;a,na;m1nFphn0rlE;a,en0;a,iE;el08;aYeVhSlOoHrEynth1;isFyE;stal;ti3;lJnsHrEur07;a,inFnE;el1;a,e,n0;tanEuelo;ce,za;e6le6;aEeo;ire,rFudE;etDia;a,i0A;arl0GeFloe,ristE;a,in0;ls0Qryl;cFlE;esDi1D;el1il0Y;itlin,milMndLrIsHtE;ali3hE;er4le6y;in0;a0Usa0U;a,la,meFolE;!e,in0yn;la,n;aViV;e,le;arbVeMiKlKoni5rE;anIen2iEooke;dgFtE;tnC;etE;!te;di;anA;ca;atriLcky,lin2rItFulaBverE;ly;h,tE;e,yE;!e;nEt8;adOiE;ce;ce,z;a7ra;biga0Kd0Egn0Di08lZmVnIrGshlCudrEva;a,ey,i,y;ey,i,y;lEpi5;en0;!a,dNeLgelJiIja,nGtoE;inEn1;etD;!a,eIiE;ka;ka,ta;a,iE;a,ca,n0;!tD;te;je9rE;ea;la;an2bFel1i3y;ia;er;da;ber5exaJiGma,ta,yE;a,sE;a,sa;cFsE;a,ha,on;e,ia;nd7;ra;ta;c8da,le6mFshaB;!h;ee;en;ha;es;a,elGriE;a3en0;na;e,iE;a,n0;a,e;il\";\n\t\n\t},{}],222:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"aJblair,cHdevGguadalupe,jBk9l8m5r2sh0trinity;ay,e0iloh;a,lby;e1o0;bin,sario;ag1g1ne;ar1el,org0;an;ion,lo;ashawn,ee;asAe0;ls9nyatta,rry;a1e0;an,ss2;de,ime,m0n;ie,m0;ie;an,on;as0heyenne;ey,sidy;lexis,ndra,ubr0;ey\";\n\t\n\t},{}],223:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:1P;1:1Q;161Ta1Fb1Bc12d0Ye0Of0Kg0Hh0Di09june07kwanzaa,l04m00nYoVpRrPsEt8v6w4xm03y2;om 2ule;hasho16kippur;hit2int0Xomens equalit7; 0Ss0T;aGe2ictor1E;r1Bteran0;-1ax 1h6isha bav,rinityNu2; b3rke2;y 1;ish2she2;vat;a0Ye prophets birth1;a6eptember15h4imchat tor0Vt 3u2;kk4mmer U;a9p8s7valentines day ;avu2mini atzeret;ot;int 2mhain;a5p4s3va2;lentine0;tephen0;atrick0;ndrew0;amadan,ememberanc0Yos2;a park0h hashana;a3entecost,reside0Zur2;im,ple heart 1;lm2ssovE; s04;rthodox 2stara;christma0easter2goOhoJn0C;! m07;ational 2ew years09;freedom 1nurse0;a2emorial 1lHoOuharram;bMr2undy thurs1;ch0Hdi gr2tin luther k0B;as;a2itRughnassadh;bour 1g baom2ilat al-qadr;er; 2teenth;soliU;d aJmbolc,n2sra and miraj;augurGd2;ependen2igenous people0;c0Bt0;a3o2;ly satur1;lloween,nukkUrvey mil2;k 1;o3r2;ito de dolores,oundhoW;odW;a4east of 2;our lady of guadalupe,the immaculate concepti2;on;ther0;aster8id 3lectYmancip2piphany;atX;al-3u2;l-f3;ad3f2;itr;ha;! 2;m8s2;un1;ay of the dead,ecemb3i2;a de muertos,eciseisVwali;er sol2;stice;anad8h4inco de mayo,o3yber m2;on1;lumbu0mmonwealth 1rpus christi;anuk4inese n3ristmas2;! N;ew year;ah;a 1ian tha2;nksgiving;astillCeltaine,lack4ox2;in2;g 1; fri1;dvent,ll 9pril fools,rmistic8s6u2;stral4tum2;nal2; equinox;ia 1;cens2h wednes1sumption of mary;ion 1;e 1;hallows 6s2;ai2oul0t0;nt0;s 1;day;eve; de septiembre\";\n\t\n\t},{}],224:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:2S;1:38;2:36;3:2B;4:2W;5:2Y;a38b2Zc2Ld2Be28f23g1Yh1Ni1Ij1Ck15l0Xm0Ln0Ho0Ep04rXsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Roshi1Iun;ma6ng;da,guc1Xmo24sh1ZzaQ;iao,u;a7eb0il6o4right,u;li39s2;gn0lk0ng,tanabe;a6ivaldi;ssilj35zqu1;a9h8i2Do7r6sui,urn0;an,ynisI;lst0Nrr2Sth;at1Romps2;kah0Tnaka,ylor;aDchCeBhimizu,iAmi9o8t7u6zabo;ar1lliv27zuD;al21ein0;sa,u4;rn3th;lva,mmo22ngh;mjon3rrano;midt,neid0ulz;ito,n7sa6to;ki;ch1dKtos,z;amBeag1Xi9o7u6;bio,iz,s2L;b6dri1KgHj0Sme22osevelt,sZux;erts,ins2;c6ve0E;ci,hards2;ir1os;aDe9h7ic6ow1Z;as2Ehl0;a6illips;m,n1S;ders5et8r7t6;e0Or3;ez,ry;ers;h20rk0t6vl3;el,te0K;baBg0Blivei01r6;t6w1O;ega,iz;a6eils2guy5ix2owak,ym1D;gy,ka6var1J;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Cssolini,ñ6;oz;lina,oKr6zart;al1Me6r0T;au,no;hhail3ll0;rci0s6y0;si;eWmmad3r6tsu08;in6tin1;!o;aCe8i6op1uo;!n6u;coln,dholm;e,fe7n0Pr6w0I;oy;bv6v6;re;rs5u;aBennedy,imuAle0Ko8u7wo6;k,n;mar,znets3;bay6vacs;asY;ra;hn,rl9to,ur,zl3;aAen9ha4imen1o6u4;h6n0Yu4;an6ns2;ss2;ki0Ds5;cks2nsse0C;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aCe9it8o7u6;!a4b0gh0Nynh;a4ffmann,rvat;chcock,l0;mingw7nde6rL;rs2;ay;ns5rrOs7y6;asCes;an3hi6;moH;a8il,o7rub0u6;o,tierr1;m1nzal1;nd6o,rcia;hi;er9is8lor08o7uj6;ita;st0urni0;ch0;nand1;d7insteHsposi6vaL;to;is2wards;aCeBi9omin8u6;bo6rand;is;gu1;az,mitr3;ov;lgado,vi;rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0x;em7li6;ns;an;!e;an8e7iu,o6ristens5u4we;i,ng,u4w,y;!n,on6u4;!g;mpb8rt0st6;ro;er;ell;aBe8ha4lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h7iley,rn6;es;k,ng;dEl9nd6;ers6rB;en,on,s2;on;eks8iy9on7var1;ez;so;ej6;ev;ams\";\n\t\n\t},{}],225:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:A9;1:9J;2:A0;3:9R;4:94;5:7W;6:9C;7:9X;a94b8Ic7Pd6Ve67f5Sg5Dh4Ui4Kj3Ok3Gl30m22n1To1Op1Fqu1Er0Us0BtVusm0vSwIxavi3yAz8;a8or0;cha4Zh1B;ass2i,oAu8;sBu8;ma,to;nBsAus8;o8s9;uf;ef;at0g;aFeEi9o8;lfga02odrow;l8n13;bAfr9Gl8s1;a8Ei8;am2Ne,s;e6Vur;i,nde7Xsl8A;de,l8rr7y6;la5t3;an5ern1i8;c8ha0nce2Trg7Qva0;ente,t4F;aMeHhGimFoBr9y8;!l3ro6s1;av6Le8oy;nt,v4B;bAdd,m8ny;!as,m8oharu;a91ie,y;i6Ty;!my,othy;eodo0Kia67om6R;dBr8;en5r8;an5e8y;ll,n5;!dy;ic82req,ts3Jyl3Z;aKcottJeIhFiEoCpenc3t8ur1Cylve74zym1;anAe8ua67;f0ph8Mrli8ve4Ewa66;ng;!islaw,l7K;lom1u8;leyma6ta;dn7Hm1;a9e8;ld1rm0;hZne,qu0Eun,wn;an,basti0k1Kl3Erg3Dth;!y;lBmAnt8q3Vul;i8os;a5Lno;!m7Hu4;ik,va8;d3GtoV;aNeJicHoBu9y8;an,ou;b7d8f64ssel5U;ol2Cy;an,bCcky,dBel,geAh0land8Cm0n5Aosevelt,ry,s9y8;!ce;coe,s;l2Yr;e40g3n6Xo8Eri59;b7Ge86;ar4Uc4Tha6Wk8;!ey,y;g9ub7x,y8za;ansh,nal4R;g7Bi8;na77s;chAfa4l1Zm9nd8pha4ul,y55;al5Fol1Y;i7Won;id;ent2int1;aFeBhilAier9ol,re8;st1;re;!ip,lip;d7PrAt8;ar,e8;!r;cy,ry;bIt3Ful;liv3m7IrAs9t8um76w7;is,to;ama,c74;i,l3Kv8;il4E;athanFeEiAo8;a8el,l0ma0r2D;h,m;cAi9k8;h5Mola;lo;hol4Wk,ol4W;al,d,il,ls1;!i4;aRePiHoCu8yr1;hamAr9sta8;fa,pha;ad,ray;ed,mC;dibo,e,hamAnt9rr4Bs8ussa;es,he;e,y;ad,ed,m8;ad,ed;cCgu4kAl9n8tche5A;a5Wik;an,os,t1;e,ol8;aj;ah,h8k5I;a4e8;al,l;h8lv2r3M;di,met;ck,hIlHmJnu4rDs1t9uri5x8;!imilian6N;eo,h9i47t8;!eo,hew,ia;e8is;us,w;cAio,k6Il9sha4Ut8v2;i1Yy;in,on;!el,oFus;colm,ik;am8di,moud;ad8;ou;aJeGiFl27oBu8y36;c3Uis,k8th3;a8e;!s;g0nn5FrenAu8we4I;!i8;e,s;!zo;am,on4;evi,i,la3Wo8roy,st3vi,w39;!n8;!a4V;m9n5r0Wu8w8;ren5;ar,o8;nt;aDe9haled,ir8rist3Yu33y2Q;k,ollos;i0Slv2n8rmit,v2;!d9n8t;e0Qy;a41ri3R;na4Yr8them;im,l;aVeOiMoAu8;an,li8ni0Kst2;an,o,us;aqu2eHhnGnDrBs8;e9h8;!ua;!ph;d8ge;an,i;!a8;s,th8;an,on;!ath0n48;!l,s8y;ph;an,e,m8;!m44;ffCr9s8;s0Sus;a49em9mai6o8ry;me,ni0E;i5Gy;!eYr8;ey,y;cDd7kCmBrAs9vi3y8;!d7;on,p3;ed,r1D;al,es;e,ob,ub;k8ob;!s1;an,brahGchika,gEk3lija,nuDrBsAt8v0;ai,s8;uki;aac,ha0ma4;a,vin8;!g;k,nngu3V;nac8or;io;im;aHeCina3QoAu8yd40;be1Og8mber3EsA;h,o;m3ra5s8wa33;se2;aBctAitAn9r8;be1Jm0;ry;or;th;bFlEmza,ns,o,r9s8ya35;an,s0;lBo3ArAu8v2T;hi32ki,t8;a,o;is1y;an,ey;!im;ib;aIeFilbe3WlenEord1rAu8;iller8stavo;mo;aAeg8ov3;!g,or8;io,y;dy,h41nt;!n;ne,o9ra8;ld,rd3O;ffr2Crge;brielAr8;la1Gr8y;eWy;!e;aLeIiGlForr09r8;anAed8;!d2Ee8ri1I;ri1H;c9k8;!ie,l2;esco,is8;!co,zek;oyd;d4l8;ip;li9ng,rn8;anU;pe,x;bi0di;arTdOfra2it0lKmDnCr9steb0th0uge6v8ym7;an,ereE;gi,i9n8v2w2;est30ie;cZk;rique,zo;aDiAm8;aCe8;tt;l9r8;!h0;!io;nu4;beZd1iAli9m3t1v2wo8;od;ot19s;!as,j32;!d1Vg26mBu9w8;a1Bin;ar8;do;o0Du0D;l,n8;est;aPeHieGoArag0u9w8yl0;ay6ight;a6st2;minBnAug9y8;le;!lV;!a1Fn1I;go,ic8;!k;go;an,j0lbeEmetriVnCrBsAv9w8xt3;ay6ey;en,in;moX;ek,ri03;is,n8;is;rt;lHmGnFrAv8;e,i8;!d;iBne06r8w2yl;e8in,yl;l8n;!l;n,us;!e,i4ny;i1Don;e,l8;as;aVeThMlCo9raig,urt8;!is;dy,l2nrad,r8;ey,neli8y;us;aCevelaBi8yE;f9nt8;!on;fo03t1;nd;rAu9y8;!t1;de;en5k;ce;aCeBris9u8;ck;!t8;i0oph3;st3;d,rl8se;es,ie;c8dric,s0J;il;lBmer1r8;ey,l9ro8t3;ll;!os,t1;eb,v2;arSeMilLlaKobJr9u8yr1;ddy,rt1;aDeAi0u9y8;anAce,on;ce,no;n9t8;!t;d0t;d8nd1;!fo9l8y;ey;rd;!by;i6ke;al,lC;nAr8shoi;at,na8t;rd0B;!i9jam2n8;ie,y;to;ry,t;ar0Mb0Ed0Bgu09hme08id7jani,lRmPnIputsiHr9sa8u09ya0ziz;hi;aEchDi4jun,maBn9on,t8y0;hur,u01;av,o8;ld;an,nd00;el;ie;ta;aq;dCgelVt8;hony,o8;i6n8;!iS;ne;re8y;!a,s,w;ir,m8os;ar;!an,beLeFfCi,lBonAt1v8;aJin;on;so,zo;an,en;on9r8;edG;so;jBksandAssBx8;!and3is;er;ar,er;and8;ro;rt8;!o;en;d,t;st2;in;am9o8ri0vik;lfo;!a;dAel,rah9u8;!bakr,lfazl;am;allBel,oulaye,ul8;l9rahm0;an;ah,o;ah;av,on\";\n\t\n\t},{}],226:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"ad hominPbKcJdGeEfCgBh8kittNlunchDn7othersDp5roomQs3t0us dollarQ;h0ragedM;ereOing0;!sA;tu0uper bowlMystL;dAffL;a0roblJurpo4;rtJt8;othGumbA;ead startHo0;meGu0;seF;laci6odErand slamE;l oz0riendDundB;!es;conom8ggBnerg8v0xamp7;entA;eath9inn1o0;gg5or8;er7;anar3eil4it3ottage6redit card6;ank3o0reakfast5;d1tt0;le3;ies,y;ing1;em0;!s\";\n\t\n\t},{}],227:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:2Q;1:20;2:2I;a2Db24c1Ad11e0Uf0Tg0Qh0Kin0Djourn1l07mWnewsVoTpLquartet,rIs7t5u3worke1K;ni3tilG;on,vA;ele3im2Oribun1v;communica1Jgraph,vi1L;av0Hchool,eBo8t4ubcommitt1Ny3;ndic0Pstems;a3ockV;nda22te 3;poli2univ3;ersi27;ci3ns;al club,et3;e,y;cur3rvice0;iti2C;adio,e3;gionRs3;er19ourc29tauraX;artners9e7harmac6izza,lc,o4r3;ess,oduc13;l3st,wer;i2ytechnic;a0Jeutical0;ople's par1Ttrol3;!eum;!hip;bservLffi2il,ptic1r3;chestra,ganiza22;! servi2;a9e7i5o4use3;e,um;bi10tor0;lita1Bnist3;e08ry;dia,mori1rcantile3; exchange;ch1Ogazi5nage06r3;i4ket3;i0Cs;ne;ab6i5oc3;al 3;aIheaH;beration ar1Fmited;or3s;ato0Y;c,dustri1Gs6ter5vest3;me3o08;nt0;nation1sI;titut3u14;!e3;! of technoloIs;e5o3;ld3sp0Itel0;ings;a3ra6;lth a3;uth0T;a4ir09overnJroup,ui3;ld;s,zet0P;acul0Qede12inanci1m,ounda13und;duca12gli0Blectric8n5s4t3veningH;at;ta0L;er4semb01ter3;prise0tainB;gy;!i0J;a9e4i3rilliG;rectora0FviP;part3sign,velop6;e5ment3;! sto3s;re;ment;ily3ta; news;aSentQhNircus,lLo3rew;!ali0LffJlleHm9n4rp3unc7;o0Js;fe6s3taine9;e4ulti3;ng;il;de0Eren2;m5p3;any,rehensiAute3;rs;i5uni3;ca3ty;tions;s3tt6;si08;cti3ge;ve;ee;ini3ub;c,qK;emica4oir,ronic3urch;le;ls;er,r3;al bank,e;fe,is5p3re,thedr1;it1;al;se;an9o7r4u3;ilding socieEreau;ands,ewe4other3;hood,s;ry;a3ys;rd;k,q3;ue;dministIgencFirDrCss7ut3viaJ;h4ori3;te;ori3;ty;oc5u3;ran2;ce;!iat3;es,iB;my;craft,l3ways;in4;e0i3y;es;!s;ra3;ti3;on\";\n\t\n\t},{}],228:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:43;a38b2Pc29d21e1Yf1Ug1Mh1Hi1Ej1Ak18l14m0Tn0Go0Dp07qu06rZsStFuBv8w3y1;a1m0Youtu2Rw0Y;hoo!,maha;a3e1orld trade organizati3Y;lls fargo,st1;fie22inghou17;l1rner br3A;-m12gree2Zl street journ24m12;an halNeriz3Tisa,o1;dafo2Fl1;kswagLvo;2,bs,n2ps,s1;a tod2Pps;es32i1;lev2Vted natio2S; mobi2Iaco bePd bMeAgi frida9h3im horto2Rmz,o1witt2U;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen30daily ma2Uguess w2holli0rolling st1Ms1w2;mashing pumpki2Muprem0;ho;ea1lack eyed pe3Cyrds;ch bo1tl0;ys;l2s1;co,la m13;efoni08us;a6e4ieme2Eo2pice gir5ta1ubaru;rbucks,to2K;ny,undgard1;en;a2Ox pisto1;ls;few23insbu24msu1V;.e.m.,adiohead,b6e3oyal 1yan2U;b1dutch she4;ank;/max,aders dige1Dd 1vl2Z;bu1c1Shot chili peppe2Hlobst26;ll;c,s;ant2Sizno2C;an5bs,e3fiz22hilip morrBi2r1;emier24octer & gamb1Pudenti13;nk floyd,zza hut;psi25tro1uge09;br2Nchina,n2N; 2ason1Vda2D;ld navy,pec,range juli2xf1;am;us;aAb9e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0K;l,s;stl3tflix,w1; 1sweek;kids on the block,york09;e,é;a,c;nd1Qs2t1;ional aca2Bo,we0O;a,cYd0M;aAcdonald9e5i3lb,o1tv,yspace;b1Jnsanto,ody blu0t1;ley crue,or0M;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt10z1U;'ore07a3e1g,ittle caesa1G;novo,x1;is,mark; pres5-z-boy;atv,fc,kk,m1od1G;art;iffy lu0Io3pmorgan1sa;! cha1;se;hnson & johns1Oy d1N;bm,hop,n1tv;g,te1;l,rpol; & m,asbro,ewlett-packaRi3o1sbc,yundai;me dep1n1F;ot;tac1zbollah;hi;eneral 6hq,l5o2reen d0Fu1;cci,ns n ros0;ldman sachs,o1;dye1g08;ar;axo smith kliXencore;electr0Fm1;oto0R;a3bi,da,edex,i1leetwood mac,oErito-l07;at,nancial1restoT; tim0;cebook,nnie mae;b03sa,u,xxon1; m1m1;ob0D;aiml08e5isney,o3u1;nkin donuts,po0Tran dur1;an;j,w j1;on0;a,f leppa2ll,peche mode,r spiegXstiny's chi1;ld;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1;al;ca c5l4m1o08st03;ca2p1;aq;st;dplLgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Fy;dbury,pital o1rl's jr;ne;aFbc,eBf9l5mw,ni,o1p;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roW;ckbuster video,omingda1;le; g1g1;oodriM;cht3e ge0n & jer2rkshire hathaw1;ay;ryG;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bWcRdidQerosmith,ig,lKmEnheuser-busDol,pple9r6s3t&t,v2y1;er;is,on;hland1sociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c\";\n\t\n\t},{}],229:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:71;1:6P;2:7D;3:73;4:6I;5:7G;6:75;7:6O;8:6B;9:6C;A:5H;B:70;C:6Z;a7Gb62c5Cd59e57f45g3Nh37iron0j33k2Yl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit52;d 1k2Q;mp0n49pe0r8s8;eel Bip 7K;aEiD;gh 06rd0;n Br 3C;it 5Jk8lk6rm 0Qsh 73t66v4O;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Fup;ade YiDot0y 32;ckle67p 79;ne66p Ds4C;d2o6Kup;ck FdEe Dgh5Sme0p o0Dre0;aw3ba4d2in,up;e5Jy 1;by,o6U;ink Drow 5U;ba4ov7up;aDe 4Hll4N;m 1r W;ckCke Elk D;ov7u4N;aDba4d2in,o30up;ba4ft7p4Sw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6O; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1LiD;ke 5Xn2X;p Drm1O;by,in,o6A;r 1tc3H;c2Xmp0nd Dr6Gve6y 1;ba4d2up;d2o66up;ar2Uell0ill4TlErDurC;ingCuc8;a32it 3T;be4Brt0;ap 4Dow B;ash 4Yoke0;eep EiDow 9;c3Mp 1;in,oD;ff,v7;gn Eng2Yt Dz8;d2o5up;in,o5up;aFoDu4E;ot Dut0w 5W;aw3ba4f36o5Q;c2EdeAk4Rve6;e Hll0nd GtD; Dtl42;d2in,o5upD;!on;aw3ba4d2in,o1Xup;o5to;al4Kout0rap4K;il6v8;at0eKiJoGuD;b 4Dle0n Dstl8;aDba4d2in52o3Ft2Zu3D;c1Ww3;ot EuD;g2Jnd6;a1Wf2Qo5;ng 4Np6;aDel6inAnt0;c4Xd D;o2Su0C;aQePiOlMoKrHsyc29uD;ll Ft D;aDba4d2in,o1Gt33up;p38w3;ap37d2in,o5t31up;attleCess EiGoD;p 1;ah1Gon;iDp 52re3Lur44wer 52;nt0;ay3YuD;gAmp 9;ck 52g0leCn 9p3V;el 46ncilA;c3Oir 2Hn0ss FtEy D;ba4o4Q; d2c1X;aw3ba4o11;pDw3J;e3It B;arrow3Serd0oD;d6te3R;aJeHiGoEuD;ddl8ll36;c16p 1uth6ve D;al3Ad2in,o5up;ss0x 1;asur8lt 9ss D;a19up;ke Dn 9r2Zs1Kx0;do,o3Xup;aOeMiHoDuck0;a16c36g 0AoDse0;k Dse34;aft7ba4d2forw2Ain3Vov7uD;nd7p;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fr Dt 1;fDof;rom;in,oO;cZm 1nDve it;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut\";\n\t\n\t},{}],230:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"'o,-,aLbIcHdGexcept,from,inFmidQnotwithstandiRoDpSqua,sCt7u4v2w0;/o,hereNith0;!in,oR;ersus,i0;a,s-a-vis;n1p0;!on;like,til;h1ill,o0;!wards;an,r0;ough0u;!oH;ans,ince,o that;',f0n1ut;!f;!to;espite,own,u3;hez,irca;ar1e0y;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\";\n\t\n\t},{}],231:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"aLbIcHdEengineKfCgBhAinstructRjournalNlawyKm9nurse,o8p5r3s1t0;echnEherapM;ailPcientLecretary,oldiIu0;pervMrgeon;e0oofG;ceptionIsearE;hotographElumbEoli1r0sychologH;actitionDesideMogrammD;cem8t7;fficBpeH;echanic,inistAus5;airdress9ousekeep9;arden8uard;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\";\n\t\n\t},{}],232:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:24;1:1T;2:1U;725a1Rb1Ec10d0Rfc dallas,g0Ohouston 0Nindiana0Mjacksonville jagua0k0Jl0Gm03newWoSpLqueens parkKrJsAt5utah jazz,vancouver whitecaps,w3yZ;ashington 3est ham0Yh17;natio21redski1wizar13;ampa bay 6e5o3;ronto 3ttenham hotspur;blu1Irapto0;nnessee tita1xasE;buccanee0ra1H;a7eattle 5heffield0Rporting kansas14t3;. louis 3oke13;c1Srams;mari03s3;eah1IounJ;cramento Tn 3;antonio spu0diego 4francisco 3jose earthquak2;49e0gi0B;char0EpaB;eal salt lake,o04; ran0C;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat2steele0;il3oenix su1;adelphia 3li2;71Heagl2philNunE;dr2;akland 4klahoma city thunder,r3;i0Zlando magic;athle0Trai3;de0; 3castle05;england 6orleans 5york 3;city fc,giUje0Lkn02me0Lred bul18y3;anke2;pelica1sain0J;patrio0Irevolut3;ion;aBe9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Qvi3;kings;imberwolv2wi1;re0Cuc0V;dolphi1heat,marli1;mphis grizz3ts;li2;nchester 5r3vN;i3li1;ne0;c00u0G;a4eicesterYos angeles 3;clippe0dodFlaA; galaxy,ke0;ansas city 3nH;chiefs,ro3;ya0L; pace0polis colX;astr0Ddynamo,rockeWtexa1;i4olden state warrio0reen bay pac3;ke0;anT;.c.Aallas 7e3i0Bod5;nver 5troit 3;lio1pisto1ti3;ge0;bronc05nuggeO;cowboUmav3;er3;ic05; uW;arCelNh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki2;brow1cavalie0india1;benga02re3;ds;arlotte horCicago 3;b4cubs,fire,wh3;iteE;ea0ulX;di3olina panthe0;ff3naV; c3;ity;altimore DlAoston 7r3uffalo bilS;av2e5ooklyn 3;ne3;ts;we0;cel4red3; sox;tics;ackburn rove0u3;e ja3;ys;ori3rave1;ol2;rizona Ast8tlanta 3;brav2falco1h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls;6e0;rs\";\n\t\n\t},{}],233:[function(_dereq_,module,exports){\n\t\"use strict\";\n\t\n\tmodule.exports = \"0:1I;a1Nb1Hc18e11f0Ug0Qh0Ki0Hj0Gk0El09m00nZoYpSrPsCt8vi7w1;a5ea0Ci4o1;o2rld1;! seJ;d,l;ldlife,ne;rmth,t0;neg7ol0C;e3hund0ime,oothpaste,r1una;affTou1;ble,sers,t;a,nnis;aBceWeAh9il8now,o7p4te3u1;g1nshi0Q;ar;am,el;ace2e1;ciPed;!c16;ap,cc0ft0E;k,v0;eep,opp0T;riK;d0Afe0Jl1nd;m0Vt;aQe1i10;c1laxa0Hsearch;ogni0Grea0G;a5e3hys0JlastAo2r1;ess02ogre05;rk,w0;a1pp0trol;ce,nT;p0tiM;il,xygen;ews,oi0G;a7ea5i4o3u1;mps,s1;ic;nJo0C;lk,st;sl1t;es;chi1il,themat04;neF;aught0e3i2u1;ck,g0B;ghtn03quid,teratK;a1isJ;th0;elv1nowled08;in;ewel7usti09;ce,mp1nformaQtself;ati1ortan07;en06;a4ertz,isto3o1;ck1mework,n1spitaliL;ey;ry;ir,lib1ppi9;ut;o2r1um,ymnastL;a7ound;l1ssip;d,f;ahrenhe6i5lour,o2ru6urnit1;ure;od,rgive1wl;ne1;ss;c8sh;it;conomAduca6lectrici5n3quip4thAvery1;body,o1thC;ne;joy1tertain1;ment;ty;tiC;a8elcius,h4iv3loth6o1urrency;al,ffee,n1ttA;duct,fusi9;ics;aos,e1;e2w1;ing;se;ke,sh;a3eef,is2lood,read,utt0;er;on;g1ss;ga1;ge;dvi2irc1rt;raft;ce\";\n\t\n\t},{}],234:[function(_dereq_,module,exports){\n\t(function (global){\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/* efrt trie-compression v0.0.3  github.com/nlp-compromise/efrt  - MIT */\n\t(function (f) {\n\t  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n\t    module.exports = f();\n\t  } else if (typeof define === \"function\" && define.amd) {\n\t    define([], f);\n\t  } else {\n\t    var g;if (typeof window !== \"undefined\") {\n\t      g = window;\n\t    } else if (typeof global !== \"undefined\") {\n\t      g = global;\n\t    } else if (typeof self !== \"undefined\") {\n\t      g = self;\n\t    } else {\n\t      g = this;\n\t    }g.unpack = f();\n\t  }\n\t})(function () {\n\t  var define, module, exports;return function e(t, n, r) {\n\t    function s(o, u) {\n\t      if (!n[o]) {\n\t        if (!t[o]) {\n\t          var a = typeof _dereq_ == \"function\" && _dereq_;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n\t        }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n\t          var n = t[o][1][e];return s(n ? n : e);\n\t        }, l, l.exports, e, t, n, r);\n\t      }return n[o].exports;\n\t    }var i = typeof _dereq_ == \"function\" && _dereq_;for (var o = 0; o < r.length; o++) {\n\t      s(r[o]);\n\t    }return s;\n\t  }({ 1: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      module.exports = {\n\t        NODE_SEP: ';',\n\t        STRING_SEP: ',',\n\t        TERMINAL_PREFIX: '!',\n\t        //characters banned from entering the trie\n\t        NOT_ALLOWED: new RegExp('[0-9A-Z,;!]'),\n\t        BASE: 36\n\t      };\n\t    }, {}], 2: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      var config = _dereq_('./config');\n\t\n\t      var seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t      var cache = seq.split('').reduce(function (h, c, i) {\n\t        h[c] = i;\n\t        return h;\n\t      }, {});\n\t      // console.log(cache);\n\t\n\t      // 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\n\t      var toAlphaCode = function toAlphaCode(n) {\n\t        if (seq[n] !== undefined) {\n\t          return seq[n];\n\t        }\n\t        var places = 1;\n\t        var range = config.BASE;\n\t        var s = '';\n\t\n\t        for (; n >= range; n -= range, places++, range *= config.BASE) {}\n\t        while (places--) {\n\t          var d = n % config.BASE;\n\t          s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n\t          n = (n - d) / config.BASE;\n\t        }\n\t        return s;\n\t      };\n\t\n\t      var fromAlphaCode = function fromAlphaCode(s) {\n\t        if (cache[s] !== undefined) {\n\t          return cache[s];\n\t        }\n\t        var n = 0;\n\t        var places = 1;\n\t        var range = config.BASE;\n\t        var pow = 1;\n\t\n\t        for (; places < s.length; n += range, places++, range *= config.BASE) {}\n\t        for (var i = s.length - 1; i >= 0; i--, pow *= config.BASE) {\n\t          var d = s.charCodeAt(i) - 48;\n\t          if (d > 10) {\n\t            d -= 7;\n\t          }\n\t          n += d * pow;\n\t        }\n\t        return n;\n\t      };\n\t\n\t      /* Sort elements and remove duplicates from array (modified in place) */\n\t      var unique = function unique(a) {\n\t        a.sort();\n\t        for (var i = 1; i < a.length; i++) {\n\t          if (a[i - 1] === a[i]) {\n\t            a.splice(i, 1);\n\t          }\n\t        }\n\t      };\n\t\n\t      var commonPrefix = function commonPrefix(w1, w2) {\n\t        var len = Math.min(w1.length, w2.length);\n\t        while (len > 0) {\n\t          var prefix = w1.slice(0, len);\n\t          if (prefix === w2.slice(0, len)) {\n\t            return prefix;\n\t          }\n\t          len -= 1;\n\t        }\n\t        return '';\n\t      };\n\t\n\t      module.exports = {\n\t        toAlphaCode: toAlphaCode,\n\t        fromAlphaCode: fromAlphaCode,\n\t        unique: unique,\n\t        commonPrefix: commonPrefix\n\t      };\n\t\n\t      // let out = fromAlphaCode('A');\n\t      // console.log(out);\n\t      // console.log(fromAlphaCode(out));\n\t      // console.log(fromAlphaCode('R'));\n\t    }, { \"./config\": 1 }], 3: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      var Ptrie = _dereq_('./ptrie');\n\t      // const Ptrie = require('./ptrie_old');\n\t\n\t      var unpack = function unpack(str) {\n\t        return new Ptrie(str);\n\t      };\n\t      module.exports = unpack;\n\t    }, { \"./ptrie\": 5 }], 4: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      //are we on the right path with this string?\n\t\n\t      var isPrefix = function isPrefix(str, want) {\n\t        //allow perfect equals\n\t        if (str === want) {\n\t          return true;\n\t        }\n\t        //compare lengths\n\t        var len = str.length;\n\t        if (len >= want.length) {\n\t          return false;\n\t        }\n\t        //quick slice\n\t        if (len === 1) {\n\t          return str === want[0];\n\t        }\n\t        return want.slice(0, len) === str;\n\t      };\n\t      module.exports = isPrefix;\n\t      // console.log(isPrefix('harvar', 'harvard'));\n\t    }, {}], 5: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      var _createClass = function () {\n\t        function defineProperties(target, props) {\n\t          for (var i = 0; i < props.length; i++) {\n\t            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t          }\n\t        }return function (Constructor, protoProps, staticProps) {\n\t          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t        };\n\t      }();\n\t\n\t      function _classCallCheck(instance, Constructor) {\n\t        if (!(instance instanceof Constructor)) {\n\t          throw new TypeError(\"Cannot call a class as a function\");\n\t        }\n\t      }\n\t\n\t      var config = _dereq_('../config');\n\t      var fns = _dereq_('../fns');\n\t      var isPrefix = _dereq_('./prefix');\n\t      var unravel = _dereq_('./unravel');\n\t\n\t      //PackedTrie - Trie traversal of the Trie packed-string representation.\n\t\n\t      var PackedTrie = function () {\n\t        function PackedTrie(str) {\n\t          _classCallCheck(this, PackedTrie);\n\t\n\t          this.nodes = str.split(config.NODE_SEP); //that's all ;)!\n\t          this.syms = [];\n\t          this.symCount = 0;\n\t          this._cache = null;\n\t          //process symbols, if they have them\n\t          if (str.match(':')) {\n\t            this.initSymbols();\n\t          }\n\t        }\n\t\n\t        //the symbols are at the top of the array.\n\t\n\t\n\t        _createClass(PackedTrie, [{\n\t          key: 'initSymbols',\n\t          value: function initSymbols() {\n\t            //... process these lines\n\t            var reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)');\n\t            for (var i = 0; i < this.nodes.length; i++) {\n\t              var m = reSymbol.exec(this.nodes[i]);\n\t              if (!m) {\n\t                this.symCount = i;\n\t                break;\n\t              }\n\t              this.syms[fns.fromAlphaCode(m[1])] = fns.fromAlphaCode(m[2]);\n\t            }\n\t            //remove from main node list\n\t            this.nodes = this.nodes.slice(this.symCount, this.nodes.length);\n\t          }\n\t\n\t          // Return largest matching string in the dictionary (or '')\n\t\n\t        }, {\n\t          key: 'has',\n\t          value: function has(want) {\n\t            var _this = this;\n\t\n\t            // console.log(this.nodes);\n\t            //fail-fast\n\t            if (!want) {\n\t              return false;\n\t            }\n\t            //then, try cache-lookup\n\t            if (this._cache) {\n\t              return this._cache[want] || false;\n\t            }\n\t            var crawl = function crawl(index, prefix) {\n\t              var node = _this.nodes[index];\n\t              //the '!' means a prefix-alone is a good match\n\t              if (node[0] === '!') {\n\t                //try to match the prefix (the last branch)\n\t                if (prefix === want) {\n\t                  return true;\n\t                }\n\t                node = node.slice(1); //ok, we tried. remove it.\n\t              }\n\t              //each possible match on this line is something like 'me,me2,me4'.\n\t              //try each one\n\t              var matches = node.split(/([A-Z0-9,]+)/g);\n\t              for (var i = 0; i < matches.length; i += 2) {\n\t                var str = matches[i];\n\t                var ref = matches[i + 1];\n\t                if (!str) {\n\t                  continue;\n\t                }\n\t                var have = prefix + str;\n\t                //we're at the branch's end, so try to match it\n\t                if (ref === ',' || ref === undefined) {\n\t                  if (have === want) {\n\t                    return true;\n\t                  }\n\t                  continue;\n\t                }\n\t                //ok, not a match.\n\t                //well, should we keep going on this branch?\n\t                //if we do, we ignore all the others here.\n\t                if (isPrefix(have, want)) {\n\t                  index = _this.indexFromRef(ref, index);\n\t                  return crawl(index, have);\n\t                }\n\t                //nah, lets try the next branch..\n\t                continue;\n\t              }\n\t\n\t              return false;\n\t            };\n\t            return crawl(0, '');\n\t          }\n\t\n\t          // References are either absolute (symbol) or relative (1 - based)\n\t\n\t        }, {\n\t          key: 'indexFromRef',\n\t          value: function indexFromRef(ref, index) {\n\t            var dnode = fns.fromAlphaCode(ref);\n\t            if (dnode < this.symCount) {\n\t              return this.syms[dnode];\n\t            }\n\t            return index + dnode + 1 - this.symCount;\n\t          }\n\t        }, {\n\t          key: 'toArray',\n\t          value: function toArray() {\n\t            if (this._cache) {\n\t              return Object.keys(this._cache);\n\t            }\n\t            return Object.keys(unravel(this));\n\t          }\n\t        }, {\n\t          key: 'cache',\n\t          value: function cache() {\n\t            this._cache = unravel(this);\n\t            this.nodes = null;\n\t            this.syms = null;\n\t          }\n\t        }]);\n\t\n\t        return PackedTrie;\n\t      }();\n\t\n\t      module.exports = PackedTrie;\n\t    }, { \"../config\": 1, \"../fns\": 2, \"./prefix\": 4, \"./unravel\": 6 }], 6: [function (_dereq_, module, exports) {\n\t      'use strict';\n\t\n\t      //spin-out all words from this trie\n\t\n\t      var unRavel = function unRavel(trie) {\n\t        var all = {};\n\t        var crawl = function crawl(index, prefix) {\n\t          var node = trie.nodes[index];\n\t          if (node[0] === '!') {\n\t            all[prefix] = true;\n\t            node = node.slice(1); //ok, we tried. remove it.\n\t          }\n\t          var matches = node.split(/([A-Z0-9,]+)/g);\n\t          for (var i = 0; i < matches.length; i += 2) {\n\t            var str = matches[i];\n\t            var ref = matches[i + 1];\n\t            if (!str) {\n\t              continue;\n\t            }\n\t\n\t            var have = prefix + str;\n\t            //branch's end\n\t            if (ref === ',' || ref === undefined) {\n\t              all[have] = true;\n\t              continue;\n\t            }\n\t            var newIndex = trie.indexFromRef(ref, index);\n\t            crawl(newIndex, have);\n\t          }\n\t        };\n\t        crawl(0, '');\n\t        return all;\n\t      };\n\t      module.exports = unRavel;\n\t    }, {}] }, {}, [3])(3);\n\t});\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],235:[function(_dereq_,module,exports){\n\t'use strict';\n\t//to change these packed files, edit ./data then run `node scripts/pack.js`\n\t\n\tvar unpack = _dereq_('./efrt-unpack');\n\tvar path = './_packed/_';\n\tvar tags = {\n\t  Adjective: _dereq_('./_packed/_adjectives'),\n\t  Adverb: _dereq_('./_packed/_adverbs'),\n\t  Place: _dereq_('./_packed/_airports'),\n\t  City: _dereq_('./_packed/_cities'),\n\t  Country: _dereq_('./_packed/_countries'),\n\t  Demonym: _dereq_('./_packed/_demonyms'),\n\t  Expression: _dereq_('./_packed/_expressions'),\n\t  FemaleName: _dereq_('./_packed/_female'),\n\t  FirstName: _dereq_('./_packed/_firstnames'),\n\t  Holiday: _dereq_('./_packed/_holidays'),\n\t  LastName: _dereq_('./_packed/_lastnames'),\n\t  MaleName: _dereq_('./_packed/_male'),\n\t  Noun: _dereq_('./_packed/_nouns'),\n\t  Organization: _dereq_('./_packed/_organizations'),\n\t  SportsTeam: _dereq_('./_packed/_sportsTeams'),\n\t  Actor: _dereq_('./_packed/_professions'),\n\t  Preposition: _dereq_('./_packed/_prepositions')\n\t};\n\t\n\tvar utils = {\n\t  orgWords: _dereq_('./_packed/_orgWords'),\n\t  uncountable: _dereq_('./_packed/_uncountables'),\n\t  phrasals: _dereq_('./_packed/_phrasals')\n\t};\n\t\n\t// console.time('trie-unpack');\n\t//turn these compressed strings into queryable tries (using `nlp-compromise/efrt` library)\n\tvar keys = Object.keys(tags);\n\tkeys.forEach(function (tag) {\n\t  tags[tag] = unpack(tags[tag]);\n\t  tags[tag].cache();\n\t});\n\tObject.keys(utils).forEach(function (k) {\n\t  utils[k] = unpack(utils[k]);\n\t  utils[k].cache();\n\t});\n\t// console.timeEnd('trie-unpack');\n\t\n\tvar lookup = function lookup(str) {\n\t  //other ones\n\t  if (utils.uncountable.has(str)) {\n\t    return 'Noun';\n\t  }\n\t  if (utils.orgWords.has(str)) {\n\t    return 'Noun';\n\t  }\n\t  for (var i = 0; i < keys.length; i++) {\n\t    if (tags[keys[i]].has(str)) {\n\t      return keys[i];\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\t//same as regular lookup, but if we know it's two-words\n\tvar lookupMulti = function lookupMulti(str) {\n\t  var single = {\n\t    'Adjective': true,\n\t    'Place': true,\n\t    'Demonyms': true,\n\t    'FemaleName': true,\n\t    'LastName': true,\n\t    'MaleName': true,\n\t    'Professions': true\n\t  };\n\t  if (utils.orgWords.has(str)) {\n\t    return 'Noun';\n\t  }\n\t  for (var i = 0; i < keys.length; i++) {\n\t    if (single[keys[i]]) {\n\t      continue;\n\t    }\n\t    if (tags[keys[i]].has(str)) {\n\t      return keys[i];\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = {\n\t  lookup: lookup,\n\t  utils: utils,\n\t  lookupMulti: lookupMulti\n\t};\n\t// console.time('trie-query');\n\t// console.log(lookup('aloof'));\n\t// console.timeEnd('trie-query');\n\t// console.log(lookup('taipei'));\n\t// console.log(lookup('gerald'));\n\t// console.log(lookup('mexico'));\n\t\n\t},{\"./_packed/_adjectives\":214,\"./_packed/_adverbs\":215,\"./_packed/_airports\":216,\"./_packed/_cities\":217,\"./_packed/_countries\":218,\"./_packed/_demonyms\":219,\"./_packed/_expressions\":220,\"./_packed/_female\":221,\"./_packed/_firstnames\":222,\"./_packed/_holidays\":223,\"./_packed/_lastnames\":224,\"./_packed/_male\":225,\"./_packed/_nouns\":226,\"./_packed/_orgWords\":227,\"./_packed/_organizations\":228,\"./_packed/_phrasals\":229,\"./_packed/_prepositions\":230,\"./_packed/_professions\":231,\"./_packed/_sportsTeams\":232,\"./_packed/_uncountables\":233,\"./efrt-unpack\":234}]},{},[22])(22)\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function() {\n\t  var afinnWordList, analyseSentence, doesWordExist, fs, getScoreOfWord, getWordsInSentence, removeDuplicates, scaleScore;\n\t\n\t  \n\t\n\t  afinnWordList = JSON.parse(\"\\r\\n{\\r\\n  \\\"abandon\\\": -2,\\r\\n  \\\"abandoned\\\": -2,\\r\\n  \\\"abducted\\\": -2,\\r\\n  \\\"abduction\\\": -2,\\r\\n  \\\"abductions\\\": -2,\\r\\n  \\\"abhor\\\": -3,\\r\\n  \\\"abhorred\\\": -3,\\r\\n  \\\"abhorrent\\\": -3,\\r\\n  \\\"abhors\\\": -3,\\r\\n  \\\"abilities\\\": 2,\\r\\n  \\\"ability\\\": 2,\\r\\n  \\\"aboard\\\": 1,\\r\\n  \\\"absentee\\\": -1,\\r\\n  \\\"absentees\\\": -1,\\r\\n  \\\"absolve\\\": 2,\\r\\n  \\\"absolved\\\": 2,\\r\\n  \\\"absolves\\\": 2,\\r\\n  \\\"absolving\\\": 2,\\r\\n  \\\"absorbed\\\": 1,\\r\\n  \\\"abuse\\\": -3,\\r\\n  \\\"abused\\\": -3,\\r\\n  \\\"abuses\\\": -3,\\r\\n  \\\"abusive\\\": -3,\\r\\n  \\\"accept\\\": 1,\\r\\n  \\\"accepted\\\": 1,\\r\\n  \\\"accepting\\\": 1,\\r\\n  \\\"accepts\\\": 1,\\r\\n  \\\"accident\\\": -2,\\r\\n  \\\"accidental\\\": -2,\\r\\n  \\\"accidentally\\\": -2,\\r\\n  \\\"accidents\\\": -2,\\r\\n  \\\"accomplish\\\": 2,\\r\\n  \\\"accomplished\\\": 2,\\r\\n  \\\"accomplishes\\\": 2,\\r\\n  \\\"accusation\\\": -2,\\r\\n  \\\"accusations\\\": -2,\\r\\n  \\\"accuse\\\": -2,\\r\\n  \\\"accused\\\": -2,\\r\\n  \\\"accuses\\\": -2,\\r\\n  \\\"accusing\\\": -2,\\r\\n  \\\"ache\\\": -2,\\r\\n  \\\"achievable\\\": 1,\\r\\n  \\\"aching\\\": -2,\\r\\n  \\\"acquit\\\": 2,\\r\\n  \\\"acquits\\\": 2,\\r\\n  \\\"acquitted\\\": 2,\\r\\n  \\\"acquitting\\\": 2,\\r\\n  \\\"acrimonious\\\": -3,\\r\\n  \\\"active\\\": 1,\\r\\n  \\\"adequate\\\": 1,\\r\\n  \\\"admire\\\": 3,\\r\\n  \\\"admired\\\": 3,\\r\\n  \\\"admires\\\": 3,\\r\\n  \\\"admiring\\\": 3,\\r\\n  \\\"admit\\\": -1,\\r\\n  \\\"admits\\\": -1,\\r\\n  \\\"admitted\\\": -1,\\r\\n  \\\"admonish\\\": -2,\\r\\n  \\\"admonished\\\": -2,\\r\\n  \\\"adopt\\\": 1,\\r\\n  \\\"adopts\\\": 1,\\r\\n  \\\"adorable\\\": 3,\\r\\n  \\\"adore\\\": 3,\\r\\n  \\\"adored\\\": 3,\\r\\n  \\\"adores\\\": 3,\\r\\n  \\\"advanced\\\": 1,\\r\\n  \\\"advantage\\\": 2,\\r\\n  \\\"advantages\\\": 2,\\r\\n  \\\"adventure\\\": 2,\\r\\n  \\\"adventures\\\": 2,\\r\\n  \\\"adventurous\\\": 2,\\r\\n  \\\"affected\\\": -1,\\r\\n  \\\"affection\\\": 3,\\r\\n  \\\"affectionate\\\": 3,\\r\\n  \\\"afflicted\\\": -1,\\r\\n  \\\"affronted\\\": -1,\\r\\n  \\\"afraid\\\": -2,\\r\\n  \\\"aggravate\\\": -2,\\r\\n  \\\"aggravated\\\": -2,\\r\\n  \\\"aggravates\\\": -2,\\r\\n  \\\"aggravating\\\": -2,\\r\\n  \\\"aggression\\\": -2,\\r\\n  \\\"aggressions\\\": -2,\\r\\n  \\\"aggressive\\\": -2,\\r\\n  \\\"aghast\\\": -2,\\r\\n  \\\"agog\\\": 2,\\r\\n  \\\"agonise\\\": -3,\\r\\n  \\\"agonised\\\": -3,\\r\\n  \\\"agonises\\\": -3,\\r\\n  \\\"agonising\\\": -3,\\r\\n  \\\"agonize\\\": -3,\\r\\n  \\\"agonized\\\": -3,\\r\\n  \\\"agonizes\\\": -3,\\r\\n  \\\"agonizing\\\": -3,\\r\\n  \\\"agree\\\": 1,\\r\\n  \\\"agreeable\\\": 2,\\r\\n  \\\"agreed\\\": 1,\\r\\n  \\\"agreement\\\": 1,\\r\\n  \\\"agrees\\\": 1,\\r\\n  \\\"alarm\\\": -2,\\r\\n  \\\"alarmed\\\": -2,\\r\\n  \\\"alarmist\\\": -2,\\r\\n  \\\"alarmists\\\": -2,\\r\\n  \\\"alas\\\": -1,\\r\\n  \\\"alert\\\": -1,\\r\\n  \\\"alienation\\\": -2,\\r\\n  \\\"alive\\\": 1,\\r\\n  \\\"allergic\\\": -2,\\r\\n  \\\"allow\\\": 1,\\r\\n  \\\"alone\\\": -2,\\r\\n  \\\"amaze\\\": 2,\\r\\n  \\\"amazed\\\": 2,\\r\\n  \\\"amazes\\\": 2,\\r\\n  \\\"amazing\\\": 4,\\r\\n  \\\"ambitious\\\": 2,\\r\\n  \\\"ambivalent\\\": -1,\\r\\n  \\\"amuse\\\": 3,\\r\\n  \\\"amused\\\": 3,\\r\\n  \\\"amusement\\\": 3,\\r\\n  \\\"amusements\\\": 3,\\r\\n  \\\"anger\\\": -3,\\r\\n  \\\"angers\\\": -3,\\r\\n  \\\"angry\\\": -3,\\r\\n  \\\"anguish\\\": -3,\\r\\n  \\\"anguished\\\": -3,\\r\\n  \\\"animosity\\\": -2,\\r\\n  \\\"annoy\\\": -2,\\r\\n  \\\"annoyance\\\": -2,\\r\\n  \\\"annoyed\\\": -2,\\r\\n  \\\"annoying\\\": -2,\\r\\n  \\\"annoys\\\": -2,\\r\\n  \\\"antagonistic\\\": -2,\\r\\n  \\\"anti\\\": -1,\\r\\n  \\\"anticipation\\\": 1,\\r\\n  \\\"anxiety\\\": -2,\\r\\n  \\\"anxious\\\": -2,\\r\\n  \\\"apathetic\\\": -3,\\r\\n  \\\"apathy\\\": -3,\\r\\n  \\\"apeshit\\\": -3,\\r\\n  \\\"apocalyptic\\\": -2,\\r\\n  \\\"apologise\\\": -1,\\r\\n  \\\"apologised\\\": -1,\\r\\n  \\\"apologises\\\": -1,\\r\\n  \\\"apologising\\\": -1,\\r\\n  \\\"apologize\\\": -1,\\r\\n  \\\"apologized\\\": -1,\\r\\n  \\\"apologizes\\\": -1,\\r\\n  \\\"apologizing\\\": -1,\\r\\n  \\\"apology\\\": -1,\\r\\n  \\\"appalled\\\": -2,\\r\\n  \\\"appalling\\\": -2,\\r\\n  \\\"appease\\\": 2,\\r\\n  \\\"appeased\\\": 2,\\r\\n  \\\"appeases\\\": 2,\\r\\n  \\\"appeasing\\\": 2,\\r\\n  \\\"applaud\\\": 2,\\r\\n  \\\"applauded\\\": 2,\\r\\n  \\\"applauding\\\": 2,\\r\\n  \\\"applauds\\\": 2,\\r\\n  \\\"applause\\\": 2,\\r\\n  \\\"appreciate\\\": 2,\\r\\n  \\\"appreciated\\\": 2,\\r\\n  \\\"appreciates\\\": 2,\\r\\n  \\\"appreciating\\\": 2,\\r\\n  \\\"appreciation\\\": 2,\\r\\n  \\\"apprehensive\\\": -2,\\r\\n  \\\"approval\\\": 2,\\r\\n  \\\"approved\\\": 2,\\r\\n  \\\"approves\\\": 2,\\r\\n  \\\"ardent\\\": 1,\\r\\n  \\\"arrest\\\": -2,\\r\\n  \\\"arrested\\\": -3,\\r\\n  \\\"arrests\\\": -2,\\r\\n  \\\"arrogant\\\": -2,\\r\\n  \\\"ashame\\\": -2,\\r\\n  \\\"ashamed\\\": -2,\\r\\n  \\\"ass\\\": -4,\\r\\n  \\\"assassination\\\": -3,\\r\\n  \\\"assassinations\\\": -3,\\r\\n  \\\"asset\\\": 2,\\r\\n  \\\"assets\\\": 2,\\r\\n  \\\"assfucking\\\": -4,\\r\\n  \\\"asshole\\\": -4,\\r\\n  \\\"astonished\\\": 2,\\r\\n  \\\"astound\\\": 3,\\r\\n  \\\"astounded\\\": 3,\\r\\n  \\\"astounding\\\": 3,\\r\\n  \\\"astoundingly\\\": 3,\\r\\n  \\\"astounds\\\": 3,\\r\\n  \\\"attack\\\": -1,\\r\\n  \\\"attacked\\\": -1,\\r\\n  \\\"attacking\\\": -1,\\r\\n  \\\"attacks\\\": -1,\\r\\n  \\\"attract\\\": 1,\\r\\n  \\\"attracted\\\": 1,\\r\\n  \\\"attracting\\\": 2,\\r\\n  \\\"attraction\\\": 2,\\r\\n  \\\"attractions\\\": 2,\\r\\n  \\\"attracts\\\": 1,\\r\\n  \\\"audacious\\\": 3,\\r\\n  \\\"authority\\\": 1,\\r\\n  \\\"avert\\\": -1,\\r\\n  \\\"averted\\\": -1,\\r\\n  \\\"averts\\\": -1,\\r\\n  \\\"avid\\\": 2,\\r\\n  \\\"avoid\\\": -1,\\r\\n  \\\"avoided\\\": -1,\\r\\n  \\\"avoids\\\": -1,\\r\\n  \\\"await\\\": -1,\\r\\n  \\\"awaited\\\": -1,\\r\\n  \\\"awaits\\\": -1,\\r\\n  \\\"award\\\": 3,\\r\\n  \\\"awarded\\\": 3,\\r\\n  \\\"awards\\\": 3,\\r\\n  \\\"awesome\\\": 4,\\r\\n  \\\"awful\\\": -3,\\r\\n  \\\"awkward\\\": -2,\\r\\n  \\\"axe\\\": -1,\\r\\n  \\\"axed\\\": -1,\\r\\n  \\\"abandons\\\": -2,\\r\\n  \\\"backing\\\": 2,\\r\\n  \\\"backs\\\": 1,\\r\\n  \\\"badass\\\": -3,\\r\\n  \\\"badly\\\": -3,\\r\\n  \\\"bailout\\\": -2,\\r\\n  \\\"bamboozle\\\": -2,\\r\\n  \\\"bamboozled\\\": -2,\\r\\n  \\\"bamboozles\\\": -2,\\r\\n  \\\"ban\\\": -2,\\r\\n  \\\"banish\\\": -1,\\r\\n  \\\"bankrupt\\\": -3,\\r\\n  \\\"bankster\\\": -3,\\r\\n  \\\"banned\\\": -2,\\r\\n  \\\"bargain\\\": 2,\\r\\n  \\\"barrier\\\": -2,\\r\\n  \\\"bastard\\\": -5,\\r\\n  \\\"bastards\\\": -5,\\r\\n  \\\"battle\\\": -1,\\r\\n  \\\"battles\\\": -1,\\r\\n  \\\"beaten\\\": -2,\\r\\n  \\\"beatific\\\": 3,\\r\\n  \\\"beating\\\": -1,\\r\\n  \\\"beauties\\\": 3,\\r\\n  \\\"beautiful\\\": 3,\\r\\n  \\\"beautifully\\\": 3,\\r\\n  \\\"beautify\\\": 3,\\r\\n  \\\"belittle\\\": -2,\\r\\n  \\\"belittled\\\": -2,\\r\\n  \\\"beloved\\\": 3,\\r\\n  \\\"benefit\\\": 2,\\r\\n  \\\"benefits\\\": 2,\\r\\n  \\\"benefitted\\\": 2,\\r\\n  \\\"benefitting\\\": 2,\\r\\n  \\\"bereave\\\": -2,\\r\\n  \\\"bereaved\\\": -2,\\r\\n  \\\"bereaves\\\": -2,\\r\\n  \\\"bereaving\\\": -2,\\r\\n  \\\"best\\\": 3,\\r\\n  \\\"betray\\\": -3,\\r\\n  \\\"betrayal\\\": -3,\\r\\n  \\\"betrayed\\\": -3,\\r\\n  \\\"betraying\\\": -3,\\r\\n  \\\"betrays\\\": -3,\\r\\n  \\\"better\\\": 2,\\r\\n  \\\"bias\\\": -1,\\r\\n  \\\"biased\\\": -2,\\r\\n  \\\"big\\\": 1,\\r\\n  \\\"bitch\\\": -5,\\r\\n  \\\"bitches\\\": -5,\\r\\n  \\\"bitter\\\": -2,\\r\\n  \\\"bitterly\\\": -2,\\r\\n  \\\"bizarre\\\": -2,\\r\\n  \\\"blah\\\": -2,\\r\\n  \\\"blame\\\": -2,\\r\\n  \\\"blamed\\\": -2,\\r\\n  \\\"blames\\\": -2,\\r\\n  \\\"blaming\\\": -2,\\r\\n  \\\"bless\\\": 2,\\r\\n  \\\"blesses\\\": 2,\\r\\n  \\\"blessing\\\": 3,\\r\\n  \\\"blind\\\": -1,\\r\\n  \\\"bliss\\\": 3,\\r\\n  \\\"blissful\\\": 3,\\r\\n  \\\"blithe\\\": 2,\\r\\n  \\\"block\\\": -1,\\r\\n  \\\"blockbuster\\\": 3,\\r\\n  \\\"blocked\\\": -1,\\r\\n  \\\"blocking\\\": -1,\\r\\n  \\\"blocks\\\": -1,\\r\\n  \\\"bloody\\\": -3,\\r\\n  \\\"blurry\\\": -2,\\r\\n  \\\"boastful\\\": -2,\\r\\n  \\\"bold\\\": 2,\\r\\n  \\\"boldly\\\": 2,\\r\\n  \\\"bomb\\\": -1,\\r\\n  \\\"boost\\\": 1,\\r\\n  \\\"boosted\\\": 1,\\r\\n  \\\"boosting\\\": 1,\\r\\n  \\\"boosts\\\": 1,\\r\\n  \\\"bore\\\": -2,\\r\\n  \\\"bored\\\": -2,\\r\\n  \\\"boring\\\": -3,\\r\\n  \\\"bother\\\": -2,\\r\\n  \\\"bothered\\\": -2,\\r\\n  \\\"bothers\\\": -2,\\r\\n  \\\"bothersome\\\": -2,\\r\\n  \\\"boycott\\\": -2,\\r\\n  \\\"boycotted\\\": -2,\\r\\n  \\\"boycotting\\\": -2,\\r\\n  \\\"boycotts\\\": -2,\\r\\n  \\\"brainwashing\\\": -3,\\r\\n  \\\"brave\\\": 2,\\r\\n  \\\"breakthrough\\\": 3,\\r\\n  \\\"breathtaking\\\": 5,\\r\\n  \\\"bribe\\\": -3,\\r\\n  \\\"bright\\\": 1,\\r\\n  \\\"brightest\\\": 2,\\r\\n  \\\"brightness\\\": 1,\\r\\n  \\\"brilliant\\\": 4,\\r\\n  \\\"brisk\\\": 2,\\r\\n  \\\"broke\\\": -1,\\r\\n  \\\"broken\\\": -1,\\r\\n  \\\"brooding\\\": -2,\\r\\n  \\\"bullied\\\": -2,\\r\\n  \\\"bullshit\\\": -4,\\r\\n  \\\"bully\\\": -2,\\r\\n  \\\"bullying\\\": -2,\\r\\n  \\\"bummer\\\": -2,\\r\\n  \\\"buoyant\\\": 2,\\r\\n  \\\"burden\\\": -2,\\r\\n  \\\"burdened\\\": -2,\\r\\n  \\\"burdening\\\": -2,\\r\\n  \\\"burdens\\\": -2,\\r\\n  \\\"backed\\\": 1,\\r\\n  \\\"bad\\\": -3,\\r\\n  \\\"committed\\\": 1,\\r\\n  \\\"calming\\\": 2,\\r\\n  \\\"can't stand\\\": -3,\\r\\n  \\\"cancel\\\": -1,\\r\\n  \\\"cancelled\\\": -1,\\r\\n  \\\"cancelling\\\": -1,\\r\\n  \\\"cancels\\\": -1,\\r\\n  \\\"cancer\\\": -1,\\r\\n  \\\"capable\\\": 1,\\r\\n  \\\"captivated\\\": 3,\\r\\n  \\\"care\\\": 2,\\r\\n  \\\"carefree\\\": 1,\\r\\n  \\\"careful\\\": 2,\\r\\n  \\\"carefully\\\": 2,\\r\\n  \\\"careless\\\": -2,\\r\\n  \\\"cares\\\": 2,\\r\\n  \\\"cashing in\\\": -2,\\r\\n  \\\"casualty\\\": -2,\\r\\n  \\\"catastrophe\\\": -3,\\r\\n  \\\"catastrophic\\\": -4,\\r\\n  \\\"cautious\\\": -1,\\r\\n  \\\"celebrate\\\": 3,\\r\\n  \\\"celebrated\\\": 3,\\r\\n  \\\"celebrates\\\": 3,\\r\\n  \\\"celebrating\\\": 3,\\r\\n  \\\"censor\\\": -2,\\r\\n  \\\"censored\\\": -2,\\r\\n  \\\"censors\\\": -2,\\r\\n  \\\"certain\\\": 1,\\r\\n  \\\"chagrin\\\": -2,\\r\\n  \\\"chagrined\\\": -2,\\r\\n  \\\"challenge\\\": -1,\\r\\n  \\\"chance\\\": 2,\\r\\n  \\\"chances\\\": 2,\\r\\n  \\\"chaos\\\": -2,\\r\\n  \\\"chaotic\\\": -2,\\r\\n  \\\"charged\\\": -3,\\r\\n  \\\"charges\\\": -2,\\r\\n  \\\"charm\\\": 3,\\r\\n  \\\"charming\\\": 3,\\r\\n  \\\"charmless\\\": -3,\\r\\n  \\\"chastise\\\": -3,\\r\\n  \\\"chastised\\\": -3,\\r\\n  \\\"chastises\\\": -3,\\r\\n  \\\"chastising\\\": -3,\\r\\n  \\\"cheat\\\": -3,\\r\\n  \\\"cheated\\\": -3,\\r\\n  \\\"cheater\\\": -3,\\r\\n  \\\"cheaters\\\": -3,\\r\\n  \\\"cheats\\\": -3,\\r\\n  \\\"calmed\\\": 2,\\r\\n  \\\"cheered\\\": 2,\\r\\n  \\\"cheerful\\\": 2,\\r\\n  \\\"cheering\\\": 2,\\r\\n  \\\"cheerless\\\": -2,\\r\\n  \\\"cheers\\\": 2,\\r\\n  \\\"cheery\\\": 3,\\r\\n  \\\"cherish\\\": 2,\\r\\n  \\\"cherished\\\": 2,\\r\\n  \\\"cherishes\\\": 2,\\r\\n  \\\"cherishing\\\": 2,\\r\\n  \\\"chic\\\": 2,\\r\\n  \\\"childish\\\": -2,\\r\\n  \\\"chilling\\\": -1,\\r\\n  \\\"choke\\\": -2,\\r\\n  \\\"choked\\\": -2,\\r\\n  \\\"chokes\\\": -2,\\r\\n  \\\"choking\\\": -2,\\r\\n  \\\"clarifies\\\": 2,\\r\\n  \\\"clarity\\\": 2,\\r\\n  \\\"clash\\\": -2,\\r\\n  \\\"classy\\\": 3,\\r\\n  \\\"clean\\\": 2,\\r\\n  \\\"cleaner\\\": 2,\\r\\n  \\\"clear\\\": 1,\\r\\n  \\\"cleared\\\": 1,\\r\\n  \\\"clearly\\\": 1,\\r\\n  \\\"clears\\\": 1,\\r\\n  \\\"clever\\\": 2,\\r\\n  \\\"clouded\\\": -1,\\r\\n  \\\"clueless\\\": -2,\\r\\n  \\\"cock\\\": -5,\\r\\n  \\\"cocksucker\\\": -5,\\r\\n  \\\"cocksuckers\\\": -5,\\r\\n  \\\"cocky\\\": -2,\\r\\n  \\\"coerced\\\": -2,\\r\\n  \\\"collapse\\\": -2,\\r\\n  \\\"collapsed\\\": -2,\\r\\n  \\\"collapses\\\": -2,\\r\\n  \\\"collapsing\\\": -2,\\r\\n  \\\"collide\\\": -1,\\r\\n  \\\"collides\\\": -1,\\r\\n  \\\"colliding\\\": -1,\\r\\n  \\\"collision\\\": -2,\\r\\n  \\\"collisions\\\": -2,\\r\\n  \\\"colluding\\\": -3,\\r\\n  \\\"combat\\\": -1,\\r\\n  \\\"combats\\\": -1,\\r\\n  \\\"comedy\\\": 1,\\r\\n  \\\"comfort\\\": 2,\\r\\n  \\\"comfortable\\\": 2,\\r\\n  \\\"comforting\\\": 2,\\r\\n  \\\"comforts\\\": 2,\\r\\n  \\\"commend\\\": 2,\\r\\n  \\\"commended\\\": 2,\\r\\n  \\\"commit\\\": 1,\\r\\n  \\\"commitment\\\": 2,\\r\\n  \\\"commits\\\": 1,\\r\\n  \\\"calms\\\": 2,\\r\\n  \\\"committing\\\": 1,\\r\\n  \\\"compassionate\\\": 2,\\r\\n  \\\"compelled\\\": 1,\\r\\n  \\\"competent\\\": 2,\\r\\n  \\\"competitive\\\": 2,\\r\\n  \\\"complacent\\\": -2,\\r\\n  \\\"complain\\\": -2,\\r\\n  \\\"complained\\\": -2,\\r\\n  \\\"complains\\\": -2,\\r\\n  \\\"comprehensive\\\": 2,\\r\\n  \\\"conciliate\\\": 2,\\r\\n  \\\"conciliated\\\": 2,\\r\\n  \\\"conciliates\\\": 2,\\r\\n  \\\"conciliating\\\": 2,\\r\\n  \\\"condemn\\\": -2,\\r\\n  \\\"condemnation\\\": -2,\\r\\n  \\\"condemned\\\": -2,\\r\\n  \\\"condemns\\\": -2,\\r\\n  \\\"confidence\\\": 2,\\r\\n  \\\"confident\\\": 2,\\r\\n  \\\"conflict\\\": -2,\\r\\n  \\\"conflicting\\\": -2,\\r\\n  \\\"conflictive\\\": -2,\\r\\n  \\\"conflicts\\\": -2,\\r\\n  \\\"confuse\\\": -2,\\r\\n  \\\"confused\\\": -2,\\r\\n  \\\"confusing\\\": -2,\\r\\n  \\\"congrats\\\": 2,\\r\\n  \\\"congratulate\\\": 2,\\r\\n  \\\"congratulation\\\": 2,\\r\\n  \\\"congratulations\\\": 2,\\r\\n  \\\"consent\\\": 2,\\r\\n  \\\"consents\\\": 2,\\r\\n  \\\"consolable\\\": 2,\\r\\n  \\\"conspiracy\\\": -3,\\r\\n  \\\"constrained\\\": -2,\\r\\n  \\\"contagion\\\": -2,\\r\\n  \\\"contagions\\\": -2,\\r\\n  \\\"contagious\\\": -1,\\r\\n  \\\"contempt\\\": -2,\\r\\n  \\\"contemptuous\\\": -2,\\r\\n  \\\"contemptuously\\\": -2,\\r\\n  \\\"contend\\\": -1,\\r\\n  \\\"contender\\\": -1,\\r\\n  \\\"contending\\\": -1,\\r\\n  \\\"contentious\\\": -2,\\r\\n  \\\"contestable\\\": -2,\\r\\n  \\\"controversial\\\": -2,\\r\\n  \\\"controversially\\\": -2,\\r\\n  \\\"convince\\\": 1,\\r\\n  \\\"convinced\\\": 1,\\r\\n  \\\"convinces\\\": 1,\\r\\n  \\\"convivial\\\": 2,\\r\\n  \\\"cool\\\": 1,\\r\\n  \\\"cool stuff\\\": 3,\\r\\n  \\\"cornered\\\": -2,\\r\\n  \\\"corpse\\\": -1,\\r\\n  \\\"costly\\\": -2,\\r\\n  \\\"courage\\\": 2,\\r\\n  \\\"courageous\\\": 2,\\r\\n  \\\"courteous\\\": 2,\\r\\n  \\\"courtesy\\\": 2,\\r\\n  \\\"cover-up\\\": -3,\\r\\n  \\\"coward\\\": -2,\\r\\n  \\\"cowardly\\\": -2,\\r\\n  \\\"coziness\\\": 2,\\r\\n  \\\"cramp\\\": -1,\\r\\n  \\\"crap\\\": -3,\\r\\n  \\\"crash\\\": -2,\\r\\n  \\\"crazier\\\": -2,\\r\\n  \\\"craziest\\\": -2,\\r\\n  \\\"crazy\\\": -2,\\r\\n  \\\"creative\\\": 2,\\r\\n  \\\"crestfallen\\\": -2,\\r\\n  \\\"cried\\\": -2,\\r\\n  \\\"cries\\\": -2,\\r\\n  \\\"crime\\\": -3,\\r\\n  \\\"criminal\\\": -3,\\r\\n  \\\"criminals\\\": -3,\\r\\n  \\\"crisis\\\": -3,\\r\\n  \\\"critic\\\": -2,\\r\\n  \\\"criticism\\\": -2,\\r\\n  \\\"criticize\\\": -2,\\r\\n  \\\"criticized\\\": -2,\\r\\n  \\\"criticizes\\\": -2,\\r\\n  \\\"criticizing\\\": -2,\\r\\n  \\\"critics\\\": -2,\\r\\n  \\\"cruel\\\": -3,\\r\\n  \\\"cruelty\\\": -3,\\r\\n  \\\"crush\\\": -1,\\r\\n  \\\"crushed\\\": -2,\\r\\n  \\\"crushes\\\": -1,\\r\\n  \\\"crushing\\\": -1,\\r\\n  \\\"cry\\\": -1,\\r\\n  \\\"crying\\\": -2,\\r\\n  \\\"cunt\\\": -5,\\r\\n  \\\"curious\\\": 1,\\r\\n  \\\"curse\\\": -1,\\r\\n  \\\"cut\\\": -1,\\r\\n  \\\"cute\\\": 2,\\r\\n  \\\"cuts\\\": -1,\\r\\n  \\\"cutting\\\": -1,\\r\\n  \\\"cynic\\\": -2,\\r\\n  \\\"cynical\\\": -2,\\r\\n  \\\"cynicism\\\": -2,\\r\\n  \\\"calm\\\": 2,\\r\\n  \\\"cheer\\\": 2,\\r\\n  \\\"damages\\\": -3,\\r\\n  \\\"damn\\\": -4,\\r\\n  \\\"damned\\\": -4,\\r\\n  \\\"damnit\\\": -4,\\r\\n  \\\"danger\\\": -2,\\r\\n  \\\"daredevil\\\": 2,\\r\\n  \\\"daring\\\": 2,\\r\\n  \\\"darkest\\\": -2,\\r\\n  \\\"darkness\\\": -1,\\r\\n  \\\"dauntless\\\": 2,\\r\\n  \\\"dead\\\": -3,\\r\\n  \\\"deadlock\\\": -2,\\r\\n  \\\"deafening\\\": -1,\\r\\n  \\\"dear\\\": 2,\\r\\n  \\\"dearly\\\": 3,\\r\\n  \\\"death\\\": -2,\\r\\n  \\\"debonair\\\": 2,\\r\\n  \\\"debt\\\": -2,\\r\\n  \\\"deceit\\\": -3,\\r\\n  \\\"deceitful\\\": -3,\\r\\n  \\\"deceive\\\": -3,\\r\\n  \\\"deceived\\\": -3,\\r\\n  \\\"deceives\\\": -3,\\r\\n  \\\"deceiving\\\": -3,\\r\\n  \\\"deception\\\": -3,\\r\\n  \\\"decisive\\\": 1,\\r\\n  \\\"dedicated\\\": 2,\\r\\n  \\\"defeated\\\": -2,\\r\\n  \\\"defect\\\": -3,\\r\\n  \\\"defects\\\": -3,\\r\\n  \\\"defender\\\": 2,\\r\\n  \\\"defenders\\\": 2,\\r\\n  \\\"defenseless\\\": -2,\\r\\n  \\\"defer\\\": -1,\\r\\n  \\\"deferring\\\": -1,\\r\\n  \\\"defiant\\\": -1,\\r\\n  \\\"deficit\\\": -2,\\r\\n  \\\"degrade\\\": -2,\\r\\n  \\\"degraded\\\": -2,\\r\\n  \\\"degrades\\\": -2,\\r\\n  \\\"dehumanize\\\": -2,\\r\\n  \\\"dehumanized\\\": -2,\\r\\n  \\\"dehumanizes\\\": -2,\\r\\n  \\\"dehumanizing\\\": -2,\\r\\n  \\\"deject\\\": -2,\\r\\n  \\\"dejected\\\": -2,\\r\\n  \\\"dejecting\\\": -2,\\r\\n  \\\"dejects\\\": -2,\\r\\n  \\\"delay\\\": -1,\\r\\n  \\\"delayed\\\": -1,\\r\\n  \\\"delight\\\": 3,\\r\\n  \\\"delighted\\\": 3,\\r\\n  \\\"delighting\\\": 3,\\r\\n  \\\"delights\\\": 3,\\r\\n  \\\"demand\\\": -1,\\r\\n  \\\"demanded\\\": -1,\\r\\n  \\\"demanding\\\": -1,\\r\\n  \\\"demands\\\": -1,\\r\\n  \\\"demonstration\\\": -1,\\r\\n  \\\"demoralized\\\": -2,\\r\\n  \\\"denied\\\": -2,\\r\\n  \\\"denier\\\": -2,\\r\\n  \\\"deniers\\\": -2,\\r\\n  \\\"denies\\\": -2,\\r\\n  \\\"denounce\\\": -2,\\r\\n  \\\"denounces\\\": -2,\\r\\n  \\\"deny\\\": -2,\\r\\n  \\\"denying\\\": -2,\\r\\n  \\\"depressed\\\": -2,\\r\\n  \\\"depressing\\\": -2,\\r\\n  \\\"derail\\\": -2,\\r\\n  \\\"derailed\\\": -2,\\r\\n  \\\"derails\\\": -2,\\r\\n  \\\"deride\\\": -2,\\r\\n  \\\"derided\\\": -2,\\r\\n  \\\"derides\\\": -2,\\r\\n  \\\"deriding\\\": -2,\\r\\n  \\\"derision\\\": -2,\\r\\n  \\\"desirable\\\": 2,\\r\\n  \\\"desire\\\": 1,\\r\\n  \\\"desired\\\": 2,\\r\\n  \\\"desirous\\\": 2,\\r\\n  \\\"damage\\\": -3,\\r\\n  \\\"despairing\\\": -3,\\r\\n  \\\"despairs\\\": -3,\\r\\n  \\\"desperate\\\": -3,\\r\\n  \\\"desperately\\\": -3,\\r\\n  \\\"despondent\\\": -3,\\r\\n  \\\"destroy\\\": -3,\\r\\n  \\\"destroyed\\\": -3,\\r\\n  \\\"destroying\\\": -3,\\r\\n  \\\"destroys\\\": -3,\\r\\n  \\\"destruction\\\": -3,\\r\\n  \\\"destructive\\\": -3,\\r\\n  \\\"detached\\\": -1,\\r\\n  \\\"detain\\\": -2,\\r\\n  \\\"detained\\\": -2,\\r\\n  \\\"detention\\\": -2,\\r\\n  \\\"determined\\\": 2,\\r\\n  \\\"devastate\\\": -2,\\r\\n  \\\"devastated\\\": -2,\\r\\n  \\\"devastating\\\": -2,\\r\\n  \\\"devoted\\\": 3,\\r\\n  \\\"diamond\\\": 1,\\r\\n  \\\"dick\\\": -4,\\r\\n  \\\"dickhead\\\": -4,\\r\\n  \\\"die\\\": -3,\\r\\n  \\\"died\\\": -3,\\r\\n  \\\"difficult\\\": -1,\\r\\n  \\\"diffident\\\": -2,\\r\\n  \\\"dilemma\\\": -1,\\r\\n  \\\"dipshit\\\": -3,\\r\\n  \\\"dire\\\": -3,\\r\\n  \\\"direful\\\": -3,\\r\\n  \\\"dirt\\\": -2,\\r\\n  \\\"dirtier\\\": -2,\\r\\n  \\\"dirtiest\\\": -2,\\r\\n  \\\"dirty\\\": -2,\\r\\n  \\\"disabling\\\": -1,\\r\\n  \\\"disadvantage\\\": -2,\\r\\n  \\\"disadvantaged\\\": -2,\\r\\n  \\\"disappear\\\": -1,\\r\\n  \\\"disappeared\\\": -1,\\r\\n  \\\"disappears\\\": -1,\\r\\n  \\\"disappoint\\\": -2,\\r\\n  \\\"disappointed\\\": -2,\\r\\n  \\\"disappointing\\\": -2,\\r\\n  \\\"disappointment\\\": -2,\\r\\n  \\\"disappointments\\\": -2,\\r\\n  \\\"disappoints\\\": -2,\\r\\n  \\\"disaster\\\": -2,\\r\\n  \\\"disasters\\\": -2,\\r\\n  \\\"disastrous\\\": -3,\\r\\n  \\\"disbelieve\\\": -2,\\r\\n  \\\"discard\\\": -1,\\r\\n  \\\"discarded\\\": -1,\\r\\n  \\\"discarding\\\": -1,\\r\\n  \\\"discards\\\": -1,\\r\\n  \\\"disconsolate\\\": -2,\\r\\n  \\\"disconsolation\\\": -2,\\r\\n  \\\"discontented\\\": -2,\\r\\n  \\\"discord\\\": -2,\\r\\n  \\\"discounted\\\": -1,\\r\\n  \\\"discouraged\\\": -2,\\r\\n  \\\"discredited\\\": -2,\\r\\n  \\\"disdain\\\": -2,\\r\\n  \\\"disgrace\\\": -2,\\r\\n  \\\"disgraced\\\": -2,\\r\\n  \\\"disguise\\\": -1,\\r\\n  \\\"disguised\\\": -1,\\r\\n  \\\"disguises\\\": -1,\\r\\n  \\\"disguising\\\": -1,\\r\\n  \\\"disgust\\\": -3,\\r\\n  \\\"disgusted\\\": -3,\\r\\n  \\\"disgusting\\\": -3,\\r\\n  \\\"disheartened\\\": -2,\\r\\n  \\\"dishonest\\\": -2,\\r\\n  \\\"disillusioned\\\": -2,\\r\\n  \\\"disinclined\\\": -2,\\r\\n  \\\"disjointed\\\": -2,\\r\\n  \\\"dislike\\\": -2,\\r\\n  \\\"dismal\\\": -2,\\r\\n  \\\"dismayed\\\": -2,\\r\\n  \\\"disorder\\\": -2,\\r\\n  \\\"disorganized\\\": -2,\\r\\n  \\\"disoriented\\\": -2,\\r\\n  \\\"disparage\\\": -2,\\r\\n  \\\"disparaged\\\": -2,\\r\\n  \\\"disparages\\\": -2,\\r\\n  \\\"disparaging\\\": -2,\\r\\n  \\\"displeased\\\": -2,\\r\\n  \\\"dispute\\\": -2,\\r\\n  \\\"disputed\\\": -2,\\r\\n  \\\"disputes\\\": -2,\\r\\n  \\\"disputing\\\": -2,\\r\\n  \\\"disqualified\\\": -2,\\r\\n  \\\"disquiet\\\": -2,\\r\\n  \\\"disregard\\\": -2,\\r\\n  \\\"disregarded\\\": -2,\\r\\n  \\\"disregarding\\\": -2,\\r\\n  \\\"disregards\\\": -2,\\r\\n  \\\"disrespect\\\": -2,\\r\\n  \\\"disrespected\\\": -2,\\r\\n  \\\"disruption\\\": -2,\\r\\n  \\\"disruptions\\\": -2,\\r\\n  \\\"disruptive\\\": -2,\\r\\n  \\\"dissatisfied\\\": -2,\\r\\n  \\\"distort\\\": -2,\\r\\n  \\\"distorted\\\": -2,\\r\\n  \\\"distorting\\\": -2,\\r\\n  \\\"distorts\\\": -2,\\r\\n  \\\"distract\\\": -2,\\r\\n  \\\"distracted\\\": -2,\\r\\n  \\\"distraction\\\": -2,\\r\\n  \\\"distracts\\\": -2,\\r\\n  \\\"distress\\\": -2,\\r\\n  \\\"distressed\\\": -2,\\r\\n  \\\"distresses\\\": -2,\\r\\n  \\\"distressing\\\": -2,\\r\\n  \\\"distrust\\\": -3,\\r\\n  \\\"distrustful\\\": -3,\\r\\n  \\\"disturb\\\": -2,\\r\\n  \\\"disturbed\\\": -2,\\r\\n  \\\"disturbing\\\": -2,\\r\\n  \\\"disturbs\\\": -2,\\r\\n  \\\"dithering\\\": -2,\\r\\n  \\\"dizzy\\\": -1,\\r\\n  \\\"dodging\\\": -2,\\r\\n  \\\"dodgy\\\": -2,\\r\\n  \\\"does not work\\\": -3,\\r\\n  \\\"dolorous\\\": -2,\\r\\n  \\\"dont like\\\": -2,\\r\\n  \\\"doom\\\": -2,\\r\\n  \\\"doomed\\\": -2,\\r\\n  \\\"doubt\\\": -1,\\r\\n  \\\"doubted\\\": -1,\\r\\n  \\\"doubtful\\\": -1,\\r\\n  \\\"doubting\\\": -1,\\r\\n  \\\"doubts\\\": -1,\\r\\n  \\\"douche\\\": -3,\\r\\n  \\\"douchebag\\\": -3,\\r\\n  \\\"downcast\\\": -2,\\r\\n  \\\"downhearted\\\": -2,\\r\\n  \\\"downside\\\": -2,\\r\\n  \\\"drag\\\": -1,\\r\\n  \\\"dragged\\\": -1,\\r\\n  \\\"drags\\\": -1,\\r\\n  \\\"drained\\\": -2,\\r\\n  \\\"dread\\\": -2,\\r\\n  \\\"dreaded\\\": -2,\\r\\n  \\\"dreadful\\\": -3,\\r\\n  \\\"dreading\\\": -2,\\r\\n  \\\"dream\\\": 1,\\r\\n  \\\"dreams\\\": 1,\\r\\n  \\\"dreary\\\": -2,\\r\\n  \\\"droopy\\\": -2,\\r\\n  \\\"drop\\\": -1,\\r\\n  \\\"drown\\\": -2,\\r\\n  \\\"drowned\\\": -2,\\r\\n  \\\"drowns\\\": -2,\\r\\n  \\\"drunk\\\": -2,\\r\\n  \\\"dubious\\\": -2,\\r\\n  \\\"dud\\\": -2,\\r\\n  \\\"dull\\\": -2,\\r\\n  \\\"dumb\\\": -3,\\r\\n  \\\"dumbass\\\": -3,\\r\\n  \\\"dump\\\": -1,\\r\\n  \\\"dumped\\\": -2,\\r\\n  \\\"dumps\\\": -1,\\r\\n  \\\"dupe\\\": -2,\\r\\n  \\\"duped\\\": -2,\\r\\n  \\\"dysfunction\\\": -2,\\r\\n  \\\"despair\\\": -3,\\r\\n  \\\"eager\\\": 2,\\r\\n  \\\"ease\\\": 2,\\r\\n  \\\"easy\\\": 1,\\r\\n  \\\"ecstatic\\\": 4,\\r\\n  \\\"eerie\\\": -2,\\r\\n  \\\"eery\\\": -2,\\r\\n  \\\"effective\\\": 2,\\r\\n  \\\"effectively\\\": 2,\\r\\n  \\\"elated\\\": 3,\\r\\n  \\\"elation\\\": 3,\\r\\n  \\\"elegant\\\": 2,\\r\\n  \\\"elegantly\\\": 2,\\r\\n  \\\"embarrass\\\": -2,\\r\\n  \\\"embarrassed\\\": -2,\\r\\n  \\\"embarrasses\\\": -2,\\r\\n  \\\"embarrassing\\\": -2,\\r\\n  \\\"embarrassment\\\": -2,\\r\\n  \\\"embittered\\\": -2,\\r\\n  \\\"embrace\\\": 1,\\r\\n  \\\"emergency\\\": -2,\\r\\n  \\\"empathetic\\\": 2,\\r\\n  \\\"emptiness\\\": -1,\\r\\n  \\\"empty\\\": -1,\\r\\n  \\\"enchanted\\\": 2,\\r\\n  \\\"encourage\\\": 2,\\r\\n  \\\"encouraged\\\": 2,\\r\\n  \\\"encouragement\\\": 2,\\r\\n  \\\"encourages\\\": 2,\\r\\n  \\\"endorse\\\": 2,\\r\\n  \\\"endorsed\\\": 2,\\r\\n  \\\"endorsement\\\": 2,\\r\\n  \\\"endorses\\\": 2,\\r\\n  \\\"enemies\\\": -2,\\r\\n  \\\"enemy\\\": -2,\\r\\n  \\\"energetic\\\": 2,\\r\\n  \\\"engage\\\": 1,\\r\\n  \\\"engages\\\": 1,\\r\\n  \\\"engrossed\\\": 1,\\r\\n  \\\"enjoy\\\": 2,\\r\\n  \\\"enjoying\\\": 2,\\r\\n  \\\"enjoys\\\": 2,\\r\\n  \\\"enlighten\\\": 2,\\r\\n  \\\"enlightened\\\": 2,\\r\\n  \\\"enlightening\\\": 2,\\r\\n  \\\"enlightens\\\": 2,\\r\\n  \\\"ennui\\\": -2,\\r\\n  \\\"enrage\\\": -2,\\r\\n  \\\"enraged\\\": -2,\\r\\n  \\\"enrages\\\": -2,\\r\\n  \\\"enraging\\\": -2,\\r\\n  \\\"enrapture\\\": 3,\\r\\n  \\\"enslave\\\": -2,\\r\\n  \\\"enslaved\\\": -2,\\r\\n  \\\"enslaves\\\": -2,\\r\\n  \\\"ensure\\\": 1,\\r\\n  \\\"ensuring\\\": 1,\\r\\n  \\\"enterprising\\\": 1,\\r\\n  \\\"entertaining\\\": 2,\\r\\n  \\\"enthral\\\": 3,\\r\\n  \\\"enthusiastic\\\": 3,\\r\\n  \\\"entitled\\\": 1,\\r\\n  \\\"entrusted\\\": 2,\\r\\n  \\\"envies\\\": -1,\\r\\n  \\\"envious\\\": -2,\\r\\n  \\\"envy\\\": -1,\\r\\n  \\\"envying\\\": -1,\\r\\n  \\\"erroneous\\\": -2,\\r\\n  \\\"error\\\": -2,\\r\\n  \\\"errors\\\": -2,\\r\\n  \\\"escape\\\": -1,\\r\\n  \\\"escapes\\\": -1,\\r\\n  \\\"escaping\\\": -1,\\r\\n  \\\"esteemed\\\": 2,\\r\\n  \\\"ethical\\\": 2,\\r\\n  \\\"euphoria\\\": 3,\\r\\n  \\\"euphoric\\\": 4,\\r\\n  \\\"eviction\\\": -1,\\r\\n  \\\"evil\\\": -3,\\r\\n  \\\"exaggerate\\\": -2,\\r\\n  \\\"exaggerated\\\": -2,\\r\\n  \\\"exaggerates\\\": -2,\\r\\n  \\\"exaggerating\\\": -2,\\r\\n  \\\"exasperated\\\": 2,\\r\\n  \\\"excellence\\\": 3,\\r\\n  \\\"excellent\\\": 3,\\r\\n  \\\"excite\\\": 3,\\r\\n  \\\"excited\\\": 3,\\r\\n  \\\"excitement\\\": 3,\\r\\n  \\\"exciting\\\": 3,\\r\\n  \\\"exclude\\\": -1,\\r\\n  \\\"excluded\\\": -2,\\r\\n  \\\"exclusion\\\": -1,\\r\\n  \\\"exclusive\\\": 2,\\r\\n  \\\"excuse\\\": -1,\\r\\n  \\\"exempt\\\": -1,\\r\\n  \\\"exhausted\\\": -2,\\r\\n  \\\"exhilarated\\\": 3,\\r\\n  \\\"exhilarates\\\": 3,\\r\\n  \\\"exhilarating\\\": 3,\\r\\n  \\\"exonerate\\\": 2,\\r\\n  \\\"exonerated\\\": 2,\\r\\n  \\\"exonerates\\\": 2,\\r\\n  \\\"exonerating\\\": 2,\\r\\n  \\\"expand\\\": 1,\\r\\n  \\\"expands\\\": 1,\\r\\n  \\\"expel\\\": -2,\\r\\n  \\\"expelled\\\": -2,\\r\\n  \\\"expelling\\\": -2,\\r\\n  \\\"expels\\\": -2,\\r\\n  \\\"exploit\\\": -2,\\r\\n  \\\"exploited\\\": -2,\\r\\n  \\\"exploiting\\\": -2,\\r\\n  \\\"exploits\\\": -2,\\r\\n  \\\"exploration\\\": 1,\\r\\n  \\\"explorations\\\": 1,\\r\\n  \\\"expose\\\": -1,\\r\\n  \\\"exposed\\\": -1,\\r\\n  \\\"exposes\\\": -1,\\r\\n  \\\"exposing\\\": -1,\\r\\n  \\\"extend\\\": 1,\\r\\n  \\\"extends\\\": 1,\\r\\n  \\\"exuberant\\\": 4,\\r\\n  \\\"exultant\\\": 3,\\r\\n  \\\"exultantly\\\": 3,\\r\\n  \\\"earnest\\\": 2,\\r\\n  \\\"fad\\\": -2,\\r\\n  \\\"fraudster\\\": -4,\\r\\n  \\\"faggot\\\": -3,\\r\\n  \\\"faggots\\\": -3,\\r\\n  \\\"fail\\\": -2,\\r\\n  \\\"failed\\\": -2,\\r\\n  \\\"failing\\\": -2,\\r\\n  \\\"fails\\\": -2,\\r\\n  \\\"failure\\\": -2,\\r\\n  \\\"failures\\\": -2,\\r\\n  \\\"fainthearted\\\": -2,\\r\\n  \\\"fair\\\": 2,\\r\\n  \\\"faith\\\": 1,\\r\\n  \\\"faithful\\\": 3,\\r\\n  \\\"fake\\\": -3,\\r\\n  \\\"fakes\\\": -3,\\r\\n  \\\"faking\\\": -3,\\r\\n  \\\"fallen\\\": -2,\\r\\n  \\\"falling\\\": -1,\\r\\n  \\\"falsified\\\": -3,\\r\\n  \\\"falsify\\\": -3,\\r\\n  \\\"fame\\\": 1,\\r\\n  \\\"fan\\\": 3,\\r\\n  \\\"fantastic\\\": 4,\\r\\n  \\\"farce\\\": -1,\\r\\n  \\\"fascinate\\\": 3,\\r\\n  \\\"fascinated\\\": 3,\\r\\n  \\\"fascinates\\\": 3,\\r\\n  \\\"fascinating\\\": 3,\\r\\n  \\\"fascist\\\": -2,\\r\\n  \\\"fascists\\\": -2,\\r\\n  \\\"fatalities\\\": -3,\\r\\n  \\\"fatality\\\": -3,\\r\\n  \\\"fatigue\\\": -2,\\r\\n  \\\"fatigued\\\": -2,\\r\\n  \\\"fatigues\\\": -2,\\r\\n  \\\"fatiguing\\\": -2,\\r\\n  \\\"favor\\\": 2,\\r\\n  \\\"favored\\\": 2,\\r\\n  \\\"favorite\\\": 2,\\r\\n  \\\"favorited\\\": 2,\\r\\n  \\\"favorites\\\": 2,\\r\\n  \\\"favors\\\": 2,\\r\\n  \\\"fear\\\": -2,\\r\\n  \\\"fearful\\\": -2,\\r\\n  \\\"fearing\\\": -2,\\r\\n  \\\"fearless\\\": 2,\\r\\n  \\\"fearsome\\\": -2,\\r\\n  \\\"fed up\\\": -3,\\r\\n  \\\"feeble\\\": -2,\\r\\n  \\\"feeling\\\": 1,\\r\\n  \\\"felonies\\\": -3,\\r\\n  \\\"felony\\\": -3,\\r\\n  \\\"fervent\\\": 2,\\r\\n  \\\"fervid\\\": 2,\\r\\n  \\\"festive\\\": 2,\\r\\n  \\\"fiasco\\\": -3,\\r\\n  \\\"fidgety\\\": -2,\\r\\n  \\\"fight\\\": -1,\\r\\n  \\\"fine\\\": 2,\\r\\n  \\\"fire\\\": -2,\\r\\n  \\\"fired\\\": -2,\\r\\n  \\\"firing\\\": -2,\\r\\n  \\\"fit\\\": 1,\\r\\n  \\\"fitness\\\": 1,\\r\\n  \\\"flagship\\\": 2,\\r\\n  \\\"flees\\\": -1,\\r\\n  \\\"flop\\\": -2,\\r\\n  \\\"flops\\\": -2,\\r\\n  \\\"flu\\\": -2,\\r\\n  \\\"flustered\\\": -2,\\r\\n  \\\"focused\\\": 2,\\r\\n  \\\"fond\\\": 2,\\r\\n  \\\"fondness\\\": 2,\\r\\n  \\\"fool\\\": -2,\\r\\n  \\\"foolish\\\": -2,\\r\\n  \\\"fools\\\": -2,\\r\\n  \\\"forced\\\": -1,\\r\\n  \\\"foreclosure\\\": -2,\\r\\n  \\\"foreclosures\\\": -2,\\r\\n  \\\"forget\\\": -1,\\r\\n  \\\"forgetful\\\": -2,\\r\\n  \\\"forgive\\\": 1,\\r\\n  \\\"forgiving\\\": 1,\\r\\n  \\\"forgotten\\\": -1,\\r\\n  \\\"fortunate\\\": 2,\\r\\n  \\\"frantic\\\": -1,\\r\\n  \\\"fraud\\\": -4,\\r\\n  \\\"frauds\\\": -4,\\r\\n  \\\"fabulous\\\": 4,\\r\\n  \\\"fraudsters\\\": -4,\\r\\n  \\\"fraudulence\\\": -4,\\r\\n  \\\"fraudulent\\\": -4,\\r\\n  \\\"free\\\": 1,\\r\\n  \\\"freedom\\\": 2,\\r\\n  \\\"frenzy\\\": -3,\\r\\n  \\\"fresh\\\": 1,\\r\\n  \\\"friendly\\\": 2,\\r\\n  \\\"fright\\\": -2,\\r\\n  \\\"frightened\\\": -2,\\r\\n  \\\"frightening\\\": -3,\\r\\n  \\\"frikin\\\": -2,\\r\\n  \\\"frisky\\\": 2,\\r\\n  \\\"frowning\\\": -1,\\r\\n  \\\"frustrate\\\": -2,\\r\\n  \\\"frustrated\\\": -2,\\r\\n  \\\"frustrates\\\": -2,\\r\\n  \\\"frustrating\\\": -2,\\r\\n  \\\"frustration\\\": -2,\\r\\n  \\\"ftw\\\": 3,\\r\\n  \\\"fuck\\\": -4,\\r\\n  \\\"fucked\\\": -4,\\r\\n  \\\"fucker\\\": -4,\\r\\n  \\\"fuckers\\\": -4,\\r\\n  \\\"fuckface\\\": -4,\\r\\n  \\\"fuckhead\\\": -4,\\r\\n  \\\"fucking\\\": -4,\\r\\n  \\\"fucktard\\\": -4,\\r\\n  \\\"fud\\\": -3,\\r\\n  \\\"fuked\\\": -4,\\r\\n  \\\"fuking\\\": -4,\\r\\n  \\\"fulfill\\\": 2,\\r\\n  \\\"fulfilled\\\": 2,\\r\\n  \\\"fulfills\\\": 2,\\r\\n  \\\"fuming\\\": -2,\\r\\n  \\\"fun\\\": 4,\\r\\n  \\\"funeral\\\": -1,\\r\\n  \\\"funerals\\\": -1,\\r\\n  \\\"funky\\\": 2,\\r\\n  \\\"funnier\\\": 4,\\r\\n  \\\"funny\\\": 4,\\r\\n  \\\"furious\\\": -3,\\r\\n  \\\"futile\\\": 2,\\r\\n  \\\"fag\\\": -3,\\r\\n  \\\"gagged\\\": -2,\\r\\n  \\\"gloom\\\": -1,\\r\\n  \\\"gained\\\": 2,\\r\\n  \\\"gaining\\\": 2,\\r\\n  \\\"gains\\\": 2,\\r\\n  \\\"gallant\\\": 3,\\r\\n  \\\"gallantly\\\": 3,\\r\\n  \\\"gallantry\\\": 3,\\r\\n  \\\"generous\\\": 2,\\r\\n  \\\"genial\\\": 3,\\r\\n  \\\"ghost\\\": -1,\\r\\n  \\\"giddy\\\": -2,\\r\\n  \\\"gift\\\": 2,\\r\\n  \\\"glad\\\": 3,\\r\\n  \\\"glamorous\\\": 3,\\r\\n  \\\"glamourous\\\": 3,\\r\\n  \\\"glee\\\": 3,\\r\\n  \\\"gleeful\\\": 3,\\r\\n  \\\"gag\\\": -2,\\r\\n  \\\"gloomy\\\": -2,\\r\\n  \\\"glorious\\\": 2,\\r\\n  \\\"glory\\\": 2,\\r\\n  \\\"glum\\\": -2,\\r\\n  \\\"god\\\": 1,\\r\\n  \\\"goddamn\\\": -3,\\r\\n  \\\"godsend\\\": 4,\\r\\n  \\\"good\\\": 3,\\r\\n  \\\"goodness\\\": 3,\\r\\n  \\\"grace\\\": 1,\\r\\n  \\\"gracious\\\": 3,\\r\\n  \\\"grand\\\": 3,\\r\\n  \\\"grant\\\": 1,\\r\\n  \\\"granted\\\": 1,\\r\\n  \\\"granting\\\": 1,\\r\\n  \\\"grants\\\": 1,\\r\\n  \\\"grateful\\\": 3,\\r\\n  \\\"gratification\\\": 2,\\r\\n  \\\"grave\\\": -2,\\r\\n  \\\"gray\\\": -1,\\r\\n  \\\"great\\\": 3,\\r\\n  \\\"greater\\\": 3,\\r\\n  \\\"greatest\\\": 3,\\r\\n  \\\"greed\\\": -3,\\r\\n  \\\"greedy\\\": -2,\\r\\n  \\\"green wash\\\": -3,\\r\\n  \\\"green washing\\\": -3,\\r\\n  \\\"greenwash\\\": -3,\\r\\n  \\\"greenwasher\\\": -3,\\r\\n  \\\"greenwashers\\\": -3,\\r\\n  \\\"greenwashing\\\": -3,\\r\\n  \\\"greet\\\": 1,\\r\\n  \\\"greeted\\\": 1,\\r\\n  \\\"greeting\\\": 1,\\r\\n  \\\"greetings\\\": 2,\\r\\n  \\\"greets\\\": 1,\\r\\n  \\\"grey\\\": -1,\\r\\n  \\\"grief\\\": -2,\\r\\n  \\\"grieved\\\": -2,\\r\\n  \\\"gross\\\": -2,\\r\\n  \\\"growing\\\": 1,\\r\\n  \\\"growth\\\": 2,\\r\\n  \\\"guarantee\\\": 1,\\r\\n  \\\"guilt\\\": -3,\\r\\n  \\\"guilty\\\": -3,\\r\\n  \\\"gullibility\\\": -2,\\r\\n  \\\"gullible\\\": -2,\\r\\n  \\\"gun\\\": -1,\\r\\n  \\\"gain\\\": 2,\\r\\n  \\\"hid\\\": -1,\\r\\n  \\\"hacked\\\": -1,\\r\\n  \\\"hahaha\\\": 3,\\r\\n  \\\"hahahah\\\": 3,\\r\\n  \\\"hail\\\": 2,\\r\\n  \\\"hailed\\\": 2,\\r\\n  \\\"hapless\\\": -2,\\r\\n  \\\"haplessness\\\": -2,\\r\\n  \\\"happiness\\\": 3,\\r\\n  \\\"happy\\\": 3,\\r\\n  \\\"hard\\\": -1,\\r\\n  \\\"hardier\\\": 2,\\r\\n  \\\"hardship\\\": -2,\\r\\n  \\\"hardy\\\": 2,\\r\\n  \\\"harm\\\": -2,\\r\\n  \\\"harmed\\\": -2,\\r\\n  \\\"harmful\\\": -2,\\r\\n  \\\"ha\\\": 2,\\r\\n  \\\"harms\\\": -2,\\r\\n  \\\"harried\\\": -2,\\r\\n  \\\"harsh\\\": -2,\\r\\n  \\\"harsher\\\": -2,\\r\\n  \\\"harshest\\\": -2,\\r\\n  \\\"hate\\\": -3,\\r\\n  \\\"hated\\\": -3,\\r\\n  \\\"haters\\\": -3,\\r\\n  \\\"hates\\\": -3,\\r\\n  \\\"hating\\\": -3,\\r\\n  \\\"haunt\\\": -1,\\r\\n  \\\"haunted\\\": -2,\\r\\n  \\\"haunting\\\": 1,\\r\\n  \\\"haunts\\\": -1,\\r\\n  \\\"havoc\\\": -2,\\r\\n  \\\"healthy\\\": 2,\\r\\n  \\\"heartbreaking\\\": -3,\\r\\n  \\\"heartbroken\\\": -3,\\r\\n  \\\"heartfelt\\\": 3,\\r\\n  \\\"heaven\\\": 2,\\r\\n  \\\"heavenly\\\": 4,\\r\\n  \\\"heavyhearted\\\": -2,\\r\\n  \\\"hell\\\": -4,\\r\\n  \\\"help\\\": 2,\\r\\n  \\\"helpful\\\": 2,\\r\\n  \\\"helping\\\": 2,\\r\\n  \\\"helpless\\\": -2,\\r\\n  \\\"helps\\\": 2,\\r\\n  \\\"hero\\\": 2,\\r\\n  \\\"heroes\\\": 2,\\r\\n  \\\"heroic\\\": 3,\\r\\n  \\\"hesitant\\\": -2,\\r\\n  \\\"hesitate\\\": -2,\\r\\n  \\\"haha\\\": 3,\\r\\n  \\\"hide\\\": -1,\\r\\n  \\\"hides\\\": -1,\\r\\n  \\\"hiding\\\": -1,\\r\\n  \\\"highlight\\\": 2,\\r\\n  \\\"hilarious\\\": 2,\\r\\n  \\\"hindrance\\\": -2,\\r\\n  \\\"hoax\\\": -2,\\r\\n  \\\"homesick\\\": -2,\\r\\n  \\\"honest\\\": 2,\\r\\n  \\\"honor\\\": 2,\\r\\n  \\\"honored\\\": 2,\\r\\n  \\\"honoring\\\": 2,\\r\\n  \\\"honour\\\": 2,\\r\\n  \\\"honoured\\\": 2,\\r\\n  \\\"honouring\\\": 2,\\r\\n  \\\"hooligan\\\": -2,\\r\\n  \\\"hooliganism\\\": -2,\\r\\n  \\\"hooligans\\\": -2,\\r\\n  \\\"hope\\\": 2,\\r\\n  \\\"hopeful\\\": 2,\\r\\n  \\\"hopefully\\\": 2,\\r\\n  \\\"hopeless\\\": -2,\\r\\n  \\\"hopelessness\\\": -2,\\r\\n  \\\"hopes\\\": 2,\\r\\n  \\\"hoping\\\": 2,\\r\\n  \\\"horrendous\\\": -3,\\r\\n  \\\"horrible\\\": -3,\\r\\n  \\\"horrific\\\": -3,\\r\\n  \\\"horrified\\\": -3,\\r\\n  \\\"hostile\\\": -2,\\r\\n  \\\"huckster\\\": -2,\\r\\n  \\\"hug\\\": 2,\\r\\n  \\\"huge\\\": 1,\\r\\n  \\\"hugs\\\": 2,\\r\\n  \\\"humerous\\\": 3,\\r\\n  \\\"humiliated\\\": -3,\\r\\n  \\\"humiliation\\\": -3,\\r\\n  \\\"humor\\\": 2,\\r\\n  \\\"humorous\\\": 2,\\r\\n  \\\"humour\\\": 2,\\r\\n  \\\"humourous\\\": 2,\\r\\n  \\\"hunger\\\": -2,\\r\\n  \\\"hurrah\\\": 5,\\r\\n  \\\"hurt\\\": -2,\\r\\n  \\\"hurting\\\": -2,\\r\\n  \\\"hurts\\\": -2,\\r\\n  \\\"hypocritical\\\": -2,\\r\\n  \\\"hysteria\\\": -3,\\r\\n  \\\"hysterical\\\": -3,\\r\\n  \\\"hysterics\\\": -3,\\r\\n  \\\"harming\\\": -2,\\r\\n  \\\"idiot\\\": -3,\\r\\n  \\\"idiotic\\\": -3,\\r\\n  \\\"ignorance\\\": -2,\\r\\n  \\\"ignorant\\\": -2,\\r\\n  \\\"ignore\\\": -1,\\r\\n  \\\"ignored\\\": -2,\\r\\n  \\\"ignores\\\": -1,\\r\\n  \\\"ill\\\": -2,\\r\\n  \\\"illegal\\\": -3,\\r\\n  \\\"illiteracy\\\": -2,\\r\\n  \\\"illness\\\": -2,\\r\\n  \\\"illnesses\\\": -2,\\r\\n  \\\"imbecile\\\": -3,\\r\\n  \\\"immobilized\\\": -1,\\r\\n  \\\"immortal\\\": 2,\\r\\n  \\\"immune\\\": 1,\\r\\n  \\\"impatient\\\": -2,\\r\\n  \\\"imperfect\\\": -2,\\r\\n  \\\"importance\\\": 2,\\r\\n  \\\"important\\\": 2,\\r\\n  \\\"impose\\\": -1,\\r\\n  \\\"imposed\\\": -1,\\r\\n  \\\"imposes\\\": -1,\\r\\n  \\\"imposing\\\": -1,\\r\\n  \\\"impotent\\\": -2,\\r\\n  \\\"impress\\\": 3,\\r\\n  \\\"impressed\\\": 3,\\r\\n  \\\"impresses\\\": 3,\\r\\n  \\\"impressive\\\": 3,\\r\\n  \\\"imprisoned\\\": -2,\\r\\n  \\\"improve\\\": 2,\\r\\n  \\\"improved\\\": 2,\\r\\n  \\\"improvement\\\": 2,\\r\\n  \\\"improves\\\": 2,\\r\\n  \\\"improving\\\": 2,\\r\\n  \\\"inability\\\": -2,\\r\\n  \\\"inaction\\\": -2,\\r\\n  \\\"inadequate\\\": -2,\\r\\n  \\\"incapable\\\": -2,\\r\\n  \\\"incapacitated\\\": -2,\\r\\n  \\\"incensed\\\": -2,\\r\\n  \\\"incompetence\\\": -2,\\r\\n  \\\"incompetent\\\": -2,\\r\\n  \\\"inconsiderate\\\": -2,\\r\\n  \\\"inconvenience\\\": -2,\\r\\n  \\\"inconvenient\\\": -2,\\r\\n  \\\"increase\\\": 1,\\r\\n  \\\"increased\\\": 1,\\r\\n  \\\"indecisive\\\": -2,\\r\\n  \\\"indestructible\\\": 2,\\r\\n  \\\"indifference\\\": -2,\\r\\n  \\\"indifferent\\\": -2,\\r\\n  \\\"indignant\\\": -2,\\r\\n  \\\"indignation\\\": -2,\\r\\n  \\\"indoctrinate\\\": -2,\\r\\n  \\\"indoctrinated\\\": -2,\\r\\n  \\\"indoctrinates\\\": -2,\\r\\n  \\\"indoctrinating\\\": -2,\\r\\n  \\\"ineffective\\\": -2,\\r\\n  \\\"ineffectively\\\": -2,\\r\\n  \\\"infatuated\\\": 2,\\r\\n  \\\"infatuation\\\": 2,\\r\\n  \\\"infected\\\": -2,\\r\\n  \\\"inferior\\\": -2,\\r\\n  \\\"inflamed\\\": -2,\\r\\n  \\\"influential\\\": 2,\\r\\n  \\\"infringement\\\": -2,\\r\\n  \\\"infuriate\\\": -2,\\r\\n  \\\"infuriated\\\": -2,\\r\\n  \\\"infuriates\\\": -2,\\r\\n  \\\"infuriating\\\": -2,\\r\\n  \\\"inhibit\\\": -1,\\r\\n  \\\"injured\\\": -2,\\r\\n  \\\"injury\\\": -2,\\r\\n  \\\"injustice\\\": -2,\\r\\n  \\\"innovate\\\": 1,\\r\\n  \\\"innovates\\\": 1,\\r\\n  \\\"innovation\\\": 1,\\r\\n  \\\"innovative\\\": 2,\\r\\n  \\\"inquisition\\\": -2,\\r\\n  \\\"inquisitive\\\": 2,\\r\\n  \\\"insane\\\": -2,\\r\\n  \\\"insanity\\\": -2,\\r\\n  \\\"insecure\\\": -2,\\r\\n  \\\"insensitive\\\": -2,\\r\\n  \\\"insensitivity\\\": -2,\\r\\n  \\\"insignificant\\\": -2,\\r\\n  \\\"insipid\\\": -2,\\r\\n  \\\"inspiration\\\": 2,\\r\\n  \\\"inspirational\\\": 2,\\r\\n  \\\"inspire\\\": 2,\\r\\n  \\\"inspired\\\": 2,\\r\\n  \\\"inspires\\\": 2,\\r\\n  \\\"inspiring\\\": 3,\\r\\n  \\\"insult\\\": -2,\\r\\n  \\\"insulted\\\": -2,\\r\\n  \\\"insulting\\\": -2,\\r\\n  \\\"insults\\\": -2,\\r\\n  \\\"intact\\\": 2,\\r\\n  \\\"integrity\\\": 2,\\r\\n  \\\"intelligent\\\": 2,\\r\\n  \\\"intense\\\": 1,\\r\\n  \\\"interest\\\": 1,\\r\\n  \\\"interested\\\": 2,\\r\\n  \\\"interesting\\\": 2,\\r\\n  \\\"interests\\\": 1,\\r\\n  \\\"interrogated\\\": -2,\\r\\n  \\\"interrupt\\\": -2,\\r\\n  \\\"interrupted\\\": -2,\\r\\n  \\\"interrupting\\\": -2,\\r\\n  \\\"interruption\\\": -2,\\r\\n  \\\"interrupts\\\": -2,\\r\\n  \\\"intimidate\\\": -2,\\r\\n  \\\"intimidated\\\": -2,\\r\\n  \\\"intimidates\\\": -2,\\r\\n  \\\"intimidating\\\": -2,\\r\\n  \\\"intimidation\\\": -2,\\r\\n  \\\"intricate\\\": 2,\\r\\n  \\\"intrigues\\\": 1,\\r\\n  \\\"invincible\\\": 2,\\r\\n  \\\"invite\\\": 1,\\r\\n  \\\"inviting\\\": 1,\\r\\n  \\\"invulnerable\\\": 2,\\r\\n  \\\"irate\\\": -3,\\r\\n  \\\"ironic\\\": -1,\\r\\n  \\\"irony\\\": -1,\\r\\n  \\\"irrational\\\": -1,\\r\\n  \\\"irresistible\\\": 2,\\r\\n  \\\"irresolute\\\": -2,\\r\\n  \\\"irresponsible\\\": 2,\\r\\n  \\\"irreversible\\\": -1,\\r\\n  \\\"irritate\\\": -3,\\r\\n  \\\"irritated\\\": -3,\\r\\n  \\\"irritating\\\": -3,\\r\\n  \\\"isolated\\\": -1,\\r\\n  \\\"itchy\\\": -2,\\r\\n  \\\"jackass\\\": -4,\\r\\n  \\\"jackasses\\\": -4,\\r\\n  \\\"jaunty\\\": 2,\\r\\n  \\\"jealous\\\": -2,\\r\\n  \\\"jeopardy\\\": -2,\\r\\n  \\\"jerk\\\": -3,\\r\\n  \\\"jesus\\\": 1,\\r\\n  \\\"jewel\\\": 1,\\r\\n  \\\"jewels\\\": 1,\\r\\n  \\\"jocular\\\": 2,\\r\\n  \\\"join\\\": 1,\\r\\n  \\\"joke\\\": 2,\\r\\n  \\\"jokes\\\": 2,\\r\\n  \\\"jolly\\\": 2,\\r\\n  \\\"jovial\\\": 2,\\r\\n  \\\"joy\\\": 3,\\r\\n  \\\"joyful\\\": 3,\\r\\n  \\\"joyfully\\\": 3,\\r\\n  \\\"joyless\\\": -2,\\r\\n  \\\"joyous\\\": 3,\\r\\n  \\\"jubilant\\\": 3,\\r\\n  \\\"jumpy\\\": -1,\\r\\n  \\\"justice\\\": 2,\\r\\n  \\\"justifiably\\\": 2,\\r\\n  \\\"justified\\\": 2,\\r\\n  \\\"jailed\\\": -2,\\r\\n  \\\"kill\\\": -3,\\r\\n  \\\"killed\\\": -3,\\r\\n  \\\"kills\\\": -3,\\r\\n  \\\"kind\\\": 2,\\r\\n  \\\"kinder\\\": 2,\\r\\n  \\\"kiss\\\": 2,\\r\\n  \\\"kudos\\\": 3,\\r\\n  \\\"keen\\\": 1,\\r\\n  \\\"killing\\\": -3,\\r\\n  \\\"loathe\\\": -3,\\r\\n  \\\"lag\\\": -1,\\r\\n  \\\"lags\\\": -2,\\r\\n  \\\"lame\\\": -2,\\r\\n  \\\"landmark\\\": 2,\\r\\n  \\\"laugh\\\": 1,\\r\\n  \\\"laughed\\\": 1,\\r\\n  \\\"laughing\\\": 1,\\r\\n  \\\"laughs\\\": 1,\\r\\n  \\\"laughting\\\": 1,\\r\\n  \\\"launched\\\": 1,\\r\\n  \\\"lawl\\\": 3,\\r\\n  \\\"lawsuit\\\": -2,\\r\\n  \\\"lawsuits\\\": -2,\\r\\n  \\\"lazy\\\": -1,\\r\\n  \\\"leak\\\": -1,\\r\\n  \\\"leaked\\\": -1,\\r\\n  \\\"leave\\\": -1,\\r\\n  \\\"legal\\\": 1,\\r\\n  \\\"legally\\\": 1,\\r\\n  \\\"lenient\\\": 1,\\r\\n  \\\"lethargic\\\": -2,\\r\\n  \\\"lethargy\\\": -2,\\r\\n  \\\"liar\\\": -3,\\r\\n  \\\"liars\\\": -3,\\r\\n  \\\"libelous\\\": -2,\\r\\n  \\\"lied\\\": -2,\\r\\n  \\\"lifesaver\\\": 4,\\r\\n  \\\"lighthearted\\\": 1,\\r\\n  \\\"like\\\": 2,\\r\\n  \\\"liked\\\": 2,\\r\\n  \\\"likes\\\": 2,\\r\\n  \\\"limitation\\\": -1,\\r\\n  \\\"limited\\\": -1,\\r\\n  \\\"limits\\\": -1,\\r\\n  \\\"litigation\\\": -1,\\r\\n  \\\"litigious\\\": -2,\\r\\n  \\\"lively\\\": 2,\\r\\n  \\\"livid\\\": -2,\\r\\n  \\\"lmao\\\": 4,\\r\\n  \\\"lmfao\\\": 4,\\r\\n  \\\"lagging\\\": -2,\\r\\n  \\\"loathed\\\": -3,\\r\\n  \\\"loathes\\\": -3,\\r\\n  \\\"loathing\\\": -3,\\r\\n  \\\"lobby\\\": -2,\\r\\n  \\\"lobbying\\\": -2,\\r\\n  \\\"lol\\\": 3,\\r\\n  \\\"lonely\\\": -2,\\r\\n  \\\"lonesome\\\": -2,\\r\\n  \\\"longing\\\": -1,\\r\\n  \\\"loom\\\": -1,\\r\\n  \\\"loomed\\\": -1,\\r\\n  \\\"looming\\\": -1,\\r\\n  \\\"looms\\\": -1,\\r\\n  \\\"loose\\\": -3,\\r\\n  \\\"looses\\\": -3,\\r\\n  \\\"loser\\\": -3,\\r\\n  \\\"losing\\\": -3,\\r\\n  \\\"loss\\\": -3,\\r\\n  \\\"lost\\\": -3,\\r\\n  \\\"lovable\\\": 3,\\r\\n  \\\"love\\\": 3,\\r\\n  \\\"loved\\\": 3,\\r\\n  \\\"lovelies\\\": 3,\\r\\n  \\\"lovely\\\": 3,\\r\\n  \\\"loving\\\": 2,\\r\\n  \\\"lowest\\\": -1,\\r\\n  \\\"loyal\\\": 3,\\r\\n  \\\"loyalty\\\": 3,\\r\\n  \\\"luck\\\": 3,\\r\\n  \\\"luckily\\\": 3,\\r\\n  \\\"lucky\\\": 3,\\r\\n  \\\"lugubrious\\\": -2,\\r\\n  \\\"lunatic\\\": -3,\\r\\n  \\\"lunatics\\\": -3,\\r\\n  \\\"lurk\\\": -1,\\r\\n  \\\"lurking\\\": -1,\\r\\n  \\\"lurks\\\": -1,\\r\\n  \\\"lackadaisical\\\": -2,\\r\\n  \\\"lagged\\\": -2,\\r\\n  \\\"lack\\\": -2,\\r\\n  \\\"made-up\\\": -1,\\r\\n  \\\"madly\\\": -3,\\r\\n  \\\"madness\\\": -3,\\r\\n  \\\"mandatory\\\": -1,\\r\\n  \\\"manipulated\\\": -1,\\r\\n  \\\"manipulating\\\": -1,\\r\\n  \\\"manipulation\\\": -1,\\r\\n  \\\"marvel\\\": 3,\\r\\n  \\\"marvelous\\\": 3,\\r\\n  \\\"marvels\\\": 3,\\r\\n  \\\"masterpiece\\\": 4,\\r\\n  \\\"masterpieces\\\": 4,\\r\\n  \\\"matter\\\": 1,\\r\\n  \\\"matters\\\": 1,\\r\\n  \\\"mature\\\": 2,\\r\\n  \\\"meaningful\\\": 2,\\r\\n  \\\"meaningless\\\": -2,\\r\\n  \\\"medal\\\": 3,\\r\\n  \\\"mediocrity\\\": -3,\\r\\n  \\\"meditative\\\": 1,\\r\\n  \\\"melancholy\\\": -2,\\r\\n  \\\"menace\\\": -2,\\r\\n  \\\"menaced\\\": -2,\\r\\n  \\\"mercy\\\": 2,\\r\\n  \\\"mad\\\": -3,\\r\\n  \\\"mess\\\": -2,\\r\\n  \\\"messed\\\": -2,\\r\\n  \\\"messing up\\\": -2,\\r\\n  \\\"methodical\\\": 2,\\r\\n  \\\"mindless\\\": -2,\\r\\n  \\\"miracle\\\": 4,\\r\\n  \\\"mirth\\\": 3,\\r\\n  \\\"mirthful\\\": 3,\\r\\n  \\\"mirthfully\\\": 3,\\r\\n  \\\"misbehave\\\": -2,\\r\\n  \\\"misbehaved\\\": -2,\\r\\n  \\\"misbehaves\\\": -2,\\r\\n  \\\"misbehaving\\\": -2,\\r\\n  \\\"mischief\\\": -1,\\r\\n  \\\"mischiefs\\\": -1,\\r\\n  \\\"miserable\\\": -3,\\r\\n  \\\"misery\\\": -2,\\r\\n  \\\"misgiving\\\": -2,\\r\\n  \\\"misinformation\\\": -2,\\r\\n  \\\"misinformed\\\": -2,\\r\\n  \\\"misinterpreted\\\": -2,\\r\\n  \\\"misleading\\\": -3,\\r\\n  \\\"misread\\\": -1,\\r\\n  \\\"misreporting\\\": -2,\\r\\n  \\\"misrepresentation\\\": -2,\\r\\n  \\\"miss\\\": -2,\\r\\n  \\\"missed\\\": -2,\\r\\n  \\\"missing\\\": -2,\\r\\n  \\\"mistake\\\": -2,\\r\\n  \\\"mistaken\\\": -2,\\r\\n  \\\"mistakes\\\": -2,\\r\\n  \\\"mistaking\\\": -2,\\r\\n  \\\"misunderstand\\\": -2,\\r\\n  \\\"misunderstanding\\\": -2,\\r\\n  \\\"misunderstands\\\": -2,\\r\\n  \\\"misunderstood\\\": -2,\\r\\n  \\\"moan\\\": -2,\\r\\n  \\\"moaned\\\": -2,\\r\\n  \\\"moaning\\\": -2,\\r\\n  \\\"moans\\\": -2,\\r\\n  \\\"mock\\\": -2,\\r\\n  \\\"mocked\\\": -2,\\r\\n  \\\"mocking\\\": -2,\\r\\n  \\\"mocks\\\": -2,\\r\\n  \\\"mongering\\\": -2,\\r\\n  \\\"monopolize\\\": -2,\\r\\n  \\\"monopolized\\\": -2,\\r\\n  \\\"monopolizes\\\": -2,\\r\\n  \\\"monopolizing\\\": -2,\\r\\n  \\\"moody\\\": -1,\\r\\n  \\\"mope\\\": -1,\\r\\n  \\\"moping\\\": -1,\\r\\n  \\\"moron\\\": -3,\\r\\n  \\\"motherfucker\\\": -5,\\r\\n  \\\"motherfucking\\\": -5,\\r\\n  \\\"motivate\\\": 1,\\r\\n  \\\"motivated\\\": 2,\\r\\n  \\\"motivating\\\": 2,\\r\\n  \\\"motivation\\\": 1,\\r\\n  \\\"mourn\\\": -2,\\r\\n  \\\"mourned\\\": -2,\\r\\n  \\\"mournful\\\": -2,\\r\\n  \\\"mourning\\\": -2,\\r\\n  \\\"mourns\\\": -2,\\r\\n  \\\"mumpish\\\": -2,\\r\\n  \\\"murder\\\": -2,\\r\\n  \\\"murderer\\\": -2,\\r\\n  \\\"murdering\\\": -3,\\r\\n  \\\"murderous\\\": -3,\\r\\n  \\\"murders\\\": -2,\\r\\n  \\\"myth\\\": -1,\\r\\n  \\\"maddening\\\": -3,\\r\\n  \\\"merry\\\": 3,\\r\\n  \\\"naive\\\": -2,\\r\\n  \\\"natural\\\": 1,\\r\\n  \\\"na�ve\\\": -2,\\r\\n  \\\"needy\\\": -2,\\r\\n  \\\"negative\\\": -2,\\r\\n  \\\"negativity\\\": -2,\\r\\n  \\\"neglect\\\": -2,\\r\\n  \\\"neglected\\\": -2,\\r\\n  \\\"neglecting\\\": -2,\\r\\n  \\\"neglects\\\": -2,\\r\\n  \\\"nerves\\\": -1,\\r\\n  \\\"nervous\\\": -2,\\r\\n  \\\"nervously\\\": -2,\\r\\n  \\\"nice\\\": 3,\\r\\n  \\\"nifty\\\": 2,\\r\\n  \\\"nasty\\\": -3,\\r\\n  \\\"nigger\\\": -5,\\r\\n  \\\"no\\\": -1,\\r\\n  \\\"no fun\\\": -3,\\r\\n  \\\"noble\\\": 2,\\r\\n  \\\"noisy\\\": -1,\\r\\n  \\\"nonsense\\\": -2,\\r\\n  \\\"noob\\\": -2,\\r\\n  \\\"nosey\\\": -2,\\r\\n  \\\"not good\\\": -2,\\r\\n  \\\"not working\\\": -3,\\r\\n  \\\"notorious\\\": -2,\\r\\n  \\\"novel\\\": 2,\\r\\n  \\\"numb\\\": -1,\\r\\n  \\\"nuts\\\": -3,\\r\\n  \\\"n00b\\\": -2,\\r\\n  \\\"niggas\\\": -5,\\r\\n  \\\"obliterated\\\": -2,\\r\\n  \\\"obnoxious\\\": -3,\\r\\n  \\\"obscene\\\": -2,\\r\\n  \\\"obsessed\\\": 2,\\r\\n  \\\"obsolete\\\": -2,\\r\\n  \\\"obstacle\\\": -2,\\r\\n  \\\"obstacles\\\": -2,\\r\\n  \\\"obstinate\\\": -2,\\r\\n  \\\"odd\\\": -2,\\r\\n  \\\"offend\\\": -2,\\r\\n  \\\"offended\\\": -2,\\r\\n  \\\"offender\\\": -2,\\r\\n  \\\"offending\\\": -2,\\r\\n  \\\"offends\\\": -2,\\r\\n  \\\"offline\\\": -1,\\r\\n  \\\"oks\\\": 2,\\r\\n  \\\"ominous\\\": 3,\\r\\n  \\\"once-in-a-lifetime\\\": 3,\\r\\n  \\\"opportunities\\\": 2,\\r\\n  \\\"opportunity\\\": 2,\\r\\n  \\\"oppressed\\\": -2,\\r\\n  \\\"oppressive\\\": -2,\\r\\n  \\\"optimism\\\": 2,\\r\\n  \\\"optimistic\\\": 2,\\r\\n  \\\"optionless\\\": -2,\\r\\n  \\\"outcry\\\": -2,\\r\\n  \\\"outmaneuvered\\\": -2,\\r\\n  \\\"outrage\\\": -3,\\r\\n  \\\"outraged\\\": -3,\\r\\n  \\\"outreach\\\": 2,\\r\\n  \\\"outstanding\\\": 5,\\r\\n  \\\"overjoyed\\\": 4,\\r\\n  \\\"overload\\\": -1,\\r\\n  \\\"overlooked\\\": -1,\\r\\n  \\\"overreact\\\": -2,\\r\\n  \\\"overreacted\\\": -2,\\r\\n  \\\"overreaction\\\": -2,\\r\\n  \\\"overreacts\\\": -2,\\r\\n  \\\"oversell\\\": -2,\\r\\n  \\\"overselling\\\": -2,\\r\\n  \\\"oversells\\\": -2,\\r\\n  \\\"oversimplification\\\": -2,\\r\\n  \\\"oversimplified\\\": -2,\\r\\n  \\\"oversimplifies\\\": -2,\\r\\n  \\\"oversimplify\\\": -2,\\r\\n  \\\"overstatement\\\": -2,\\r\\n  \\\"overstatements\\\": -2,\\r\\n  \\\"overweight\\\": -1,\\r\\n  \\\"oxymoron\\\": -1,\\r\\n  \\\"obliterate\\\": -2,\\r\\n  \\\"punished\\\": -2,\\r\\n  \\\"pained\\\": -2,\\r\\n  \\\"panicked\\\": -3,\\r\\n  \\\"pain\\\": -2,\\r\\n  \\\"paradise\\\": 3,\\r\\n  \\\"paradox\\\": -1,\\r\\n  \\\"pardon\\\": 2,\\r\\n  \\\"pardoned\\\": 2,\\r\\n  \\\"pardoning\\\": 2,\\r\\n  \\\"pardons\\\": 2,\\r\\n  \\\"parley\\\": -1,\\r\\n  \\\"passionate\\\": 2,\\r\\n  \\\"passive\\\": -1,\\r\\n  \\\"passively\\\": -1,\\r\\n  \\\"pathetic\\\": -2,\\r\\n  \\\"pay\\\": -1,\\r\\n  \\\"peace\\\": 2,\\r\\n  \\\"peaceful\\\": 2,\\r\\n  \\\"peacefully\\\": 2,\\r\\n  \\\"penalty\\\": -2,\\r\\n  \\\"pensive\\\": -1,\\r\\n  \\\"perfect\\\": 3,\\r\\n  \\\"perfected\\\": 2,\\r\\n  \\\"perfectly\\\": 3,\\r\\n  \\\"perfects\\\": 2,\\r\\n  \\\"peril\\\": -2,\\r\\n  \\\"perjury\\\": -3,\\r\\n  \\\"perpetrator\\\": -2,\\r\\n  \\\"perpetrators\\\": -2,\\r\\n  \\\"perplexed\\\": -2,\\r\\n  \\\"persecute\\\": -2,\\r\\n  \\\"persecuted\\\": -2,\\r\\n  \\\"persecutes\\\": -2,\\r\\n  \\\"persecuting\\\": -2,\\r\\n  \\\"perturbed\\\": -2,\\r\\n  \\\"pesky\\\": -2,\\r\\n  \\\"pessimism\\\": -2,\\r\\n  \\\"pessimistic\\\": -2,\\r\\n  \\\"petrified\\\": -2,\\r\\n  \\\"phobic\\\": -2,\\r\\n  \\\"picturesque\\\": 2,\\r\\n  \\\"pileup\\\": -1,\\r\\n  \\\"pique\\\": -2,\\r\\n  \\\"piqued\\\": -2,\\r\\n  \\\"piss\\\": -4,\\r\\n  \\\"pissed\\\": -4,\\r\\n  \\\"pissing\\\": -3,\\r\\n  \\\"piteous\\\": -2,\\r\\n  \\\"pitied\\\": -1,\\r\\n  \\\"pity\\\": -2,\\r\\n  \\\"playful\\\": 2,\\r\\n  \\\"pleasant\\\": 3,\\r\\n  \\\"please\\\": 1,\\r\\n  \\\"pleased\\\": 3,\\r\\n  \\\"pleasure\\\": 3,\\r\\n  \\\"poised\\\": -2,\\r\\n  \\\"poison\\\": -2,\\r\\n  \\\"poisoned\\\": -2,\\r\\n  \\\"poisons\\\": -2,\\r\\n  \\\"pollute\\\": -2,\\r\\n  \\\"polluted\\\": -2,\\r\\n  \\\"polluter\\\": -2,\\r\\n  \\\"polluters\\\": -2,\\r\\n  \\\"pollutes\\\": -2,\\r\\n  \\\"poor\\\": -2,\\r\\n  \\\"poorer\\\": -2,\\r\\n  \\\"poorest\\\": -2,\\r\\n  \\\"popular\\\": 3,\\r\\n  \\\"positive\\\": 2,\\r\\n  \\\"positively\\\": 2,\\r\\n  \\\"possessive\\\": -2,\\r\\n  \\\"postpone\\\": -1,\\r\\n  \\\"postponed\\\": -1,\\r\\n  \\\"postpones\\\": -1,\\r\\n  \\\"postponing\\\": -1,\\r\\n  \\\"poverty\\\": -1,\\r\\n  \\\"powerful\\\": 2,\\r\\n  \\\"powerless\\\": -2,\\r\\n  \\\"praise\\\": 3,\\r\\n  \\\"praised\\\": 3,\\r\\n  \\\"praises\\\": 3,\\r\\n  \\\"praising\\\": 3,\\r\\n  \\\"pray\\\": 1,\\r\\n  \\\"praying\\\": 1,\\r\\n  \\\"prays\\\": 1,\\r\\n  \\\"prblm\\\": -2,\\r\\n  \\\"prblms\\\": -2,\\r\\n  \\\"prepared\\\": 1,\\r\\n  \\\"pressure\\\": -1,\\r\\n  \\\"pressured\\\": -2,\\r\\n  \\\"pretend\\\": -1,\\r\\n  \\\"pretending\\\": -1,\\r\\n  \\\"pretends\\\": -1,\\r\\n  \\\"pretty\\\": 1,\\r\\n  \\\"prevent\\\": -1,\\r\\n  \\\"prevented\\\": -1,\\r\\n  \\\"preventing\\\": -1,\\r\\n  \\\"prevents\\\": -1,\\r\\n  \\\"prick\\\": -5,\\r\\n  \\\"prison\\\": -2,\\r\\n  \\\"prisoner\\\": -2,\\r\\n  \\\"prisoners\\\": -2,\\r\\n  \\\"privileged\\\": 2,\\r\\n  \\\"proactive\\\": 2,\\r\\n  \\\"problem\\\": -2,\\r\\n  \\\"problems\\\": -2,\\r\\n  \\\"profiteer\\\": -2,\\r\\n  \\\"progress\\\": 2,\\r\\n  \\\"prominent\\\": 2,\\r\\n  \\\"promise\\\": 1,\\r\\n  \\\"promised\\\": 1,\\r\\n  \\\"promises\\\": 1,\\r\\n  \\\"promote\\\": 1,\\r\\n  \\\"promoted\\\": 1,\\r\\n  \\\"promotes\\\": 1,\\r\\n  \\\"promoting\\\": 1,\\r\\n  \\\"propaganda\\\": -2,\\r\\n  \\\"prosecute\\\": -1,\\r\\n  \\\"prosecuted\\\": -2,\\r\\n  \\\"prosecutes\\\": -1,\\r\\n  \\\"prosecution\\\": -1,\\r\\n  \\\"prospect\\\": 1,\\r\\n  \\\"prospects\\\": 1,\\r\\n  \\\"prosperous\\\": 3,\\r\\n  \\\"protect\\\": 1,\\r\\n  \\\"protected\\\": 1,\\r\\n  \\\"protects\\\": 1,\\r\\n  \\\"protest\\\": -2,\\r\\n  \\\"protesters\\\": -2,\\r\\n  \\\"protesting\\\": -2,\\r\\n  \\\"protests\\\": -2,\\r\\n  \\\"proud\\\": 2,\\r\\n  \\\"proudly\\\": 2,\\r\\n  \\\"provoke\\\": -1,\\r\\n  \\\"provoked\\\": -1,\\r\\n  \\\"provokes\\\": -1,\\r\\n  \\\"provoking\\\": -1,\\r\\n  \\\"pseudoscience\\\": -3,\\r\\n  \\\"punish\\\": -2,\\r\\n  \\\"panic\\\": -3,\\r\\n  \\\"punishes\\\": -2,\\r\\n  \\\"punitive\\\": -2,\\r\\n  \\\"pushy\\\": -1,\\r\\n  \\\"puzzled\\\": -2,\\r\\n  \\\"panics\\\": -3,\\r\\n  \\\"quaking\\\": -2,\\r\\n  \\\"questioned\\\": -1,\\r\\n  \\\"questioning\\\": -1,\\r\\n  \\\"questionable\\\": -2,\\r\\n  \\\"resign\\\": -1,\\r\\n  \\\"racist\\\": -3,\\r\\n  \\\"rage\\\": -2,\\r\\n  \\\"rageful\\\": -2,\\r\\n  \\\"rainy\\\": -1,\\r\\n  \\\"rant\\\": -3,\\r\\n  \\\"ranter\\\": -3,\\r\\n  \\\"ranters\\\": -3,\\r\\n  \\\"rants\\\": -3,\\r\\n  \\\"rape\\\": -4,\\r\\n  \\\"rapist\\\": -4,\\r\\n  \\\"rapture\\\": 2,\\r\\n  \\\"raptured\\\": 2,\\r\\n  \\\"raptures\\\": 2,\\r\\n  \\\"rapturous\\\": 4,\\r\\n  \\\"rash\\\": -2,\\r\\n  \\\"ratified\\\": 2,\\r\\n  \\\"reach\\\": 1,\\r\\n  \\\"reached\\\": 1,\\r\\n  \\\"reaches\\\": 1,\\r\\n  \\\"reaching\\\": 1,\\r\\n  \\\"reassure\\\": 1,\\r\\n  \\\"reassured\\\": 1,\\r\\n  \\\"reassures\\\": 1,\\r\\n  \\\"reassuring\\\": 2,\\r\\n  \\\"rebellion\\\": -2,\\r\\n  \\\"recession\\\": -2,\\r\\n  \\\"reckless\\\": -2,\\r\\n  \\\"recommend\\\": 2,\\r\\n  \\\"recommended\\\": 2,\\r\\n  \\\"recommends\\\": 2,\\r\\n  \\\"redeemed\\\": 2,\\r\\n  \\\"refuse\\\": -2,\\r\\n  \\\"refused\\\": -2,\\r\\n  \\\"refusing\\\": -2,\\r\\n  \\\"regret\\\": -2,\\r\\n  \\\"regretful\\\": -2,\\r\\n  \\\"regrets\\\": -2,\\r\\n  \\\"regretted\\\": -2,\\r\\n  \\\"regretting\\\": -2,\\r\\n  \\\"reject\\\": -1,\\r\\n  \\\"rejected\\\": -1,\\r\\n  \\\"rejecting\\\": -1,\\r\\n  \\\"rejects\\\": -1,\\r\\n  \\\"rejoice\\\": 4,\\r\\n  \\\"rejoiced\\\": 4,\\r\\n  \\\"rejoices\\\": 4,\\r\\n  \\\"rejoicing\\\": 4,\\r\\n  \\\"relaxed\\\": 2,\\r\\n  \\\"relentless\\\": -1,\\r\\n  \\\"reliant\\\": 2,\\r\\n  \\\"relieve\\\": 1,\\r\\n  \\\"relieved\\\": 2,\\r\\n  \\\"relieves\\\": 1,\\r\\n  \\\"relieving\\\": 2,\\r\\n  \\\"relishing\\\": 2,\\r\\n  \\\"remarkable\\\": 2,\\r\\n  \\\"remorse\\\": -2,\\r\\n  \\\"repulse\\\": -1,\\r\\n  \\\"repulsed\\\": -2,\\r\\n  \\\"rescue\\\": 2,\\r\\n  \\\"rescued\\\": 2,\\r\\n  \\\"racism\\\": -3,\\r\\n  \\\"resentful\\\": -2,\\r\\n  \\\"racists\\\": -3,\\r\\n  \\\"resigned\\\": -1,\\r\\n  \\\"resigning\\\": -1,\\r\\n  \\\"resigns\\\": -1,\\r\\n  \\\"resolute\\\": 2,\\r\\n  \\\"resolve\\\": 2,\\r\\n  \\\"resolved\\\": 2,\\r\\n  \\\"resolves\\\": 2,\\r\\n  \\\"resolving\\\": 2,\\r\\n  \\\"respected\\\": 2,\\r\\n  \\\"responsible\\\": 2,\\r\\n  \\\"responsive\\\": 2,\\r\\n  \\\"restful\\\": 2,\\r\\n  \\\"restless\\\": -2,\\r\\n  \\\"restore\\\": 1,\\r\\n  \\\"restored\\\": 1,\\r\\n  \\\"restores\\\": 1,\\r\\n  \\\"restoring\\\": 1,\\r\\n  \\\"restrict\\\": -2,\\r\\n  \\\"restricted\\\": -2,\\r\\n  \\\"restricting\\\": -2,\\r\\n  \\\"restriction\\\": -2,\\r\\n  \\\"restricts\\\": -2,\\r\\n  \\\"retained\\\": -1,\\r\\n  \\\"retard\\\": -2,\\r\\n  \\\"retarded\\\": -2,\\r\\n  \\\"retreat\\\": -1,\\r\\n  \\\"revenge\\\": -2,\\r\\n  \\\"revengeful\\\": -2,\\r\\n  \\\"revered\\\": 2,\\r\\n  \\\"revive\\\": 2,\\r\\n  \\\"revives\\\": 2,\\r\\n  \\\"reward\\\": 2,\\r\\n  \\\"rewarded\\\": 2,\\r\\n  \\\"rewarding\\\": 2,\\r\\n  \\\"rewards\\\": 2,\\r\\n  \\\"rich\\\": 2,\\r\\n  \\\"ridiculous\\\": -3,\\r\\n  \\\"rig\\\": -1,\\r\\n  \\\"rigged\\\": -1,\\r\\n  \\\"right direction\\\": 3,\\r\\n  \\\"rigorous\\\": 3,\\r\\n  \\\"rigorously\\\": 3,\\r\\n  \\\"riot\\\": -2,\\r\\n  \\\"riots\\\": -2,\\r\\n  \\\"risk\\\": -2,\\r\\n  \\\"risks\\\": -2,\\r\\n  \\\"rob\\\": -2,\\r\\n  \\\"robber\\\": -2,\\r\\n  \\\"robed\\\": -2,\\r\\n  \\\"robing\\\": -2,\\r\\n  \\\"robs\\\": -2,\\r\\n  \\\"robust\\\": 2,\\r\\n  \\\"rofl\\\": 4,\\r\\n  \\\"roflcopter\\\": 4,\\r\\n  \\\"roflmao\\\": 4,\\r\\n  \\\"romance\\\": 2,\\r\\n  \\\"rotfl\\\": 4,\\r\\n  \\\"rotflmfao\\\": 4,\\r\\n  \\\"rotflol\\\": 4,\\r\\n  \\\"ruin\\\": -2,\\r\\n  \\\"ruined\\\": -2,\\r\\n  \\\"ruining\\\": -2,\\r\\n  \\\"ruins\\\": -2,\\r\\n  \\\"rescues\\\": 2,\\r\\n  \\\"sabotage\\\": -2,\\r\\n  \\\"sad\\\": -2,\\r\\n  \\\"sadden\\\": -2,\\r\\n  \\\"saddened\\\": -2,\\r\\n  \\\"sadly\\\": -2,\\r\\n  \\\"safe\\\": 1,\\r\\n  \\\"safely\\\": 1,\\r\\n  \\\"safety\\\": 1,\\r\\n  \\\"salient\\\": 1,\\r\\n  \\\"sappy\\\": -1,\\r\\n  \\\"sarcastic\\\": -2,\\r\\n  \\\"satisfied\\\": 2,\\r\\n  \\\"save\\\": 2,\\r\\n  \\\"saved\\\": 2,\\r\\n  \\\"scam\\\": -2,\\r\\n  \\\"scams\\\": -2,\\r\\n  \\\"scandal\\\": -3,\\r\\n  \\\"scandalous\\\": -3,\\r\\n  \\\"scandals\\\": -3,\\r\\n  \\\"scapegoat\\\": -2,\\r\\n  \\\"scapegoats\\\": -2,\\r\\n  \\\"scare\\\": -2,\\r\\n  \\\"scared\\\": -2,\\r\\n  \\\"scary\\\": -2,\\r\\n  \\\"sceptical\\\": -2,\\r\\n  \\\"scold\\\": -2,\\r\\n  \\\"scoop\\\": 3,\\r\\n  \\\"scorn\\\": -2,\\r\\n  \\\"scornful\\\": -2,\\r\\n  \\\"scream\\\": -2,\\r\\n  \\\"screamed\\\": -2,\\r\\n  \\\"screaming\\\": -2,\\r\\n  \\\"screams\\\": -2,\\r\\n  \\\"screwed\\\": -2,\\r\\n  \\\"screwed up\\\": -3,\\r\\n  \\\"scumbag\\\": -4,\\r\\n  \\\"secure\\\": 2,\\r\\n  \\\"secured\\\": 2,\\r\\n  \\\"secures\\\": 2,\\r\\n  \\\"sedition\\\": -2,\\r\\n  \\\"seditious\\\": -2,\\r\\n  \\\"seduced\\\": -1,\\r\\n  \\\"self-confident\\\": 2,\\r\\n  \\\"self-deluded\\\": -2,\\r\\n  \\\"selfish\\\": -3,\\r\\n  \\\"selfishness\\\": -3,\\r\\n  \\\"sentence\\\": -2,\\r\\n  \\\"sentenced\\\": -2,\\r\\n  \\\"sentences\\\": -2,\\r\\n  \\\"sentencing\\\": -2,\\r\\n  \\\"serene\\\": 2,\\r\\n  \\\"severe\\\": -2,\\r\\n  \\\"sexy\\\": 3,\\r\\n  \\\"shaky\\\": -2,\\r\\n  \\\"shame\\\": -2,\\r\\n  \\\"shamed\\\": -2,\\r\\n  \\\"shameful\\\": -2,\\r\\n  \\\"share\\\": 1,\\r\\n  \\\"shared\\\": 1,\\r\\n  \\\"shares\\\": 1,\\r\\n  \\\"shattered\\\": -2,\\r\\n  \\\"shit\\\": -4,\\r\\n  \\\"shithead\\\": -4,\\r\\n  \\\"shitty\\\": -3,\\r\\n  \\\"shock\\\": -2,\\r\\n  \\\"shocked\\\": -2,\\r\\n  \\\"shocking\\\": -2,\\r\\n  \\\"shocks\\\": -2,\\r\\n  \\\"shoot\\\": -1,\\r\\n  \\\"short-sighted\\\": -2,\\r\\n  \\\"short-sightedness\\\": -2,\\r\\n  \\\"shortage\\\": -2,\\r\\n  \\\"shortages\\\": -2,\\r\\n  \\\"shrew\\\": -4,\\r\\n  \\\"shy\\\": -1,\\r\\n  \\\"sick\\\": -2,\\r\\n  \\\"sigh\\\": -2,\\r\\n  \\\"significance\\\": 1,\\r\\n  \\\"significant\\\": 1,\\r\\n  \\\"silencing\\\": -1,\\r\\n  \\\"silly\\\": -1,\\r\\n  \\\"sincere\\\": 2,\\r\\n  \\\"sincerely\\\": 2,\\r\\n  \\\"sincerest\\\": 2,\\r\\n  \\\"sincerity\\\": 2,\\r\\n  \\\"sinful\\\": -3,\\r\\n  \\\"singleminded\\\": -2,\\r\\n  \\\"skeptic\\\": -2,\\r\\n  \\\"skeptical\\\": -2,\\r\\n  \\\"skepticism\\\": -2,\\r\\n  \\\"skeptics\\\": -2,\\r\\n  \\\"slam\\\": -2,\\r\\n  \\\"slash\\\": -2,\\r\\n  \\\"slashed\\\": -2,\\r\\n  \\\"slashes\\\": -2,\\r\\n  \\\"slashing\\\": -2,\\r\\n  \\\"slavery\\\": -3,\\r\\n  \\\"sleeplessness\\\": -2,\\r\\n  \\\"slick\\\": 2,\\r\\n  \\\"slicker\\\": 2,\\r\\n  \\\"slickest\\\": 2,\\r\\n  \\\"sluggish\\\": -2,\\r\\n  \\\"slut\\\": -5,\\r\\n  \\\"smart\\\": 1,\\r\\n  \\\"smarter\\\": 2,\\r\\n  \\\"smartest\\\": 2,\\r\\n  \\\"smear\\\": -2,\\r\\n  \\\"smile\\\": 2,\\r\\n  \\\"smiled\\\": 2,\\r\\n  \\\"smiles\\\": 2,\\r\\n  \\\"smiling\\\": 2,\\r\\n  \\\"smog\\\": -2,\\r\\n  \\\"sneaky\\\": -1,\\r\\n  \\\"snub\\\": -2,\\r\\n  \\\"snubbed\\\": -2,\\r\\n  \\\"snubbing\\\": -2,\\r\\n  \\\"snubs\\\": -2,\\r\\n  \\\"sobering\\\": 1,\\r\\n  \\\"solemn\\\": -1,\\r\\n  \\\"solid\\\": 2,\\r\\n  \\\"solidarity\\\": 2,\\r\\n  \\\"solution\\\": 1,\\r\\n  \\\"solutions\\\": 1,\\r\\n  \\\"solve\\\": 1,\\r\\n  \\\"solved\\\": 1,\\r\\n  \\\"solves\\\": 1,\\r\\n  \\\"solving\\\": 1,\\r\\n  \\\"somber\\\": -2,\\r\\n  \\\"some kind\\\": 0,\\r\\n  \\\"son-of-a-bitch\\\": -5,\\r\\n  \\\"soothe\\\": 3,\\r\\n  \\\"soothed\\\": 3,\\r\\n  \\\"soothing\\\": 3,\\r\\n  \\\"sophisticated\\\": 2,\\r\\n  \\\"sore\\\": -1,\\r\\n  \\\"sorrow\\\": -2,\\r\\n  \\\"sorrowful\\\": -2,\\r\\n  \\\"sorry\\\": -1,\\r\\n  \\\"spam\\\": -2,\\r\\n  \\\"spammer\\\": -3,\\r\\n  \\\"spammers\\\": -3,\\r\\n  \\\"spamming\\\": -2,\\r\\n  \\\"spark\\\": 1,\\r\\n  \\\"sparkle\\\": 3,\\r\\n  \\\"sparkles\\\": 3,\\r\\n  \\\"sparkling\\\": 3,\\r\\n  \\\"speculative\\\": -2,\\r\\n  \\\"spirit\\\": 1,\\r\\n  \\\"spirited\\\": 2,\\r\\n  \\\"spiritless\\\": -2,\\r\\n  \\\"spiteful\\\": -2,\\r\\n  \\\"splendid\\\": 3,\\r\\n  \\\"sprightly\\\": 2,\\r\\n  \\\"squelched\\\": -1,\\r\\n  \\\"stab\\\": -2,\\r\\n  \\\"stabbed\\\": -2,\\r\\n  \\\"stable\\\": 2,\\r\\n  \\\"stabs\\\": -2,\\r\\n  \\\"stall\\\": -2,\\r\\n  \\\"stalled\\\": -2,\\r\\n  \\\"stalling\\\": -2,\\r\\n  \\\"stamina\\\": 2,\\r\\n  \\\"stampede\\\": -2,\\r\\n  \\\"startled\\\": -2,\\r\\n  \\\"starve\\\": -2,\\r\\n  \\\"starved\\\": -2,\\r\\n  \\\"starves\\\": -2,\\r\\n  \\\"starving\\\": -2,\\r\\n  \\\"steadfast\\\": 2,\\r\\n  \\\"steal\\\": -2,\\r\\n  \\\"steals\\\": -2,\\r\\n  \\\"stereotype\\\": -2,\\r\\n  \\\"stereotyped\\\": -2,\\r\\n  \\\"stifled\\\": -1,\\r\\n  \\\"stimulate\\\": 1,\\r\\n  \\\"stimulated\\\": 1,\\r\\n  \\\"stimulates\\\": 1,\\r\\n  \\\"stimulating\\\": 2,\\r\\n  \\\"stingy\\\": -2,\\r\\n  \\\"stolen\\\": -2,\\r\\n  \\\"stop\\\": -1,\\r\\n  \\\"stopped\\\": -1,\\r\\n  \\\"stopping\\\": -1,\\r\\n  \\\"stops\\\": -1,\\r\\n  \\\"stout\\\": 2,\\r\\n  \\\"straight\\\": 1,\\r\\n  \\\"strange\\\": -1,\\r\\n  \\\"strangely\\\": -1,\\r\\n  \\\"strangled\\\": -2,\\r\\n  \\\"strength\\\": 2,\\r\\n  \\\"strengthen\\\": 2,\\r\\n  \\\"strengthened\\\": 2,\\r\\n  \\\"strengthening\\\": 2,\\r\\n  \\\"strengthens\\\": 2,\\r\\n  \\\"stressed\\\": -2,\\r\\n  \\\"stressor\\\": -2,\\r\\n  \\\"stressors\\\": -2,\\r\\n  \\\"stricken\\\": -2,\\r\\n  \\\"strike\\\": -1,\\r\\n  \\\"strikers\\\": -2,\\r\\n  \\\"strikes\\\": -1,\\r\\n  \\\"strong\\\": 2,\\r\\n  \\\"stronger\\\": 2,\\r\\n  \\\"strongest\\\": 2,\\r\\n  \\\"struck\\\": -1,\\r\\n  \\\"struggle\\\": -2,\\r\\n  \\\"struggled\\\": -2,\\r\\n  \\\"struggles\\\": -2,\\r\\n  \\\"struggling\\\": -2,\\r\\n  \\\"stubborn\\\": -2,\\r\\n  \\\"stuck\\\": -2,\\r\\n  \\\"stunned\\\": -2,\\r\\n  \\\"stunning\\\": 4,\\r\\n  \\\"stupid\\\": -2,\\r\\n  \\\"stupidly\\\": -2,\\r\\n  \\\"suave\\\": 2,\\r\\n  \\\"substantial\\\": 1,\\r\\n  \\\"substantially\\\": 1,\\r\\n  \\\"subversive\\\": -2,\\r\\n  \\\"success\\\": 2,\\r\\n  \\\"successful\\\": 3,\\r\\n  \\\"suck\\\": -3,\\r\\n  \\\"sucks\\\": -3,\\r\\n  \\\"suffer\\\": -2,\\r\\n  \\\"suffering\\\": -2,\\r\\n  \\\"suffers\\\": -2,\\r\\n  \\\"suicidal\\\": -2,\\r\\n  \\\"suicide\\\": -2,\\r\\n  \\\"suing\\\": -2,\\r\\n  \\\"sulking\\\": -2,\\r\\n  \\\"sulky\\\": -2,\\r\\n  \\\"sullen\\\": -2,\\r\\n  \\\"sunshine\\\": 2,\\r\\n  \\\"super\\\": 3,\\r\\n  \\\"superb\\\": 5,\\r\\n  \\\"superior\\\": 2,\\r\\n  \\\"support\\\": 2,\\r\\n  \\\"supported\\\": 2,\\r\\n  \\\"supporter\\\": 1,\\r\\n  \\\"supporters\\\": 1,\\r\\n  \\\"supporting\\\": 1,\\r\\n  \\\"supportive\\\": 2,\\r\\n  \\\"supports\\\": 2,\\r\\n  \\\"survived\\\": 2,\\r\\n  \\\"surviving\\\": 2,\\r\\n  \\\"survivor\\\": 2,\\r\\n  \\\"suspect\\\": -1,\\r\\n  \\\"suspected\\\": -1,\\r\\n  \\\"suspecting\\\": -1,\\r\\n  \\\"suspects\\\": -1,\\r\\n  \\\"suspend\\\": -1,\\r\\n  \\\"suspended\\\": -1,\\r\\n  \\\"suspicious\\\": -2,\\r\\n  \\\"swear\\\": -2,\\r\\n  \\\"swearing\\\": -2,\\r\\n  \\\"swears\\\": -2,\\r\\n  \\\"sweet\\\": 2,\\r\\n  \\\"swift\\\": 2,\\r\\n  \\\"swiftly\\\": 2,\\r\\n  \\\"swindle\\\": -3,\\r\\n  \\\"swindles\\\": -3,\\r\\n  \\\"swindling\\\": -3,\\r\\n  \\\"sympathetic\\\": 2,\\r\\n  \\\"sympathy\\\": 2,\\r\\n  \\\"torn\\\": -2,\\r\\n  \\\"tard\\\": -2,\\r\\n  \\\"tense\\\": -2,\\r\\n  \\\"tension\\\": -1,\\r\\n  \\\"terrible\\\": -3,\\r\\n  \\\"terribly\\\": -3,\\r\\n  \\\"terrific\\\": 4,\\r\\n  \\\"terrified\\\": -3,\\r\\n  \\\"terror\\\": -3,\\r\\n  \\\"terrorize\\\": -3,\\r\\n  \\\"terrorized\\\": -3,\\r\\n  \\\"terrorizes\\\": -3,\\r\\n  \\\"thank\\\": 2,\\r\\n  \\\"thankful\\\": 2,\\r\\n  \\\"thanks\\\": 2,\\r\\n  \\\"thorny\\\": -2,\\r\\n  \\\"thoughtful\\\": 2,\\r\\n  \\\"thoughtless\\\": -2,\\r\\n  \\\"threat\\\": -2,\\r\\n  \\\"threaten\\\": -2,\\r\\n  \\\"threatened\\\": -2,\\r\\n  \\\"threatening\\\": -2,\\r\\n  \\\"threatens\\\": -2,\\r\\n  \\\"threats\\\": -2,\\r\\n  \\\"thrilled\\\": 5,\\r\\n  \\\"thwart\\\": -2,\\r\\n  \\\"thwarted\\\": -2,\\r\\n  \\\"thwarting\\\": -2,\\r\\n  \\\"thwarts\\\": -2,\\r\\n  \\\"timid\\\": -2,\\r\\n  \\\"timorous\\\": -2,\\r\\n  \\\"tired\\\": -2,\\r\\n  \\\"tits\\\": -2,\\r\\n  \\\"tolerant\\\": 2,\\r\\n  \\\"toothless\\\": -2,\\r\\n  \\\"top\\\": 2,\\r\\n  \\\"tops\\\": 2,\\r\\n  \\\"tender\\\": 2,\\r\\n  \\\"torture\\\": -4,\\r\\n  \\\"tortured\\\": -4,\\r\\n  \\\"tortures\\\": -4,\\r\\n  \\\"torturing\\\": -4,\\r\\n  \\\"totalitarian\\\": -2,\\r\\n  \\\"totalitarianism\\\": -2,\\r\\n  \\\"tout\\\": -2,\\r\\n  \\\"touted\\\": -2,\\r\\n  \\\"touting\\\": -2,\\r\\n  \\\"touts\\\": -2,\\r\\n  \\\"tragedy\\\": -2,\\r\\n  \\\"tragic\\\": -2,\\r\\n  \\\"tranquil\\\": 2,\\r\\n  \\\"trap\\\": -1,\\r\\n  \\\"trapped\\\": -2,\\r\\n  \\\"trauma\\\": -3,\\r\\n  \\\"traumatic\\\": -3,\\r\\n  \\\"travesty\\\": -2,\\r\\n  \\\"treason\\\": -3,\\r\\n  \\\"treasonous\\\": -3,\\r\\n  \\\"treasure\\\": 2,\\r\\n  \\\"treasures\\\": 2,\\r\\n  \\\"trembling\\\": -2,\\r\\n  \\\"tremulous\\\": -2,\\r\\n  \\\"tricked\\\": -2,\\r\\n  \\\"trickery\\\": -2,\\r\\n  \\\"triumph\\\": 4,\\r\\n  \\\"triumphant\\\": 4,\\r\\n  \\\"trouble\\\": -2,\\r\\n  \\\"troubled\\\": -2,\\r\\n  \\\"troubles\\\": -2,\\r\\n  \\\"true\\\": 2,\\r\\n  \\\"trust\\\": 1,\\r\\n  \\\"trusted\\\": 2,\\r\\n  \\\"tumor\\\": -2,\\r\\n  \\\"twat\\\": -5,\\r\\n  \\\"tears\\\": -2,\\r\\n  \\\"ugly\\\": -3,\\r\\n  \\\"unacceptable\\\": -2,\\r\\n  \\\"unappreciated\\\": -2,\\r\\n  \\\"unapproved\\\": -2,\\r\\n  \\\"unaware\\\": -2,\\r\\n  \\\"unbelievable\\\": -1,\\r\\n  \\\"unbelieving\\\": -1,\\r\\n  \\\"unbiased\\\": 2,\\r\\n  \\\"uncertain\\\": -1,\\r\\n  \\\"unclear\\\": -1,\\r\\n  \\\"uncomfortable\\\": -2,\\r\\n  \\\"unconcerned\\\": -2,\\r\\n  \\\"unconfirmed\\\": -1,\\r\\n  \\\"unconvinced\\\": -1,\\r\\n  \\\"uncredited\\\": -1,\\r\\n  \\\"undecided\\\": -1,\\r\\n  \\\"underestimate\\\": -1,\\r\\n  \\\"underestimated\\\": -1,\\r\\n  \\\"underestimates\\\": -1,\\r\\n  \\\"underestimating\\\": -1,\\r\\n  \\\"undermine\\\": -2,\\r\\n  \\\"undermined\\\": -2,\\r\\n  \\\"undermines\\\": -2,\\r\\n  \\\"undermining\\\": -2,\\r\\n  \\\"undeserving\\\": -2,\\r\\n  \\\"undesirable\\\": -2,\\r\\n  \\\"uneasy\\\": -2,\\r\\n  \\\"unemployment\\\": -2,\\r\\n  \\\"unequal\\\": -1,\\r\\n  \\\"unequaled\\\": 2,\\r\\n  \\\"unethical\\\": -2,\\r\\n  \\\"unfair\\\": -2,\\r\\n  \\\"unfocused\\\": -2,\\r\\n  \\\"unfulfilled\\\": -2,\\r\\n  \\\"unhappy\\\": -2,\\r\\n  \\\"unhealthy\\\": -2,\\r\\n  \\\"unified\\\": 1,\\r\\n  \\\"unimpressed\\\": -2,\\r\\n  \\\"unintelligent\\\": -2,\\r\\n  \\\"united\\\": 1,\\r\\n  \\\"unjust\\\": -2,\\r\\n  \\\"unlovable\\\": -2,\\r\\n  \\\"unloved\\\": -2,\\r\\n  \\\"unmatched\\\": 1,\\r\\n  \\\"unmotivated\\\": -2,\\r\\n  \\\"unprofessional\\\": -2,\\r\\n  \\\"unresearched\\\": -2,\\r\\n  \\\"unsatisfied\\\": -2,\\r\\n  \\\"unsecured\\\": -2,\\r\\n  \\\"unsettled\\\": -1,\\r\\n  \\\"unsophisticated\\\": -2,\\r\\n  \\\"unstable\\\": -2,\\r\\n  \\\"unstoppable\\\": 2,\\r\\n  \\\"unsupported\\\": -2,\\r\\n  \\\"unsure\\\": -1,\\r\\n  \\\"untarnished\\\": 2,\\r\\n  \\\"unwanted\\\": -2,\\r\\n  \\\"unworthy\\\": -2,\\r\\n  \\\"upset\\\": -2,\\r\\n  \\\"upsets\\\": -2,\\r\\n  \\\"upsetting\\\": -2,\\r\\n  \\\"uptight\\\": -2,\\r\\n  \\\"urgent\\\": -1,\\r\\n  \\\"useful\\\": 2,\\r\\n  \\\"usefulness\\\": 2,\\r\\n  \\\"useless\\\": -2,\\r\\n  \\\"uselessness\\\": -2,\\r\\n  \\\"vindicates\\\": 2,\\r\\n  \\\"vague\\\": -2,\\r\\n  \\\"validates\\\": 1,\\r\\n  \\\"validating\\\": 1,\\r\\n  \\\"verdict\\\": -1,\\r\\n  \\\"verdicts\\\": -1,\\r\\n  \\\"vested\\\": 1,\\r\\n  \\\"vexation\\\": -2,\\r\\n  \\\"vexing\\\": -2,\\r\\n  \\\"vibrant\\\": 3,\\r\\n  \\\"vicious\\\": -2,\\r\\n  \\\"victim\\\": -3,\\r\\n  \\\"victimize\\\": -3,\\r\\n  \\\"victimized\\\": -3,\\r\\n  \\\"victimizes\\\": -3,\\r\\n  \\\"victimizing\\\": -3,\\r\\n  \\\"victims\\\": -3,\\r\\n  \\\"vigilant\\\": 3,\\r\\n  \\\"vile\\\": -3,\\r\\n  \\\"vindicate\\\": 2,\\r\\n  \\\"vindicated\\\": 2,\\r\\n  \\\"validated\\\": 1,\\r\\n  \\\"vindicating\\\": 2,\\r\\n  \\\"violate\\\": -2,\\r\\n  \\\"violated\\\": -2,\\r\\n  \\\"violates\\\": -2,\\r\\n  \\\"violating\\\": -2,\\r\\n  \\\"violence\\\": -3,\\r\\n  \\\"violent\\\": -3,\\r\\n  \\\"virtuous\\\": 2,\\r\\n  \\\"virulent\\\": -2,\\r\\n  \\\"vision\\\": 1,\\r\\n  \\\"visionary\\\": 3,\\r\\n  \\\"visioning\\\": 1,\\r\\n  \\\"visions\\\": 1,\\r\\n  \\\"vitality\\\": 3,\\r\\n  \\\"vitamin\\\": 1,\\r\\n  \\\"vitriolic\\\": -3,\\r\\n  \\\"vivacious\\\": 3,\\r\\n  \\\"vociferous\\\": -1,\\r\\n  \\\"vulnerability\\\": -2,\\r\\n  \\\"vulnerable\\\": -2,\\r\\n  \\\"validate\\\": 1,\\r\\n  \\\"walkout\\\": -2,\\r\\n  \\\"walkouts\\\": -2,\\r\\n  \\\"wanker\\\": -3,\\r\\n  \\\"want\\\": 1,\\r\\n  \\\"war\\\": -2,\\r\\n  \\\"warfare\\\": -2,\\r\\n  \\\"warm\\\": 1,\\r\\n  \\\"warmth\\\": 2,\\r\\n  \\\"warn\\\": -2,\\r\\n  \\\"warned\\\": -2,\\r\\n  \\\"warning\\\": -3,\\r\\n  \\\"warnings\\\": -3,\\r\\n  \\\"warns\\\": -2,\\r\\n  \\\"waste\\\": -1,\\r\\n  \\\"wasted\\\": -2,\\r\\n  \\\"wasting\\\": -2,\\r\\n  \\\"wavering\\\": -1,\\r\\n  \\\"weak\\\": -2,\\r\\n  \\\"weakness\\\": -2,\\r\\n  \\\"wealth\\\": 3,\\r\\n  \\\"wealthy\\\": 2,\\r\\n  \\\"weary\\\": -2,\\r\\n  \\\"weep\\\": -2,\\r\\n  \\\"weeping\\\": -2,\\r\\n  \\\"weird\\\": -2,\\r\\n  \\\"welcome\\\": 2,\\r\\n  \\\"welcomed\\\": 2,\\r\\n  \\\"welcomes\\\": 2,\\r\\n  \\\"whimsical\\\": 1,\\r\\n  \\\"whitewash\\\": -3,\\r\\n  \\\"whore\\\": -4,\\r\\n  \\\"wicked\\\": -2,\\r\\n  \\\"widowed\\\": -1,\\r\\n  \\\"willingness\\\": 2,\\r\\n  \\\"win\\\": 4,\\r\\n  \\\"winner\\\": 4,\\r\\n  \\\"winning\\\": 4,\\r\\n  \\\"wins\\\": 4,\\r\\n  \\\"winwin\\\": 3,\\r\\n  \\\"wish\\\": 1,\\r\\n  \\\"wishes\\\": 1,\\r\\n  \\\"wishing\\\": 1,\\r\\n  \\\"withdrawal\\\": -3,\\r\\n  \\\"woebegone\\\": -2,\\r\\n  \\\"woeful\\\": -3,\\r\\n  \\\"won\\\": 3,\\r\\n  \\\"wonderful\\\": 4,\\r\\n  \\\"woo\\\": 3,\\r\\n  \\\"woohoo\\\": 3,\\r\\n  \\\"wooo\\\": 4,\\r\\n  \\\"woow\\\": 4,\\r\\n  \\\"worn\\\": -1,\\r\\n  \\\"worried\\\": -3,\\r\\n  \\\"worry\\\": -3,\\r\\n  \\\"worrying\\\": -3,\\r\\n  \\\"worse\\\": -3,\\r\\n  \\\"worsen\\\": -3,\\r\\n  \\\"worsened\\\": -3,\\r\\n  \\\"worsening\\\": -3,\\r\\n  \\\"worsens\\\": -3,\\r\\n  \\\"worshiped\\\": 3,\\r\\n  \\\"worst\\\": -3,\\r\\n  \\\"worth\\\": 2,\\r\\n  \\\"worthless\\\": -2,\\r\\n  \\\"worthy\\\": 2,\\r\\n  \\\"wow\\\": 4,\\r\\n  \\\"wowow\\\": 4,\\r\\n  \\\"wowww\\\": 4,\\r\\n  \\\"wrathful\\\": -3,\\r\\n  \\\"wreck\\\": -2,\\r\\n  \\\"wrong\\\": -2,\\r\\n  \\\"wronged\\\": -2,\\r\\n  \\\"wtf\\\": -4,\\r\\n  \\\"yeah\\\": 1,\\r\\n  \\\"yearning\\\": 1,\\r\\n  \\\"yeees\\\": 2,\\r\\n  \\\"yes\\\": 1,\\r\\n  \\\"youthful\\\": 2,\\r\\n  \\\"yucky\\\": -2,\\r\\n  \\\"yummy\\\": 3,\\r\\n  \\\"zealot\\\": -2,\\r\\n  \\\"zealots\\\": -2,\\r\\n  \\\"zealous\\\": 2\\r\\n}\");\n\t\n\t  doesWordExist = function(word) {\n\t    if (word in afinnWordList) {\n\t      return true;\n\t    } else {\n\t      return false;\n\t    }\n\t  };\n\t\n\t  getScoreOfWord = function(word) {\n\t    if (afinnWordList[word]) {\n\t      return afinnWordList[word];\n\t    } else {\n\t      return 0;\n\t    }\n\t  };\n\t\n\t  getWordsInSentence = function(sentence) {\n\t    sentence = sentence != null ? sentence : '';\n\t    sentence = typeof sentence === 'string' ? sentence : '';\n\t    sentence = sentence.toLowerCase();\n\t    sentence = sentence.replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, '');\n\t    sentence = sentence.replace(/[^\\w\\s]/gi, '');\n\t    sentence = sentence.split(' ');\n\t    sentence = sentence.filter(function(n) {\n\t      return n !== '';\n\t    });\n\t    return sentence = removeDuplicates(sentence);\n\t  };\n\t\n\t  removeDuplicates = function(arr) {\n\t    var i, key, ref, res, results, value;\n\t    if (arr.length === 0) {\n\t      return [];\n\t    }\n\t    res = {};\n\t    for (key = i = 0, ref = arr.length - 1; 0 <= ref ? i <= ref : i >= ref; key = 0 <= ref ? ++i : --i) {\n\t      res[arr[key]] = arr[key];\n\t    }\n\t    results = [];\n\t    for (key in res) {\n\t      value = res[key];\n\t      results.push(value);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  scaleScore = function(score) {\n\t    score = score > 10 ? 10 : score;\n\t    score = score < -10 ? -10 : score;\n\t    return score / 10;\n\t  };\n\t\n\t  analyseSentence = function(sentence) {\n\t    var i, len, score, word, wordsArr;\n\t    score = 0;\n\t    wordsArr = getWordsInSentence(sentence);\n\t    for (i = 0, len = wordsArr.length; i < len; i++) {\n\t      word = wordsArr[i];\n\t      if (doesWordExist(word)) {\n\t        score += getScoreOfWord(word);\n\t      }\n\t    }\n\t    return scaleScore(score);\n\t  };\n\t\n\t  module.exports = analyseSentence;\n\t\n\t  if (false) {\n\t    module.exports = {\n\t      main: analyseSentence,\n\t      _private: {\n\t        scaleScore: scaleScore,\n\t        doesWordExist: doesWordExist,\n\t        getScoreOfWord: getScoreOfWord,\n\t        removeDuplicates: removeDuplicates,\n\t        getWordsInSentence: getWordsInSentence\n\t      }\n\t    };\n\t  }\n\t\n\t}).call(this);\n\t/* (C) Alicia Sykes <alicia@aliciasykes.com> 2015           *\\\r\n\t\\* MIT License. Read full license at: https://goo.gl/IL4lQJ */\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// 56a5aa66506e4d201ec5.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/honeybuns/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 56a5aa66506e4d201ec5","import sentimentAnalysis from 'sentiment-analysis';\nimport nlp from 'compromise';\n\nlet users = {};\nlet userCount = 0;\nlet totalMessages = 0;\n\nfunction update(user, words, emojis, numWords, messageLength, sentiment) {\n    user.totalMessages++;\n    // @TODO uncomment when figure out how to display meaningful word count\n    // Object.keys(words).forEach(word => {\n    //     if (user.words[word]) {\n    //         user.words[word] += words[word];\n    //     } else {\n    //         user.words[word] = words[word];\n    //     }\n    // });\n    Object.keys(emojis).forEach(emoji => {\n        if (user.emojis[emoji]) {\n            user.emojis[emoji] += words[emoji];\n        } else {\n            user.emojis[emoji] = words[emoji];\n        }\n    });\n    user.numWords.push(numWords);\n    user.messageLengths.push(messageLength);\n\n    user.averageNumberWordsInMessage = user.numWords.reduce((memo, num) => memo + num, 0) / user.numWords.length;\n    user.averageMessageLength = user.messageLengths.reduce((memo, num) => memo + num, 0) / user.messageLengths.length;\n\n    if (sentiment !== 0) {\n        user.sentiments.push(sentiment);\n        user.averageSentiment = user.sentiments.reduce((memo, num) => memo + num, 0) *1.0 / user.sentiments.length;\n    }\n\n    return user;\n}\n\nfunction getEmoji(word) {\n    let wordData = nlp(word);\n    if (wordData.match('#Emoji').out() !== \"\") {\n        return wordData.out();\n    }\n    return null\n}\n\nfunction analyze(message) {\n    let colors = ['rgba(255,0,0,0.3)', 'rgba(0,255,0,0.3)', 'rgba(0,0,255,0.3)', 'rgba(192,192,192,0.3)', 'rgba(255,255,0,0.3)', 'rgba(255,0,255,0.3)', 'rgba(100,140,250,0.3)', 'rgba(241,190,255,0.3)', 'rgba(0,0,70,0.3)', 'rgba(255,90,70,0.3)', 'rgba(12,90,12,0.3)'];\n    let words = {};\n    let emojis = {};\n\n    const m = message.message;\n    const name = message.name;\n\n    m.split(\" \").forEach(word => {\n        let emoji = getEmoji(word);\n        if (emoji) {\n            if (emojis[emoji]) {\n                emojis[emoji] += 1;\n            } else {\n                emojis[emoji] = 1;\n            }\n        }\n        let w = word.toLowerCase();\n        if (words[w]) {\n            words[w] += 1;\n        } else {\n            words[w] = 1;\n        }\n    });\n\n    totalMessages++;\n\n    let numWords = m.split(\" \").length;\n    let messageLength = m.length;\n    let sentiment = sentimentAnalysis(m);\n    let sentiments = sentiment ? [sentiment] : [];\n    if (!users[name]) {\n        users[name] = {\n            words: words,\n            emojis: emojis,\n            numWords: [numWords],\n            messageLengths: [messageLength],\n            sentiments: sentiments,\n            averageNumberWordsInMessage: numWords,\n            averageMessageLength: messageLength,\n            userColor: colors[userCount],\n            averageSentiment: sentiment,\n            totalMessages: 1\n        };\n        userCount += 1;\n        if (userCount > colors.length-1) {\n            userCount = 0\n        }\n    } else {\n        update(users[name], words, emojis, numWords, messageLength, sentiment);\n    }\n}\n\nonmessage = (e) => { // eslint-disable-line no-undef\n    console.log(\"Analyzer Worker starting: \");\n\n    const messages = JSON.parse(e.data.value);\n\n    messages.forEach((message) => {\n        analyze(message);\n    });\n    postMessage({type: \"done\", value: {\n        users: JSON.stringify(users),\n        totalMessages\n    }});\n};\n\n\n// WEBPACK FOOTER //\n// ./src/analyze.worker.js","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.nlp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nmodule.exports={\n  \"author\": \"Spencer Kelly <spencermountain@gmail.com> (http://spencermounta.in)\",\n  \"name\": \"compromise\",\n  \"description\": \"natural language processing in the browser\",\n  \"version\": \"8.0.2\",\n  \"main\": \"./builds/compromise.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/nlp-compromise/compromise.git\"\n  },\n  \"scripts\": {\n    \"test\": \"node ./scripts/test.js\",\n    \"browsertest\": \"node ./scripts/browserTest.js\",\n    \"build\": \"node ./scripts/build.js\",\n    \"demo\": \"node ./scripts/demo.js\",\n    \"watch\": \"node ./scripts/watch.js\",\n    \"filesize\": \"node ./scripts/filesize.js\",\n    \"coverage\": \"node ./scripts/coverage.js\"\n  },\n  \"files\": [\n    \"builds/\",\n    \"docs/\"\n  ],\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel-plugin-transform-es3-member-expression-literals\": \"^6.22.0\",\n    \"babel-plugin-transform-es3-property-literals\": \"^6.22.0\",\n    \"babel-preset-es2015\": \"6.9.0\",\n    \"babel-preset-stage-2\": \"^6.11.0\",\n    \"babelify\": \"7.3.0\",\n    \"babili\": \"0.0.11\",\n    \"browserify\": \"13.0.1\",\n    \"browserify-glob\": \"^0.2.0\",\n    \"chalk\": \"^1.1.3\",\n    \"codacy-coverage\": \"^2.0.0\",\n    \"derequire\": \"^2.0.3\",\n    \"efrt\": \"0.0.2\",\n    \"eslint\": \"^3.1.1\",\n    \"gaze\": \"^1.1.1\",\n    \"http-server\": \"0.9.0\",\n    \"nlp-corpus\": \"latest\",\n    \"nyc\": \"^8.4.0\",\n    \"shelljs\": \"^0.7.2\",\n    \"tap-min\": \"^1.1.0\",\n    \"tap-spec\": \"4.1.1\",\n    \"tape\": \"4.6.0\",\n    \"uglify-js\": \"2.7.0\"\n  },\n  \"license\": \"MIT\"\n}\n\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../fns');\n\nvar compressed = {\n  erate: 'degen,delib,desp,lit,mod',\n  icial: 'artif,benef,off,superf',\n  ntial: 'esse,influe,pote,substa',\n  teful: 'gra,ha,tas,was',\n  stant: 'con,di,in,resi',\n  hing: 'astonis,das,far-reac,refres,scat,screec,self-loat,soot',\n  eful: 'car,grac,peac,sham,us,veng',\n  ming: 'alar,cal,glea,unassu,unbeco,upco',\n  cial: 'commer,cru,finan,ra,so,spe',\n  ure: 'insec,miniat,obsc,premat,sec,s',\n  uent: 'congr,fl,freq,subseq',\n  rate: 'accu,elabo,i,sepa',\n  ific: 'horr,scient,spec,terr',\n  rary: 'arbit,contempo,cont,tempo',\n  ntic: 'authe,fra,giga,roma',\n  nant: 'domi,malig,preg,reso',\n  nent: 'emi,immi,perma,promi',\n  iant: 'brill,def,g,luxur',\n  ging: 'dama,encoura,han,lon',\n  iate: 'appropr,immed,inappropr,intermed',\n  rect: 'cor,e,incor,indi',\n  zing: 'agoni,ama,appeti,free',\n  ine: 'div,femin,genu,mascul,prist,rout',\n  ute: 'absol,ac,c,m,resol',\n  ern: 'east,north,south,st,west',\n  tful: 'deligh,doub,fre,righ,though,wis',\n  ant: 'abund,arrog,eleg,extravag,exult,hesit,irrelev,miscre,nonchal,obeis,observ,pl,pleas,redund,relev,reluct,signific,vac,verd',\n  ing: 'absorb,car,coo,liv,lov,ly,menac,perplex,shock,stand,surpris,tell,unappeal,unconvinc,unend,unsuspect,vex,want',\n  ate: 'adequ,delic,fortun,inadequ,inn,intim,legitim,priv,sed,ultim'\n};\nvar arr = ['absurd', 'aggressive', 'alert', 'alive', 'angry', 'attractive', 'awesome', 'beautiful', 'big', 'bitter', 'black', 'blue', 'bored', 'boring', 'brash', 'brave', 'brief', 'brown', 'calm', 'charming', 'cheap', 'check', 'clean', 'clear', 'close', 'cold', 'cool', 'cruel', 'curly', 'cute', 'dangerous', 'dear', 'dirty', 'drunk', 'dry', 'dull', 'eager', 'early', 'easy', 'efficient', 'empty', 'even', 'extreme', 'faint', 'fair', 'fanc', 'feeble', 'few', 'fierce', 'fine', 'firm', 'forgetful', 'formal', 'frail', 'free', 'full', 'funny', 'gentle', 'glad', 'glib', 'glad', 'grand', 'green', 'gruesome', 'handsome', 'happy', 'harsh', 'heavy', 'high', 'hollow', 'hot', 'hungry', 'impolite', 'important', 'innocent', 'intellegent', 'interesting', 'keen', 'kind', 'lame', 'large', 'late', 'lean', 'little', 'long', 'loud', 'low', 'lucky', 'lush', 'macho', 'mature', 'mean', 'meek', 'mellow', 'mundane', 'narrow', 'near', 'neat', 'new', 'nice', 'noisy', 'normal', 'odd', 'old', 'orange', 'pale', 'pink', 'plain', 'poor', 'proud', 'pure', 'purple', 'rapid', 'rare', 'raw', 'rich', 'rotten', 'round', 'rude', 'safe', 'scarce', 'scared', 'shallow', 'shrill', 'simple', 'slim', 'slow', 'small', 'smooth', 'solid', 'soon', 'sore', 'sour', 'square', 'stale', 'steep', 'strange', 'strict', 'strong', 'swift', 'tall', 'tame', 'tart', 'tender', 'tense', 'thin', 'thirsty', 'tired', 'true', 'vague', 'vast', 'vulgar', 'warm', 'weird', 'wet', 'wild', 'windy', 'wise', 'yellow', 'young'];\n\nmodule.exports = fns.uncompress_suffixes(arr, compressed);\n// console.log(JSON.stringify(module.exports.sort(), null, 2));\n\n},{\"../fns\":5}],3:[function(_dereq_,module,exports){\n'use strict';\n\n//adjectives that become verbs with +'en' (short->shorten)\n\n//ones that also become superlative/comparative (short -> shortest)\nmodule.exports = ['bright', 'broad', 'coarse', 'damp', 'dark', 'dead', 'deaf', 'deep', 'fast', 'fat', 'flat', 'fresh', 'great', 'hard', 'light', 'loose', 'mad', 'moist', 'quick', 'quiet', 'red', 'ripe', 'rough', 'sad', 'sharp', 'short', 'sick', 'smart', 'soft', 'stiff', 'straight', 'sweet', 'thick', 'tight', 'tough', 'weak', 'white', 'wide'];\n\n},{}],4:[function(_dereq_,module,exports){\n'use strict';\n//terms that are 'Date' term\n\nvar months = ['january', 'february',\n// \"march\",  //ambig\n'april',\n// \"may\",   //ambig\n'june', 'july', 'august', 'september', 'october', 'november', 'december', 'jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec', 'sept', 'sep'];\n\nvar days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'];\n//add plural eg.'mondays'\nfor (var i = 0; i <= 6; i++) {\n  days.push(days[i] + 's');\n}\n\nvar durations = ['millisecond',\n// 'second',\n'minute', 'hour', 'day', 'week', 'month', 'year', 'decade'];\n//add their plurals\nvar len = durations.length;\nfor (var _i = 0; _i < len; _i++) {\n  durations.push(durations[_i]);\n  durations.push(durations[_i] + 's');\n}\ndurations.push('century');\ndurations.push('centuries');\ndurations.push('seconds');\n\nvar relative = ['yesterday', 'today', 'tomorrow',\n// 'week',\n'weekend', 'tonight'];\n\nmodule.exports = {\n  days: days,\n  months: months,\n  durations: durations,\n  relative: relative\n};\n\n},{}],5:[function(_dereq_,module,exports){\n'use strict';\n\n//shallow-merge an object\n\nexports.extendObj = function (o, o2) {\n  Object.keys(o2).forEach(function (k) {\n    o[k] = o2[k];\n  });\n  return o;\n};\n\n//uncompress data in the adhoc compressed form {'ly':'kind,quick'}\nexports.uncompress_suffixes = function (list, obj) {\n  var keys = Object.keys(obj);\n  var l = keys.length;\n  for (var i = 0; i < l; i++) {\n    var arr = obj[keys[i]].split(',');\n    for (var i2 = 0; i2 < arr.length; i2++) {\n      list.push(arr[i2] + keys[i]);\n    }\n  }\n  return list;\n};\n\n//uncompress data in the adhoc compressed form {'over':'blown,kill'}\nexports.uncompress_prefixes = function (list, obj) {\n  var keys = Object.keys(obj);\n  var l = keys.length;\n  for (var i = 0; i < l; i++) {\n    var arr = obj[keys[i]].split(',');\n    for (var i2 = 0; i2 < arr.length; i2++) {\n      list.push(keys[i] + arr[i2]);\n    }\n  }\n  return list;\n};\n\n},{}],6:[function(_dereq_,module,exports){\n'use strict';\n//the data is all variously compressed and sorted\n//this is just a helper file for the main file paths..\n\nmodule.exports = {\n  'notable_people': _dereq_('./people/notable'),\n  'titles': _dereq_('./people/titles'),\n\n  'currencies': _dereq_('./values/currencies'),\n  'numbers': _dereq_('./values/numbers'),\n  'ordinalMap': _dereq_('./values/ordinalMap'),\n  'units': _dereq_('./values/units'),\n  'dates': _dereq_('./dates/dates'),\n\n  'abbreviations': _dereq_('./nouns/abbreviations'),\n  'irregular_plurals': _dereq_('./nouns/irregular_plurals'),\n  // 'nouns': require('./nouns/nouns'),\n\n  'superlatives': _dereq_('./adjectives/superlatives'),\n  'verbConverts': _dereq_('./adjectives/verbConverts'),\n\n  'irregular_verbs': _dereq_('./verbs/irregular_verbs'),\n  'verbs': _dereq_('./verbs/verbs'),\n\n  'misc': _dereq_('./misc/misc')\n};\n\n},{\"./adjectives/superlatives\":2,\"./adjectives/verbConverts\":3,\"./dates/dates\":4,\"./misc/misc\":9,\"./nouns/abbreviations\":10,\"./nouns/irregular_plurals\":11,\"./people/notable\":12,\"./people/titles\":13,\"./values/currencies\":14,\"./values/numbers\":15,\"./values/ordinalMap\":16,\"./values/units\":17,\"./verbs/irregular_verbs\":18,\"./verbs/verbs\":20}],7:[function(_dereq_,module,exports){\n'use strict';\n//a lexicon is a giant object of known words and their assumed pos-tag.\n//the way we make it rn is a bit of a mess.\n\nvar data = _dereq_('./index');\nvar fns = _dereq_('./fns');\nvar adj = _dereq_('../result/subset/adjectives/methods/index');\nvar toAdjective = _dereq_('../result/subset/verbs/methods/toAdjective');\nvar fastConjugate = _dereq_('../result/subset/verbs/methods/conjugate/faster');\nvar lexicon = {};\n// console.time('lexicon');\n\nvar addObj = function addObj(o) {\n  fns.extendObj(lexicon, o);\n};\nvar addArr = function addArr(arr, tag) {\n  var l = arr.length;\n  for (var i = 0; i < l; i++) {\n    lexicon[arr[i]] = tag;\n  }\n};\n\n//let a rip\n// addArr(data.uncountables, 'Noun');\nvar units = data.units.words.filter(function (s) {\n  return s.length > 1;\n});\naddArr(units, 'Unit');\naddArr(data.dates.durations, 'Duration');\n\naddObj(data.abbreviations);\n//number-words are well-structured\nvar obj = data.numbers.ordinal;\naddArr(Object.keys(obj.ones), 'Ordinal');\naddArr(Object.keys(obj.teens), 'Ordinal');\naddArr(Object.keys(obj.tens), 'Ordinal');\naddArr(Object.keys(obj.multiples), 'Ordinal');\nobj = data.numbers.cardinal;\naddArr(Object.keys(obj.ones), 'Cardinal');\naddArr(Object.keys(obj.teens), 'Cardinal');\naddArr(Object.keys(obj.tens), 'Cardinal');\naddArr(Object.keys(obj.multiples), 'Cardinal');\naddArr(Object.keys(data.numbers.prefixes), 'Cardinal');\n//singular/plural\naddArr(Object.keys(data.irregular_plurals.toPlural), 'Singular');\naddArr(Object.keys(data.irregular_plurals.toSingle), 'Plural');\n\n//dates are well-structured\naddArr(data.dates.days, 'WeekDay');\naddArr(data.dates.months, 'Month');\naddArr(data.dates.relative, 'RelativeDay');\n// addArr(data.holidays, 'Holiday');\n\n// addArr(data.professions, 'Actor'); //?\n// addArr(data.demonyms, 'Demonym');\n// addArr(data.sportsTeams, 'SportsTeam');\n// addArr(data.bands, 'Organization');\n// addArr(data.orgWords, 'Noun');\n\n//irregular verbs\nObject.keys(data.irregular_verbs).forEach(function (inf) {\n  lexicon[inf] = 'Infinitive';\n  var conj = data.irregular_verbs[inf];\n  Object.keys(conj).forEach(function (k2) {\n    if (conj[k2]) {\n      lexicon[conj[k2]] = k2;\n    }\n  });\n  var o = fastConjugate(inf);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n});\n\n//conjugate verblist\ndata.verbs.forEach(function (v) {\n  var o = fastConjugate(v);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n  lexicon[toAdjective(v)] = 'Adjective';\n});\n\n//conjugate adjectives\ndata.superlatives.forEach(function (a) {\n  lexicon[adj.toNoun(a)] = 'Noun';\n  lexicon[adj.toAdverb(a)] = 'Adverb';\n  lexicon[adj.toSuperlative(a)] = 'Superlative';\n  lexicon[adj.toComparative(a)] = 'Comparative';\n});\n\n//even more expressive adjectives\ndata.verbConverts.forEach(function (a) {\n  lexicon[adj.toNoun(a)] = 'Noun';\n  lexicon[adj.toAdverb(a)] = 'Adverb';\n  lexicon[adj.toSuperlative(a)] = 'Superlative';\n  lexicon[adj.toComparative(a)] = 'Comparative';\n\n  var v = adj.toVerb(a);\n  lexicon[v] = 'Verb';\n  //now conjugate it\n  var o = fastConjugate(v);\n  Object.keys(o).forEach(function (k) {\n    if (o[k] && !lexicon[o[k]]) {\n      lexicon[o[k]] = k;\n    }\n  });\n});\n\n//inflect nouns\n// data.nouns.forEach((n) => {\n//   lexicon[n] = 'Singular';\n//   let plural = toPlural(n);\n//   lexicon[plural] = 'Plural';\n// });\n\n//let a rip.\n// addObj(data.firstnames);\naddArr(data.notable_people.female, 'FemaleName');\naddArr(data.notable_people.male, 'MaleName');\naddArr(data.titles, 'Singular');\n// addArr(data.lastnames, 'LastName');\n// addArr(data.places.airports, 'Place');\n// addArr(data.places.cities, 'City');\n// addArr(data.places.countries, 'Country');\n// addArr(data.organizations, 'Organization');\n// addArr(data.adjectives, 'Adjective');\naddArr(data.verbConverts, 'Adjective');\naddArr(data.superlatives, 'Adjective');\naddArr(data.currencies, 'Currency');\n//these ad-hoc manual ones have priority\naddObj(data.misc);\n\n//for safety (these are sneaky)\ndelete lexicon[''];\ndelete lexicon[' '];\ndelete lexicon[null];\nmodule.exports = lexicon;\n\n// console.log(lexicon['ugh']);\n// console.log(fastConjugate('make'));\n// let t = new Term('shake');\n// t.tag.Verb = true;\n// console.timeEnd('lexicon');\n// console.log(Object.keys(lexicon).length);\n\n},{\"../result/subset/adjectives/methods/index\":41,\"../result/subset/verbs/methods/conjugate/faster\":114,\"../result/subset/verbs/methods/toAdjective\":125,\"./fns\":5,\"./index\":6}],8:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = ['this', 'any', 'enough', 'each', 'whatever', 'every', 'these', 'another', 'plenty', 'whichever', 'neither', 'an', 'a', 'least', 'own', 'few', 'both', 'those', 'the', 'that', 'various', 'either', 'much', 'some', 'else',\n//some other languages (what could go wrong?)\n'la', 'le', 'les', 'des', 'de', 'du', 'el'];\n\n},{}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar misc = {\n  'here': 'Noun',\n  'better': 'Comparative',\n  'earlier': 'Superlative',\n  'make sure': 'Verb',\n  'keep tabs': 'Verb',\n  'gonna': 'Verb',\n  'cannot': 'Verb',\n  'has': 'Verb',\n  'sounds': 'PresentTense',\n  //special case for took/taken\n  'taken': 'PastTense',\n  'msg': 'Verb', //slang\n  'a few': 'Value', //different than 'few people'\n  'years old': 'Unit', //special case\n  'not': 'Negative',\n  'non': 'Negative',\n  'never': 'Negative',\n  'no': 'Negative',\n  'no doubt': 'Noun',\n  'not only': 'Adverb',\n  'how\\'s': 'QuestionWord' //not conjunction\n};\n\nvar compact = {\n  Organization: ['20th century fox', '3m', '7-eleven', 'g8', 'motel 6', 'vh1'],\n  Adjective: ['so called', //?\n  'on board', 'vice versa', 'en route', 'upside down', 'up front', 'in front', 'in situ', 'in vitro', 'ad hoc', 'de facto', 'ad infinitum', 'for keeps', 'a priori', 'off guard', 'spot on', 'ipso facto', 'fed up', 'brand new', 'old fashioned', 'bona fide', 'well off', 'far off', 'straight forward', 'hard up', 'sui generis', 'en suite', 'avant garde', 'sans serif', 'gung ho', 'super duper', 'bourgeois'],\n\n  Verb: ['lengthen', 'heighten', 'worsen', 'lessen', 'awaken', 'frighten', 'threaten', 'hasten', 'strengthen', 'given',\n  //misc\n  'known', 'shown', 'seen', 'born'],\n\n  Place: ['new england', 'new hampshire', 'new jersey', 'new mexico', 'united states', 'united kingdom', 'great britain', 'great lakes', 'pacific ocean', 'atlantic ocean', 'indian ocean', 'arctic ocean', 'antarctic ocean', 'everglades'],\n  //conjunctions\n  'Conjunction': ['yet', 'therefore', 'or', 'while', 'nor', 'whether', 'though', 'tho', 'because', 'cuz', 'but', 'for', 'and', 'however', 'before', 'although', 'how', 'plus', 'versus', 'otherwise'],\n  Time: [\n  //date\n  'noon', 'midnight', 'now', 'morning', 'evening', 'afternoon', 'night', 'breakfast time', 'lunchtime', 'dinnertime', 'ago', 'sometime', 'eod', 'oclock'],\n  Date: [\n  //end of day, end of month\n  'eom', 'standard time', 'daylight time'],\n  'Condition': ['if', 'unless', 'notwithstanding'],\n\n  'PastTense': ['said', 'had', 'been', 'began', 'came', 'did', 'meant', 'went'],\n\n  'Gerund': ['going', 'being', 'according', 'resulting', 'developing', 'staining'],\n\n  'Copula': ['is', 'are', 'was', 'were', 'am'],\n\n  //determiners\n  'Determiner': _dereq_('./determiners'),\n\n  //modal verbs\n  'Modal': ['can', 'may', 'could', 'might', 'will', 'ought to', 'would', 'must', 'shall', 'should', 'ought', 'shant', 'lets'],\n\n  //Possessive pronouns\n  'Possessive': ['mine', 'something', 'none', 'anything', 'anyone', 'theirs', 'himself', 'ours', 'his', 'my', 'their', 'yours', 'your', 'our', 'its', 'herself', 'hers', 'themselves', 'myself', 'her'],\n\n  //personal pronouns (nouns)\n  'Pronoun': ['it', 'they', 'i', 'them', 'you', 'she', 'me', 'he', 'him', 'ourselves', 'us', 'we', 'thou', 'il', 'elle', 'yourself', '\\'em', 'he\\'s', 'she\\'s'],\n  //questions are awkward pos. are clarified in question_pass\n  'QuestionWord': ['where', 'why', 'when', 'who', 'whom', 'whose', 'what', 'which'],\n\n  //family-terms are people\n  Person: ['father', 'mother', 'mom', 'dad', 'mommy', 'daddy', 'sister', 'brother', 'aunt', 'uncle', 'grandfather', 'grandmother', 'cousin', 'stepfather', 'stepmother', 'boy', 'girl', 'man', 'woman', 'guy', 'dude', 'bro', 'gentleman', 'someone']\n};\n//unpack the compact terms into the misc lexicon..\nvar keys = Object.keys(compact);\nfor (var i = 0; i < keys.length; i++) {\n  var arr = compact[keys[i]];\n  for (var i2 = 0; i2 < arr.length; i2++) {\n    misc[arr[i2]] = keys[i];\n  }\n}\nmodule.exports = misc;\n\n},{\"./determiners\":8}],10:[function(_dereq_,module,exports){\n//these are common word shortenings used in the lexicon and sentence segmentation methods\n//there are all nouns,or at the least, belong beside one.\n'use strict';\n\n//common abbreviations\n\nvar compact = {\n  Noun: ['arc', 'al', 'exp', 'fy', 'pd', 'pl', 'plz', 'tce', 'bl', 'ma', 'ba', 'lit', 'ex', 'eg', 'ie', 'ca', 'cca', 'vs', 'etc', 'esp', 'ft',\n  //these are too ambiguous\n  'bc', 'ad', 'md', 'corp', 'col'],\n  Organization: ['dept', 'univ', 'assn', 'bros', 'inc', 'ltd', 'co',\n  //proper nouns with exclamation marks\n  'yahoo', 'joomla', 'jeopardy'],\n\n  Place: ['rd', 'st', 'dist', 'mt', 'ave', 'blvd', 'cl', 'ct', 'cres', 'hwy',\n  //states\n  'ariz', 'cal', 'calif', 'colo', 'conn', 'fla', 'fl', 'ga', 'ida', 'ia', 'kan', 'kans', 'minn', 'neb', 'nebr', 'okla', 'penna', 'penn', 'pa', 'dak', 'tenn', 'tex', 'ut', 'vt', 'va', 'wis', 'wisc', 'wy', 'wyo', 'usafa', 'alta', 'ont', 'que', 'sask'],\n\n  Date: ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'sept', 'oct', 'nov', 'dec', 'circa'],\n\n  //Honorifics\n  Honorific: ['adj', 'adm', 'adv', 'asst', 'atty', 'bldg', 'brig', 'capt', 'cmdr', 'comdr', 'cpl', 'det', 'dr', 'esq', 'gen', 'gov', 'hon', 'jr', 'llb', 'lt', 'maj', 'messrs', 'mister', 'mlle', 'mme', 'mr', 'mrs', 'ms', 'mstr', 'op', 'ord', 'phd', 'prof', 'pvt', 'rep', 'reps', 'res', 'rev', 'sen', 'sens', 'sfc', 'sgt', 'sir', 'sr', 'supt', 'surg'\n  //miss\n  //misses\n  ]\n\n};\n\n//unpack the compact terms into the misc lexicon..\nvar abbreviations = {};\nvar keys = Object.keys(compact);\nfor (var i = 0; i < keys.length; i++) {\n  var arr = compact[keys[i]];\n  for (var i2 = 0; i2 < arr.length; i2++) {\n    abbreviations[arr[i2]] = keys[i];\n  }\n}\nmodule.exports = abbreviations;\n\n},{}],11:[function(_dereq_,module,exports){\n//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\n//compressed with '_' to reduce some redundancy.\n'use strict';\n\nvar main = [['child', '_ren'], ['person', 'people'], ['leaf', 'leaves'], ['database', '_s'], ['quiz', '_zes'], ['stomach', '_s'], ['sex', '_es'], ['move', '_s'], ['shoe', '_s'], ['goose', 'geese'], ['phenomenon', 'phenomena'], ['barracks', '_'], ['deer', '_'], ['syllabus', 'syllabi'], ['index', 'indices'], ['appendix', 'appendices'], ['criterion', 'criteria'], ['man', 'men'], ['rodeo', '_s'], ['epoch', '_s'], ['zero', '_s'], ['avocado', '_s'], ['halo', '_s'], ['tornado', '_s'], ['tuxedo', '_s'], ['sombrero', '_s'], ['addendum', 'addenda'], ['alga', '_e'], ['alumna', '_e'], ['alumnus', 'alumni'], ['bacillus', 'bacilli'], ['cactus', 'cacti'], ['beau', '_x'], ['château', '_x'], ['chateau', '_x'], ['tableau', '_x'], ['corpus', 'corpora'], ['curriculum', 'curricula'], ['echo', '_es'], ['embargo', '_es'], ['foot', 'feet'], ['genus', 'genera'], ['hippopotamus', 'hippopotami'], ['larva', '_e'], ['libretto', 'libretti'], ['loaf', 'loaves'], ['matrix', 'matrices'], ['memorandum', 'memoranda'], ['mosquito', '_es'], ['opus', 'opera'], ['ovum', 'ova'], ['ox', '_en'], ['radius', 'radii'], ['referendum', 'referenda'], ['thief', 'thieves'], ['tooth', 'teeth']];\n//decompress it\nmain = main.map(function (a) {\n  a[1] = a[1].replace('_', a[0]);\n  return a;\n});\n//build-out two mappings\nvar toSingle = main.reduce(function (h, a) {\n  h[a[1]] = a[0];\n  return h;\n}, {});\nvar toPlural = main.reduce(function (h, a) {\n  h[a[0]] = a[1];\n  return h;\n}, {});\n\nmodule.exports = {\n  toSingle: toSingle,\n  toPlural: toPlural\n};\n\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\n\n//notable people with names that aren't caught by the ordinary person-name rules\nexports.male = ['messiaen', 'saddam hussain', 'virgin mary', 'van gogh', 'mitt romney', 'barack obama', 'kanye west', 'mubarek', 'lebron james', 'emeril lagasse', 'rush limbaugh', 'carson palmer', 'ray romano', 'ronaldinho', 'valentino rossi', 'rod stewart', 'kiefer sutherland', 'denzel washington', 'dick wolf', 'tiger woods', 'adolf hitler', 'hulk hogan', 'ashton kutcher', 'kobe bryant', 'cardinal wolsey', 'slobodan milosevic'];\n\nexports.female = ['jk rowling', 'oprah winfrey', 'reese witherspoon', 'tyra banks', 'halle berry', 'paris hilton', 'scarlett johansson'];\n\n},{}],13:[function(_dereq_,module,exports){\n'use strict';\n\n//extend to person-names if infront of a name - 'Professor Frink'\nmodule.exports = ['lord', 'lady', 'king', 'queen', 'prince', 'princess', 'dutchess', 'president', 'excellency', 'professor', 'chancellor', 'father', 'pastor', 'brother', 'sister', 'doctor', 'captain', 'commander', 'general', 'lieutenant', 'reverend', 'rabbi', 'ayatullah', 'councillor', 'secretary', 'sultan', 'mayor', 'congressman', 'congresswoman'];\n\n},{}],14:[function(_dereq_,module,exports){\n'use strict';\n//some most-common iso-codes (most are too ambiguous)\n\nvar shortForms = ['usd', 'cad', 'aud', 'gbp', 'krw', 'inr', 'hkd', 'dkk', 'cny', 'xaf', 'xof', 'eur', 'jpy',\n//currency symbols\n'€', '$', '¥', '£', 'лв', '₡', 'kn', 'kr', '¢', 'Ft', 'Rp', '﷼', '₭', 'ден', '₨', 'zł', 'lei', 'руб', '฿'];\n\n//some common, unambiguous currency names\nvar longForms = ['denar', 'dobra', 'forint', 'kwanza', 'kyat', 'lempira', 'pound sterling', 'riel', 'yen', 'zloty',\n//colloquial currency names\n'dollar', 'cent', 'penny', 'dime', 'dinar', 'euro', 'lira', 'pound', 'pence', 'peso', 'baht', 'sterling', 'rouble', 'shekel', 'sheqel', 'yuan', 'franc', 'rupee', 'shilling', 'krona', 'dirham', 'bitcoin'];\nvar irregularPlurals = {\n  yen: 'yen',\n  baht: 'baht',\n  riel: 'riel',\n  penny: 'pennies'\n};\n\n//add plural forms - 'euros'\nvar l = longForms.length;\nfor (var i = 0; i < l; i++) {\n  if (irregularPlurals[longForms[i]]) {\n    longForms.push(irregularPlurals[longForms[i]]);\n  } else {\n    longForms.push(longForms[i] + 's');\n  }\n}\n\nmodule.exports = shortForms.concat(longForms);\n\n},{}],15:[function(_dereq_,module,exports){\n'use strict';\n\nvar cardinal = {\n  ones: {\n    // 'a': 1,\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  },\n  teens: {\n    'ten': 10,\n    'eleven': 11,\n    'twelve': 12,\n    'thirteen': 13,\n    'fourteen': 14,\n    'fifteen': 15,\n    'sixteen': 16,\n    'seventeen': 17,\n    'eighteen': 18,\n    'nineteen': 19\n  },\n  tens: {\n    'twenty': 20,\n    'thirty': 30,\n    'forty': 40,\n    'fifty': 50,\n    'sixty': 60,\n    'seventy': 70,\n    'eighty': 80,\n    'ninety': 90\n  },\n  multiples: {\n    'hundred': 1e2,\n    'thousand': 1e3,\n    'grand': 1e3,\n    'million': 1e6,\n    'billion': 1e9,\n    'trillion': 1e12,\n    'quadrillion': 1e15,\n    'quintillion': 1e18,\n    'sextillion': 1e21,\n    'septillion': 1e24\n  }\n};\n\nvar ordinal = {\n  ones: {\n    'zeroth': 0,\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9\n  },\n  teens: {\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19\n  },\n  tens: {\n    'twentieth': 20,\n    'thirtieth': 30,\n    'fourtieth': 40,\n    'fiftieth': 50,\n    'sixtieth': 60,\n    'seventieth': 70,\n    'eightieth': 80,\n    'ninetieth': 90\n  },\n  multiples: {\n    'hundredth': 1e2,\n    'thousandth': 1e3,\n    'millionth': 1e6,\n    'billionth': 1e9,\n    'trillionth': 1e12,\n    'quadrillionth': 1e15,\n    'quintillionth': 1e18,\n    'sextillionth': 1e21,\n    'septillionth': 1e24\n  }\n};\n\n//used for the units\nvar prefixes = {\n  'yotta': 1,\n  'zetta': 1,\n  'exa': 1,\n  'peta': 1,\n  'tera': 1,\n  'giga': 1,\n  'mega': 1,\n  'kilo': 1,\n  'hecto': 1,\n  'deka': 1,\n  'deci': 1,\n  'centi': 1,\n  'milli': 1,\n  'micro': 1,\n  'nano': 1,\n  'pico': 1,\n  'femto': 1,\n  'atto': 1,\n  'zepto': 1,\n  'yocto': 1,\n\n  'square': 1,\n  'cubic': 1,\n  'quartic': 1\n};\n\nmodule.exports = {\n  cardinal: cardinal,\n  ordinal: ordinal,\n  prefixes: prefixes\n};\n\n},{}],16:[function(_dereq_,module,exports){\n'use strict';\n//create an easy mapping between ordinal-cardinal\n\nvar numbers = _dereq_('./numbers');\nvar toOrdinal = {};\nvar toCardinal = {};\nObject.keys(numbers.ordinal).forEach(function (k) {\n  var ordinal = Object.keys(numbers.ordinal[k]);\n  var cardinal = Object.keys(numbers.cardinal[k]);\n  for (var i = 0; i < ordinal.length; i++) {\n    toOrdinal[cardinal[i]] = ordinal[i];\n    toCardinal[ordinal[i]] = cardinal[i];\n  }\n});\nmodule.exports = {\n  toOrdinal: toOrdinal,\n  toCardinal: toCardinal\n};\n\n},{\"./numbers\":15}],17:[function(_dereq_,module,exports){\n'use strict';\n\nvar units = {\n  'Temperature': {\n    '°c': 'Celsius',\n    '°f': 'Fahrenheit',\n    'k': 'Kelvin',\n    '°re': 'Reaumur',\n    '°n': 'Newton',\n    '°ra': 'Rankine'\n  },\n  'Volume': {\n    'm³': 'cubic meter',\n    'm3': 'cubic meter',\n    'dm³': 'cubic decimeter',\n    'dm3': 'cubic decimeter',\n    'cm³': 'cubic centimeter',\n    'cm3': 'cubic centimeter',\n    'l': 'liter',\n    'dl': 'deciliter',\n    'cl': 'centiliter',\n    'ml': 'milliliter',\n    'in³': 'cubic inch',\n    'in3': 'cubic inch',\n    'ft³': 'cubic foot',\n    'ft3': 'cubic foot',\n    'yd³': 'cubic yard',\n    'yd3': 'cubic yard',\n    'gal': 'gallon',\n    'bbl': 'petroleum barrel',\n    'pt': 'pint',\n    'qt': 'quart',\n    'tbl': 'tablespoon',\n    'tsp': 'teaspoon',\n    'tbsp': 'tablespoon',\n    'cup': 'cup',\n    'fl oz': 'fluid ounce'\n  },\n  'Distance': {\n    'km': 'kilometer',\n    'm': 'meter',\n    'dm': 'decimeter',\n    'cm': 'centimeter',\n    'mm': 'millimeter',\n    'mi': 'mile',\n    // 'in': 'inch',\n    'ft': 'foot',\n    'yd': 'yard'\n  },\n  'Weight': {\n    't': 'tonne',\n    'kg': 'kilogram',\n    'hg': 'hectogram',\n    'g': 'gram',\n    'dg': 'decigram',\n    'cg': 'centigram',\n    'mg': 'milligram',\n    'µg': 'microgram',\n    'carat': 'carat',\n    'grain': 'grain',\n    'oz': 'ounce',\n    'lb': 'pound',\n    'ton': 'tonne'\n  },\n  'Area': {\n    'km²': 'square kilometer',\n    'km2': 'square kilometer',\n    'm²': 'square meter',\n    'm2': 'square meter',\n    'dm²': 'square decimeter',\n    'dm2': 'square decimeter',\n    'cm²': 'square centimeter',\n    'cm2': 'square centimeter',\n    'mm²': 'square millimeter',\n    'mm2': 'square millimeter',\n    'ha': 'hectare',\n    'mile²': 'square mile',\n    'mile2': 'square mile',\n    'in²': 'square inch',\n    'in2': 'square inch',\n    'yd²': 'square yard',\n    'yd2': 'square yard',\n    'ft²': 'square foot',\n    'sq ft': 'square feet',\n    'ft2': 'square foot',\n    'acre': 'acre'\n  },\n  'Frequency': {\n    'hz': 'hertz'\n  },\n  'Speed': {\n    'km/h': 'kilometer per hour',\n    'kmph': 'kilometer per hour',\n    'mps': 'meter per second',\n    'm/s': 'meter per second',\n    'mph': 'mile per hour',\n    'mi/h': 'mile per hour',\n    'knot': 'knot'\n  },\n  'Data': {\n    'b': 'byte',\n    'kb': 'kilobyte',\n    'mb': 'megabyte',\n    'gb': 'gigabyte',\n    'tb': 'terabyte',\n    'pt': 'petabyte',\n    'eb': 'exabyte',\n    'zb': 'zettabyte',\n    'yb': 'yottabyte'\n  },\n  'Energy': {\n    'j': 'joule',\n    'pa': 'pascal',\n    'w': 'watt',\n    'n': 'newton',\n    'wb': 'weber',\n    'h': 'henry',\n    'c': 'coulomb',\n    'v': 'volt',\n    'f': 'farad',\n    's': 'siemens',\n    'o': 'ohm',\n    'lx': 'lux',\n    'lm': 'lumen'\n  },\n  'Time': {\n    'year': 'year',\n    'week': 'week',\n    'day': 'day',\n    'h': 'hour',\n    'min': 'minute',\n    's': 'second',\n    'ms': 'millisecond',\n    'µs': 'microsecond',\n    'nanosecond': 'nanosecond',\n    'picosecond': 'picosecond',\n    'femtosecond': 'femtosecond',\n    'attosecond': 'attosecond'\n  }\n};\n\n//prepare a list of them, for the lexicon\nvar words = {};\nObject.keys(units).forEach(function (k) {\n  Object.keys(units[k]).forEach(function (shorter) {\n    if (shorter.length > 1) {\n      words[shorter] = true;\n    }\n    var longer = units[k][shorter];\n    words[longer] = true;\n    words[longer + 's'] = true;\n  });\n});\nwords = Object.keys(words);\n\nmodule.exports = {\n  words: words,\n  units: units\n};\n\n},{}],18:[function(_dereq_,module,exports){\n//a list of exceptions to the verb rules\n'use strict';\n\nvar participles = _dereq_('./participles');\n\nvar irregular = {\n  take: {\n    PerfectTense: 'have taken',\n    pluPerfectTense: 'had taken',\n    FuturePerfect: 'will have taken'\n  },\n  can: {\n    Gerund: '',\n    PresentTense: 'can',\n    PastTense: 'could',\n    FutureTense: 'can',\n    PerfectTense: 'could',\n    pluPerfectTense: 'could',\n    FuturePerfect: 'can',\n    Actor: ''\n  },\n  free: {\n    Gerund: 'freeing',\n    Actor: ''\n  },\n  arise: {\n    PastTense: 'arose',\n    Participle: 'arisen'\n  },\n  babysit: {\n    PastTense: 'babysat',\n    Actor: 'babysitter'\n  },\n  be: { // this is crazy-hard and shouldn't be here\n    PastTense: 'was',\n    Participle: 'been',\n    PresentTense: 'is',\n    // FutureTense: 'will be',\n    Actor: '',\n    Gerund: 'am'\n  },\n  // will: {\n  //   PastTense: 'will',\n  // },\n  is: {\n    PastTense: 'was',\n    PresentTense: 'is',\n    // FutureTense: 'will be',\n    // PerfectTense: 'have been',\n    // pluPerfectTense: 'had been',\n    // FuturePerfect: 'will have been',\n    Actor: '',\n    Gerund: 'being'\n  },\n  beat: {\n    Gerund: 'beating',\n    Actor: 'beater',\n    Participle: 'beaten'\n  },\n  begin: {\n    Gerund: 'beginning',\n    PastTense: 'began'\n  },\n  ban: {\n    PastTense: 'banned',\n    Gerund: 'banning',\n    Actor: ''\n  },\n  bet: {\n    Actor: 'better'\n  },\n  bite: {\n    Gerund: 'biting',\n    PastTense: 'bit'\n  },\n  bleed: {\n    PastTense: 'bled'\n  },\n  breed: {\n    PastTense: 'bred'\n  },\n  bring: {\n    PastTense: 'brought'\n  },\n  broadcast: {\n    PastTense: 'broadcast'\n  },\n  build: {\n    PastTense: 'built'\n  },\n  buy: {\n    PastTense: 'bought'\n  },\n  choose: {\n    Gerund: 'choosing',\n    PastTense: 'chose'\n  },\n  cost: {\n    PastTense: 'cost'\n  },\n  deal: {\n    PastTense: 'dealt'\n  },\n  die: {\n    PastTense: 'died',\n    Gerund: 'dying'\n  },\n  dig: {\n    Gerund: 'digging',\n    PastTense: 'dug'\n  },\n  draw: {\n    PastTense: 'drew'\n  },\n  drink: {\n    PastTense: 'drank',\n    Participle: 'drunk'\n  },\n  drive: {\n    Gerund: 'driving',\n    PastTense: 'drove'\n  },\n  eat: {\n    Gerund: 'eating',\n    PastTense: 'ate',\n    Actor: 'eater',\n    Participle: 'eaten'\n  },\n  fall: {\n    PastTense: 'fell'\n  },\n  feed: {\n    PastTense: 'fed'\n  },\n  feel: {\n    PastTense: 'felt',\n    Actor: 'feeler'\n  },\n  fight: {\n    PastTense: 'fought'\n  },\n  find: {\n    PastTense: 'found'\n  },\n  fly: {\n    PastTense: 'flew',\n    Participle: 'flown'\n  },\n  blow: {\n    PastTense: 'blew',\n    Participle: 'blown'\n  },\n  forbid: {\n    PastTense: 'forbade'\n  },\n  forget: {\n    Gerund: 'forgeting',\n    PastTense: 'forgot'\n  },\n  forgive: {\n    Gerund: 'forgiving',\n    PastTense: 'forgave'\n  },\n  freeze: {\n    Gerund: 'freezing',\n    PastTense: 'froze'\n  },\n  get: {\n    PastTense: 'got'\n  },\n  give: {\n    Gerund: 'giving',\n    PastTense: 'gave'\n  },\n  go: {\n    PastTense: 'went',\n    PresentTense: 'goes'\n  },\n  hang: {\n    PastTense: 'hung'\n  },\n  have: {\n    Gerund: 'having',\n    PastTense: 'had',\n    PresentTense: 'has'\n  },\n  hear: {\n    PastTense: 'heard'\n  },\n  hide: {\n    PastTense: 'hid'\n  },\n  hold: {\n    PastTense: 'held'\n  },\n  hurt: {\n    PastTense: 'hurt'\n  },\n  lay: {\n    PastTense: 'laid'\n  },\n  lead: {\n    PastTense: 'led'\n  },\n  leave: {\n    PastTense: 'left'\n  },\n  lie: {\n    Gerund: 'lying',\n    PastTense: 'lay'\n  },\n  light: {\n    PastTense: 'lit'\n  },\n  lose: {\n    Gerund: 'losing',\n    PastTense: 'lost'\n  },\n  make: {\n    PastTense: 'made'\n  },\n  mean: {\n    PastTense: 'meant'\n  },\n  meet: {\n    Gerund: 'meeting',\n    PastTense: 'met',\n    Actor: 'meeter'\n  },\n  pay: {\n    PastTense: 'paid'\n  },\n  read: {\n    PastTense: 'read'\n  },\n  ring: {\n    PastTense: 'rang'\n  },\n  rise: {\n    PastTense: 'rose',\n    Gerund: 'rising',\n    pluPerfectTense: 'had risen',\n    FuturePerfect: 'will have risen'\n  },\n  run: {\n    Gerund: 'running',\n    PastTense: 'ran'\n  },\n  say: {\n    PastTense: 'said'\n  },\n  see: {\n    PastTense: 'saw'\n  },\n  sell: {\n    PastTense: 'sold'\n  },\n  shine: {\n    PastTense: 'shone'\n  },\n  shoot: {\n    PastTense: 'shot'\n  },\n  show: {\n    PastTense: 'showed'\n  },\n  sing: {\n    PastTense: 'sang',\n    Participle: 'sung'\n  },\n  sink: {\n    PastTense: 'sank',\n    pluPerfectTense: 'had sunk'\n  },\n  sit: {\n    PastTense: 'sat'\n  },\n  slide: {\n    PastTense: 'slid'\n  },\n  speak: {\n    PastTense: 'spoke',\n    PerfectTense: 'have spoken',\n    pluPerfectTense: 'had spoken',\n    FuturePerfect: 'will have spoken'\n  },\n  spin: {\n    Gerund: 'spinning',\n    PastTense: 'spun'\n  },\n  stand: {\n    PastTense: 'stood'\n  },\n  steal: {\n    PastTense: 'stole',\n    Actor: 'stealer'\n  },\n  stick: {\n    PastTense: 'stuck'\n  },\n  sting: {\n    PastTense: 'stung'\n  },\n  stream: {\n    Actor: 'streamer'\n  },\n  strike: {\n    Gerund: 'striking',\n    PastTense: 'struck'\n  },\n  swear: {\n    PastTense: 'swore'\n  },\n  swim: {\n    PastTense: 'swam'\n  },\n  swing: {\n    PastTense: 'swung'\n  },\n  teach: {\n    PastTense: 'taught',\n    PresentTense: 'teaches'\n  },\n  tear: {\n    PastTense: 'tore'\n  },\n  tell: {\n    PastTense: 'told'\n  },\n  think: {\n    PastTense: 'thought'\n  },\n  understand: {\n    PastTense: 'understood'\n  },\n  wake: {\n    PastTense: 'woke'\n  },\n  wear: {\n    PastTense: 'wore'\n  },\n  win: {\n    Gerund: 'winning',\n    PastTense: 'won'\n  },\n  withdraw: {\n    PastTense: 'withdrew'\n  },\n  write: {\n    Gerund: 'writing',\n    PastTense: 'wrote',\n    Participle: 'written'\n  },\n  tie: {\n    Gerund: 'tying',\n    PastTense: 'tied'\n  },\n  ski: {\n    PastTense: 'skiied'\n  },\n  boil: {\n    Actor: 'boiler'\n  },\n  miss: {\n    PresentTense: 'miss'\n  },\n  act: {\n    Actor: 'actor'\n  },\n  compete: {\n    Gerund: 'competing',\n    PastTense: 'competed',\n    Actor: 'competitor'\n  },\n  being: {\n    Gerund: 'are',\n    PastTense: 'were',\n    PresentTense: 'are'\n  },\n  imply: {\n    PastTense: 'implied',\n    PresentTense: 'implies'\n  },\n  ice: {\n    Gerund: 'icing',\n    PastTense: 'iced'\n  },\n  develop: {\n    PastTense: 'developed',\n    Actor: 'developer',\n    Gerund: 'developing'\n  },\n  wait: {\n    Gerund: 'waiting',\n    PastTense: 'waited',\n    Actor: 'waiter'\n  },\n  aim: {\n    Actor: 'aimer'\n  },\n  spill: {\n    PastTense: 'spilt'\n  },\n  drop: {\n    Gerund: 'dropping',\n    PastTense: 'dropped'\n  },\n  log: {\n    Gerund: 'logging',\n    PastTense: 'logged'\n  },\n  rub: {\n    Gerund: 'rubbing',\n    PastTense: 'rubbed'\n  },\n  smash: {\n    PresentTense: 'smashes'\n  },\n  suit: {\n    Gerund: 'suiting',\n    PastTense: 'suited',\n    Actor: 'suiter'\n  }\n};\n//fancy es3 literal support (ftw?)\nvar literals = [['break', {\n  PastTense: 'broke'\n}], ['catch', {\n  PastTense: 'caught'\n}], ['do', {\n  PastTense: 'did',\n  PresentTense: 'does'\n}], ['bind', {\n  PastTense: 'bound'\n}], ['spread', {\n  PastTense: 'spread'\n}]];\nliterals.forEach(function (a) {\n  irregular[a[0]] = a[1];\n});\n\nObject.keys(participles).forEach(function (inf) {\n  if (irregular[inf]) {\n    irregular[inf].Participle = participles[inf];\n  } else {\n    irregular[inf] = {\n      Participle: participles[inf]\n    };\n  }\n});\nmodule.exports = irregular;\n\n},{\"./participles\":19}],19:[function(_dereq_,module,exports){\n'use strict';\n\n//particples are a bit like past-tense, but used differently\n//map the infinitive to its irregular-participle\nmodule.exports = {\n  'become': 'become',\n  'begin': 'begun',\n  'bend': 'bent',\n  'bet': 'bet',\n  'bite': 'bitten',\n  'bleed': 'bled',\n  'brake': 'broken',\n  'bring': 'brought',\n  'build': 'built',\n  'burn': 'burned',\n  'burst': 'burst',\n  'buy': 'bought',\n  // 'catch': 'caught',\n  'choose': 'chosen',\n  'cling': 'clung',\n  'come': 'come',\n  'creep': 'crept',\n  'cut': 'cut',\n  'deal': 'dealt',\n  'dig': 'dug',\n  'dive': 'dived',\n  // 'do': 'done',\n  'draw': 'drawn',\n  'dream': 'dreamt',\n  'drive': 'driven',\n  'eat': 'eaten',\n  'fall': 'fallen',\n  'feed': 'fed',\n  'fight': 'fought',\n  'flee': 'fled',\n  'fling': 'flung',\n  'forget': 'forgotten',\n  'forgive': 'forgiven',\n  'freeze': 'frozen',\n  'got': 'gotten',\n  'give': 'given',\n  'go': 'gone',\n  'grow': 'grown',\n  'hang': 'hung',\n  'have': 'had',\n  'hear': 'heard',\n  'hide': 'hidden',\n  'hit': 'hit',\n  'hold': 'held',\n  'hurt': 'hurt',\n  'keep': 'kept',\n  'kneel': 'knelt',\n  'know': 'known',\n  'lay': 'laid',\n  'lead': 'led',\n  'leap': 'leapt',\n  'leave': 'left',\n  'lend': 'lent',\n  'light': 'lit',\n  'loose': 'lost',\n  'make': 'made',\n  'mean': 'meant',\n  'meet': 'met',\n  'pay': 'paid',\n  'prove': 'proven',\n  'put': 'put',\n  'quit': 'quit',\n  'read': 'read',\n  'ride': 'ridden',\n  'ring': 'rung',\n  'rise': 'risen',\n  'run': 'run',\n  'say': 'said',\n  'see': 'seen',\n  'seek': 'sought',\n  'sell': 'sold',\n  'send': 'sent',\n  'set': 'set',\n  'sew': 'sewn',\n  'shake': 'shaken',\n  'shave': 'shaved',\n  'shine': 'shone',\n  'shoot': 'shot',\n  'shut': 'shut',\n  'seat': 'sat',\n  'slay': 'slain',\n  'sleep': 'slept',\n  'slide': 'slid',\n  'sneak': 'snuck',\n  'speak': 'spoken',\n  'speed': 'sped',\n  'spend': 'spent',\n  'spill': 'spilled',\n  'spin': 'spun',\n  'spit': 'spat',\n  'split': 'split',\n  'spring': 'sprung',\n  'stink': 'stunk',\n  'strew': 'strewn',\n  'sware': 'sworn',\n  'sweep': 'swept',\n  'thrive': 'thrived',\n  // 'throw': 'thrown',\n  'undergo': 'undergone',\n  'upset': 'upset',\n  'weave': 'woven',\n  'weep': 'wept',\n  'wind': 'wound',\n  'wring': 'wrung'\n};\n\n},{}],20:[function(_dereq_,module,exports){\n//most-frequent non-irregular verbs, in infinitive form, to be conjugated for the lexicon\n//this list is the seed, from which various forms are conjugated\n'use strict';\n\nvar fns = _dereq_('../fns');\n\n//suffix-index adjectives\n//  {cial:'cru,spe'} -> 'crucial', 'special'\n\n//suffix-index adjectives\n//  {cial:'cru,spe'} -> 'crucial', 'special'\nvar compressed = {\n  prove: ',im,ap,disap',\n  serve: ',de,ob,re',\n  ress: 'exp,p,prog,st,add,d',\n  lect: 'ref,se,neg,col,e',\n  sist: 'in,con,per,re,as',\n  tain: 'ob,con,main,s,re',\n  mble: 'rese,gru,asse,stu',\n  ture: 'frac,lec,tor,fea',\n  port: 're,sup,ex,im',\n  ate: 'rel,oper,indic,cre,h,activ,estim,particip,d,anticip,evalu',\n  use: ',ca,over,ref,acc,am,pa',\n  ive: 'l,rece,d,arr,str,surv,thr,rel',\n  are: 'prep,c,comp,sh,st,decl,d,sc',\n  ine: 'exam,imag,determ,comb,l,decl,underm,def',\n  nce: 'annou,da,experie,influe,bou,convi,enha',\n  ain: 'tr,rem,expl,dr,compl,g,str',\n  ent: 'prev,repres,r,res,rel,inv',\n  age: 'dam,mess,man,encour,eng,discour',\n  rge: 'su,cha,eme,u,me',\n  ise: 'ra,exerc,prom,surpr,pra',\n  ect: 'susp,dir,exp,def,rej',\n  ter: 'en,mat,cen,ca,al',\n  end: ',t,dep,ext,att',\n  est: 't,sugg,prot,requ,r',\n  ock: 'kn,l,sh,bl,unl',\n  nge: 'cha,excha,ra,challe,plu',\n  ase: 'incre,decre,purch,b,ce',\n  ish: 'establ,publ,w,fin,distingu',\n  mit: 'per,ad,sub,li',\n  ure: 'fig,ens,end,meas',\n  der: 'won,consi,mur,wan',\n  ave: 's,sh,w,cr',\n  ire: 'requ,des,h,ret',\n  tch: 'scra,swi,ma,stre',\n  ack: 'att,l,p,cr',\n  ion: 'ment,quest,funct,envis',\n  ump: 'j,l,p,d',\n  ide: 'dec,prov,gu,s',\n  ush: 'br,cr,p,r',\n  eat: 'def,h,tr,ch',\n  ash: 'sm,spl,w,fl',\n  rry: 'ca,ma,hu,wo',\n  ear: 'app,f,b,disapp',\n  er: 'answ,rememb,off,suff,cov,discov,diff,gath,deliv,both,empow,with',\n  le: 'fi,sett,hand,sca,whist,enab,smi,ming,ru,sprink,pi',\n  st: 'exi,foreca,ho,po,twi,tru,li,adju,boa,contra,boo',\n  it: 'vis,ed,depos,sp,awa,inhib,cred,benef,prohib,inhab',\n  nt: 'wa,hu,pri,poi,cou,accou,confro,warra,pai',\n  ch: 'laun,rea,approa,sear,tou,ar,enri,atta',\n  ss: 'discu,gue,ki,pa,proce,cro,glo,dismi',\n  ll: 'fi,pu,ki,ca,ro,sme,reca,insta',\n  rn: 'tu,lea,conce,retu,bu,ea,wa,gove',\n  ce: 'redu,produ,divor,noti,for,repla',\n  te: 'contribu,uni,tas,vo,no,constitu,ci',\n  rt: 'sta,comfo,exe,depa,asse,reso,conve',\n  ck: 'su,pi,che,ki,tri,wre',\n  ct: 'intera,restri,predi,attra,depi,condu',\n  ke: 'sta,li,bra,overta,smo,disli',\n  se: 'collap,suppo,clo,rever,po,sen',\n  nd: 'mi,surrou,dema,remi,expa,comma',\n  ve: 'achie,invol,remo,lo,belie,mo',\n  rm: 'fo,perfo,confi,confo,ha',\n  or: 'lab,mirr,fav,monit,hon',\n  ue: 'arg,contin,val,iss,purs',\n  ow: 'all,foll,sn,fl,borr',\n  ay: 'pl,st,betr,displ,portr',\n  ze: 'recogni,reali,snee,ga,emphasi',\n  ip: 'cl,d,gr,sl,sk',\n  re: 'igno,sto,interfe,sco',\n  ng: 'spri,ba,belo,cli',\n  ew: 'scr,vi,revi,ch',\n  gh: 'cou,lau,outwei,wei',\n  ly: 'app,supp,re,multip',\n  ge: 'jud,acknowled,dod,alle',\n  en: 'list,happ,threat,strength',\n  ee: 'fors,agr,disagr,guarant',\n  et: 'budg,regr,mark,targ',\n  rd: 'rega,gua,rewa,affo',\n  am: 'dre,j,sl,ro',\n  ry: 'va,t,c,bu'\n};\nvar arr = ['abandon', 'accept', 'add', 'added', 'adopt', 'aid', 'appeal', 'applaud', 'archive', 'ask', 'assign', 'associate', 'assume', 'attempt', 'avoid', 'ban', 'become', 'bomb', 'cancel', 'claim', 'claw', 'come', 'control', 'convey', 'cook', 'copy', 'cut', 'deem', 'defy', 'deny', 'describe', 'design', 'destroy', 'die', 'divide', 'do', 'doubt', 'drag', 'drift', 'drop', 'echo', 'embody', 'enjoy', 'envy', 'excel', 'fall', 'fail', 'fix', 'float', 'flood', 'focus', 'fold', 'get', 'goes', 'grab', 'grasp', 'grow', 'happen', 'head', 'help', 'hold fast', 'hope', 'include', 'instruct', 'invest', 'join', 'keep', 'know', 'learn', 'let', 'lift', 'link', 'load', 'loan', 'look', 'make due', 'mark', 'melt', 'minus', 'multiply', 'name', 'need', 'occur', 'overcome', 'overlap', 'overwhelm', 'owe', 'pay', 'plan', 'plug', 'plus', 'pop', 'pour', 'proclaim', 'put', 'rank', 'reason', 'reckon', 'relax', 'repair', 'reply', 'reveal', 'revel', 'risk', 'rub', 'ruin', 'sail', 'seek', 'seem', 'send', 'set', 'shout', 'sleep', 'sneak', 'sort', 'spoil', 'stem', 'step', 'stop', 'study', 'take', 'talk', 'thank', 'took', 'trade', 'transfer', 'trap', 'travel', 'tune', 'undergo', 'undo', 'uplift', 'walk', 'watch', 'win', 'wipe', 'work', 'yawn', 'yield'];\n\nmodule.exports = fns.uncompress_suffixes(arr, compressed);\n\n},{\"../fns\":5}],21:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar tagColors = _dereq_('./tags/colors');\n\n// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nvar c = {\n  reset: '\\x1b[0m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  magenta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  black: '\\x1b[30m'\n};\n//dont use colors on client-side\nif (typeof module === 'undefined') {\n  Object.keys(c).forEach(function (k) {\n    c[k] = '';\n  });\n}\n\n//coerce any input into a string\nexports.ensureString = function (input) {\n  if (typeof input === 'string') {\n    return input;\n  } else if (typeof input === 'number') {\n    return '' + input;\n  }\n  return '';\n};\n//coerce any input into a string\nexports.ensureObject = function (input) {\n  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) !== 'object') {\n    return {};\n  }\n  if (input === null || input instanceof Array) {\n    return {};\n  }\n  return input;\n};\n//string utilities\nexports.endsWith = function (str, suffix) {\n  if (str && str.substr(-suffix.length) === suffix) {\n    return true;\n  }\n  return false;\n};\n\nexports.startsWith = function (str, prefix) {\n  if (str && prefix) {\n    if (str.substr(0, prefix.length) === prefix) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.titleCase = function (str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n\n//turn a nested array into one array\nexports.flatten = function (arr) {\n  var all = [];\n  arr.forEach(function (a) {\n    all = all.concat(a);\n  });\n  return all;\n};\n\n//shallow-clone an object\nexports.copy = function (o) {\n  var o2 = {};\n  o = exports.ensureObject(o);\n  Object.keys(o).forEach(function (k) {\n    o2[k] = o[k];\n  });\n  return o2;\n};\nexports.extend = function (obj, a) {\n  obj = exports.copy(obj);\n  var keys = Object.keys(a);\n  for (var i = 0; i < keys.length; i++) {\n    obj[keys[i]] = a[keys[i]];\n  }\n  return obj;\n};\n\n//colorization\nexports.green = function (str) {\n  return c.green + str + c.reset;\n};\nexports.red = function (str) {\n  return c.red + str + c.reset;\n};\nexports.blue = function (str) {\n  return c.blue + str + c.reset;\n};\nexports.magenta = function (str) {\n  return c.magenta + str + c.reset;\n};\nexports.cyan = function (str) {\n  return c.cyan + str + c.reset;\n};\nexports.yellow = function (str) {\n  return c.yellow + str + c.reset;\n};\nexports.black = function (str) {\n  return c.black + str + c.reset;\n};\nexports.printTag = function (tag) {\n  if (tagColors[tag]) {\n    return exports[tagColors[tag]](tag);\n  }\n  return tag;\n};\nexports.printTerm = function (t) {\n  var tags = Object.keys(t.tag);\n  for (var i = 0; i < tags.length; i++) {\n    if (tagColors[tags[i]]) {\n      var color = tagColors[tags[i]];\n      return exports[color](t.plaintext);\n    }\n  }\n  return c.reset + t.plaintext + c.reset;\n};\n\nexports.leftPad = function (str, width, char) {\n  char = char || ' ';\n  str = str.toString();\n  while (str.length < width) {\n    str += char;\n  }\n  return str;\n};\n\n},{\"./tags/colors\":173}],22:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nvar buildResult = _dereq_('./result/build');\nvar pkg = _dereq_('../package.json');\nvar log = _dereq_('./log');\n\n//the main thing\nvar nlp = function nlp(str, lexicon, tagSet) {\n  return buildResult(str, lexicon, tagSet);\n};\n\n//this is handy\nnlp.version = pkg.version;\n\n//so handy at times\nnlp.lexicon = function () {\n  return _dereq_('./data/lexicon');\n};\n\n//also this is much handy\nnlp.verbose = function (str) {\n  log.enable(str);\n};\n\n//and then all-the-exports...\nif (typeof self !== 'undefined') {\n  self.nlp = nlp; // Web Worker\n} else if (typeof window !== 'undefined') {\n  window.nlp = nlp; // Browser\n} else if (typeof global !== 'undefined') {\n  global.nlp = nlp; // NodeJS\n}\n//don't forget amd!\nif (typeof define === 'function' && define.amd) {\n  define(nlp);\n}\n//then for some reason, do this too!\nif (typeof module !== 'undefined') {\n  module.exports = nlp;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../package.json\":1,\"./data/lexicon\":7,\"./log\":23,\"./result/build\":24}],23:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar fns = _dereq_('../fns');\nvar _enable = false;\n\nmodule.exports = {\n  enable: function enable(str) {\n    if (str === undefined) {\n      str = true;\n    }\n    _enable = str;\n  },\n  here: function here(path) {\n    if (_enable === true || _enable === path) {\n      console.log('  ' + path);\n    }\n  },\n  tell: function tell(str, path) {\n    if (_enable === true || _enable === path) {\n      if ((typeof str === 'undefined' ? 'undefined' : _typeof(str)) === 'object') {\n        str = JSON.stringify(str);\n      }\n      str = '    ' + str;\n      console.log(str);\n    }\n  },\n  tagAs: function tagAs(t, pos, reason) {\n    if (_enable === true || _enable === 'tagger') {\n      var title = t.normal || '[' + t.silent_term + ']';\n      title = fns.yellow(title);\n      title = fns.leftPad('\\'' + title + '\\'', 20);\n      title += '  ->   ' + fns.printTag(pos);\n      title = fns.leftPad(title, 54);\n      console.log('       ' + title + '(' + fns.cyan(reason || '') + ')');\n    }\n  }\n};\n\n},{\"../fns\":21}],24:[function(_dereq_,module,exports){\n'use strict';\n\nvar Text = _dereq_('./index');\nvar tokenize = _dereq_('./tokenize');\nvar Terms = _dereq_('./paths').Terms;\nvar normalize = _dereq_('../term/methods/normalize/normalize').normalize;\nvar tagArr = _dereq_('../tags');\n\n//basically really dirty and stupid.\nvar normalizeLex = function normalizeLex(lex) {\n  lex = lex || {};\n  return Object.keys(lex).reduce(function (h, k) {\n    //add natural form\n    h[k] = lex[k];\n    var normal = normalize(k);\n    if (k !== normal) {\n      //add it too\n      h[normal] = lex[k];\n    }\n    return h;\n  }, {});\n};\n\nvar extendTags = function extendTags(newTags) {\n  console.log(newTags);\n  console.log(tagArr);\n};\n\n//build a new pos-tagged Result obj from a string\nvar fromString = function fromString(str, lexicon, tagSet) {\n  var sentences = tokenize(str);\n  //make sure lexicon obeys standards\n  lexicon = normalizeLex(lexicon);\n  var list = sentences.map(function (s) {\n    return Terms.fromString(s, lexicon);\n  });\n  //extend tagset for this ref\n  if (tagSet) {\n    extendTags(tagSet);\n  }\n\n  var r = new Text(list, lexicon, null, tagSet);\n  //give each ts a ref to the result\n  r.list.forEach(function (ts) {\n    ts.refText = r;\n  });\n  return r;\n};\nmodule.exports = fromString;\n\n},{\"../tags\":175,\"../term/methods/normalize/normalize\":182,\"./index\":25,\"./paths\":37,\"./tokenize\":130}],25:[function(_dereq_,module,exports){\n'use strict';\n//a Text is an array of termLists\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Text = function () {\n  function Text(arr, lexicon, reference, tagSet) {\n    _classCallCheck(this, Text);\n\n    this.list = arr || [];\n    this.reference = reference;\n    this.tagSet = tagSet;\n  }\n  //getter/setters\n  /** did it find anything? */\n\n\n  _createClass(Text, [{\n    key: 'all',\n    value: function all() {\n      return this.parent;\n    }\n  }, {\n    key: 'index',\n    value: function index() {\n      return this.list.map(function (ts) {\n        return ts.index();\n      });\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          normal: ts.out('normal'),\n          text: ts.out('text')\n        };\n      });\n    }\n  }, {\n    key: 'debug',\n    value: function debug(opts) {\n      return out(this, 'debug', opts);\n    }\n  }, {\n    key: 'found',\n    get: function get() {\n      return this.list.length > 0;\n    }\n    /** how many Texts are there?*/\n\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.list.length;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Text';\n    }\n  }, {\n    key: 'parent',\n    get: function get() {\n      return this.reference || this;\n    },\n    set: function set(r) {\n      this.reference = r;\n      return this;\n    }\n  }, {\n    key: 'whitespace',\n    get: function get() {\n      var _this = this;\n\n      return {\n        before: function before(str) {\n          _this.list.forEach(function (ts) {\n            ts.whitespace.before(str);\n          });\n          return _this;\n        },\n        after: function after(str) {\n          _this.list.forEach(function (ts) {\n            ts.whitespace.after(str);\n          });\n          return _this;\n        }\n      };\n    }\n  }]);\n\n  return Text;\n}();\n\nmodule.exports = Text;\nText = _dereq_('./methods/array')(Text);\nText = _dereq_('./methods/loops')(Text);\nText = _dereq_('./methods/match')(Text);\nText = _dereq_('./methods/out')(Text);\nText = _dereq_('./methods/sort')(Text);\nText = _dereq_('./methods/split')(Text);\nText = _dereq_('./methods/tag')(Text);\nText = _dereq_('./methods/normalize')(Text);\n\nvar subset = {\n  acronyms: _dereq_('./subset/acronyms'),\n  adjectives: _dereq_('./subset/adjectives'),\n  adverbs: _dereq_('./subset/adverbs'),\n  clauses: _dereq_('./subset/clauses'),\n  contractions: _dereq_('./subset/contractions'),\n  dates: _dereq_('./subset/dates'),\n  hashTags: _dereq_('./subset/hashTags'),\n  nouns: _dereq_('./subset/nouns'),\n  organizations: _dereq_('./subset/organizations'),\n  people: _dereq_('./subset/people'),\n  phoneNumbers: _dereq_('./subset/phoneNumbers'),\n  places: _dereq_('./subset/places'),\n  questions: _dereq_('./subset/sentences/questions'),\n  quotations: _dereq_('./subset/quotations'),\n  sentences: _dereq_('./subset/sentences'),\n  statements: _dereq_('./subset/sentences/statements'),\n  terms: _dereq_('./subset/terms'),\n  topics: _dereq_('./subset/topics'),\n  urls: _dereq_('./subset/urls'),\n  values: _dereq_('./subset/values'),\n  verbs: _dereq_('./subset/verbs'),\n  ngrams: _dereq_('./subset/ngrams'),\n  startGrams: _dereq_('./subset/ngrams/startGrams'),\n  endGrams: _dereq_('./subset/ngrams/endGrams')\n};\n//term subsets\nObject.keys(subset).forEach(function (k) {\n  Text.prototype[k] = function (num, arg) {\n    var sub = subset[k];\n    var m = sub.find(this, num, arg);\n    return new subset[k](m.list, this.lexicon, this.parent);\n  };\n});\n\n},{\"./methods/array\":26,\"./methods/loops\":27,\"./methods/match\":28,\"./methods/normalize\":29,\"./methods/out\":30,\"./methods/sort\":33,\"./methods/split\":35,\"./methods/tag\":36,\"./subset/acronyms\":38,\"./subset/adjectives\":39,\"./subset/adverbs\":47,\"./subset/clauses\":49,\"./subset/contractions\":53,\"./subset/dates\":55,\"./subset/hashTags\":62,\"./subset/ngrams\":66,\"./subset/ngrams/endGrams\":63,\"./subset/ngrams/startGrams\":67,\"./subset/nouns\":69,\"./subset/organizations\":78,\"./subset/people\":80,\"./subset/phoneNumbers\":82,\"./subset/places\":83,\"./subset/quotations\":85,\"./subset/sentences\":86,\"./subset/sentences/questions\":87,\"./subset/sentences/statements\":90,\"./subset/terms\":93,\"./subset/topics\":95,\"./subset/urls\":96,\"./subset/values\":97,\"./subset/verbs\":110}],26:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Terms = _dereq_('../../terms');\n\nvar genericMethods = function genericMethods(Text) {\n\n  var methods = {\n\n    /**copy data properly so later transformations will have no effect*/\n    clone: function clone() {\n      var list = this.list.map(function (ts) {\n        return ts.clone();\n      });\n      // this.parent.list = this.parent.list.map((ts) => {\n      //   return ts.clone();\n      // });\n      // return this;\n      return new Text(list); //this.lexicon, this.parent\n    },\n\n    /** get the nth term of each result*/\n    term: function term(n) {\n      var _this = this;\n\n      var list = this.list.map(function (ts) {\n        var arr = [];\n        var el = ts.terms[n];\n        if (el) {\n          arr = [el];\n        }\n        return new Terms(arr, _this.lexicon, _this.refText, _this.refTerms);\n      });\n      return new Text(list, this.lexicon, this.parent);\n    },\n    firstTerm: function firstTerm() {\n      return this.match('^.');\n    },\n    lastTerm: function lastTerm() {\n      return this.match('.$');\n    },\n\n    /** grab a subset of the results*/\n    slice: function slice(start, end) {\n      this.list = this.list.slice(start, end);\n      return this;\n    },\n\n    /** use only the nth result*/\n    get: function get(n) {\n      //return an empty result\n      if (!n && n !== 0 || !this.list[n]) {\n        return new Text([], this.lexicon, this.parent);\n      }\n      var ts = this.list[n];\n      return new Text([ts], this.lexicon, this.parent);\n    },\n    /**use only the first result */\n    first: function first(n) {\n      if (!n && n !== 0) {\n        return this.get(0);\n      }\n      return new Text(this.list.slice(0, n), this.lexicon, this.parent);\n    },\n    /**use only the last result */\n    last: function last(n) {\n      if (!n && n !== 0) {\n        return this.get(this.list.length - 1);\n      }\n      var end = this.list.length;\n      var start = end - n;\n      return new Text(this.list.slice(start, end), this.lexicon, this.parent);\n    },\n\n    concat: function concat() {\n      //any number of params\n      for (var i = 0; i < arguments.length; i++) {\n        var p = arguments[i];\n        if ((typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object') {\n          //Text()\n          if (p.isA === 'Text' && p.list) {\n            this.list = this.list.concat(p.list);\n          }\n          //Terms()\n          if (p.isA === 'Terms') {\n            this.list.push(p);\n          }\n        }\n      }\n      return this;\n    },\n    /** make it into one sentence/termlist */\n    flatten: function flatten() {\n      var terms = [];\n      this.list.forEach(function (ts) {\n        terms = terms.concat(ts.terms);\n      });\n      //dont create an empty ts\n      if (!terms.length) {\n        return new Text(null, this.lexicon, this.parent);\n      }\n      var ts = new Terms(terms, this.lexicon, this, null);\n      return new Text([ts], this.lexicon, this.parent);\n    }\n\n  };\n\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = genericMethods;\n\n},{\"../../terms\":195}],27:[function(_dereq_,module,exports){\n'use strict';\n//this methods are simply loops around each termList object.\n\nvar foreach = ['toTitleCase', 'toUpperCase', 'toLowerCase', 'toCamelCase', 'hyphenate', 'dehyphenate', 'insertBefore', 'insertAfter', 'insertAt', 'replace', 'replaceWith', 'delete'];\n\nvar addMethods = function addMethods(Text) {\n\n  foreach.forEach(function (k) {\n    var myFn = function myFn() {\n      var args = arguments;\n      this.list.forEach(function (ts) {\n        ts[k].apply(ts, args);\n      });\n      return this;\n    };\n    Text.prototype[k] = myFn;\n  });\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{}],28:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n\n    /** do a regex-like search through terms and return a subset */\n    match: function match(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        //an array of arrays\n        var matches = ts.match(reg, verbose);\n        matches.list.forEach(function (ms) {\n          list.push(ms);\n        });\n      });\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    not: function not(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        var found = ts.not(reg, verbose);\n        list = list.concat(found.list);\n      });\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    /** find the first result */\n    // matchOne: function (reg, verbose) {\n    //   for (let i = 0; i < this.list.length; i++) {\n    //     let ms = this.list[i].match(reg, verbose);\n    //     if (ms && ms.length) {\n    //       let parent = this.parent || this;\n    //       return new Text(ms, parent);\n    //     }\n    //   }\n    //   return null;\n    // },\n\n    /** true/false if it countains atleast one match*/\n    // has: function (reg, verbose) {\n    //   for (let i = 0; i < this.list.length; i++) {\n    //     let ms = this.list[i].match(reg, verbose);\n    //     if (ms && ms.length) {\n    //       return true;\n    //     }\n    //   }\n    //   return false;\n    // },\n\n    'if': function _if(reg, verbose) {\n      var list = [];\n      for (var i = 0; i < this.list.length; i++) {\n        var m = this.list[i].match(reg, verbose);\n        if (m.found) {\n          list.push(this.list[i]);\n        }\n      }\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    },\n\n    ifNo: function ifNo(reg, verbose) {\n      var list = [];\n      for (var i = 0; i < this.list.length; i++) {\n        var m = this.list[i].match(reg, verbose);\n        if (!m.found) {\n          list.push(this.list[i]);\n        }\n      }\n      var parent = this.parent || this;\n      return new Text(list, this.lexicon, parent);\n    }\n\n  };\n  //alias 'and'\n  methods.and = methods.match;\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],29:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar defaultMethods = {\n  whitespace: true,\n  'case': true,\n  numbers: true,\n  punctuation: true,\n  unicode: true,\n  contractions: true\n};\n\nvar methods = {\n\n  /** make only one space between each word */\n  whitespace: function whitespace(r) {\n    r.terms().list.forEach(function (ts, i) {\n      var t = ts.terms[0];\n      if (i > 0) {\n        t.whitespace.before = ' ';\n      } else if (i === 0) {\n        t.whitespace.before = '';\n      }\n      t.whitespace.after = '';\n    });\n    return r;\n  },\n\n  /** make first-word titlecase, and people, places titlecase */\n  'case': function _case(r) {\n    r.list.forEach(function (ts) {\n      ts.terms.forEach(function (t, i) {\n        if (i === 0 || t.tag.Person || t.tag.Place || t.tag.Organization) {\n          ts.toTitleCase();\n        } else {\n          ts.toLowerCase();\n        }\n      });\n    });\n    return r;\n  },\n\n  /** turn 'five' to 5, and 'fifth' to 5th*/\n  numbers: function numbers(r) {\n    return r.values().toNumber();\n  },\n\n  /** remove commas, semicolons - but keep sentence-ending punctuation*/\n  punctuation: function punctuation(r) {\n    r.list.forEach(function (ts) {\n      //first-term punctuation\n      ts.terms[0]._text = ts.terms[0]._text.replace(/^¿/, '');\n      //middle-terms\n      for (var i = 0; i < ts.terms.length - 1; i++) {\n        var t = ts.terms[i];\n        //remove non-sentence-ending stuff\n        t._text = t._text.replace(/[:;,]$/, '');\n      }\n      //replace !!! with !\n      var last = ts.terms[ts.terms.length - 1];\n      last._text = last._text.replace(/\\.+$/, '.');\n      last._text = last._text.replace(/!+$/, '!');\n      last._text = last._text.replace(/\\?+!?$/, '?'); //support '?!'\n    });\n    return r;\n  },\n\n  contractions: function contractions(r) {\n    return r.contractions().expand();\n  }\n};\n\nvar addMethods = function addMethods(Text) {\n  Text.prototype.normalize = function (obj) {\n    var _this = this;\n\n    obj = obj || defaultMethods;\n    //do each type of normalization\n    Object.keys(obj).forEach(function (fn) {\n      if (methods[fn]) {\n        methods[fn](_this);\n      }\n    });\n    return this;\n  };\n  return Text;\n};\nmodule.exports = addMethods;\n\n},{}],30:[function(_dereq_,module,exports){\n'use strict';\n\nvar _topk = _dereq_('./topk');\nvar offset = _dereq_('./offset');\n\nvar methods = {\n  text: function text(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('text');\n      return str;\n    }, '');\n  },\n  normal: function normal(r) {\n    return r.list.map(function (ts) {\n      var str = ts.out('normal');\n      var last = ts.last();\n      if (last) {\n        var punct = last.endPunctuation();\n        if (punct === '.' || punct === '!' || punct === '?') {\n          str += punct;\n        }\n      }\n      return str;\n    }).join(' ');\n  },\n  root: function root(r) {\n    return r.list.map(function (ts) {\n      return ts.out('root');\n    }).join(' ');\n  },\n  /** output where in the original output string they are*/\n  offsets: function offsets(r) {\n    return offset(r);\n  },\n  grid: function grid(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('grid');\n      return str;\n    }, '');\n  },\n  color: function color(r) {\n    return r.list.reduce(function (str, ts) {\n      str += ts.out('color');\n      return str;\n    }, '');\n  },\n  array: function array(r) {\n    return r.list.reduce(function (arr, ts) {\n      arr.push(ts.out('normal'));\n      return arr;\n    }, []);\n  },\n  json: function json(r) {\n    return r.list.reduce(function (arr, ts) {\n      var terms = ts.terms.map(function (t) {\n        return {\n          text: t.text,\n          normal: t.normal,\n          tags: t.tag\n        };\n      });\n      arr.push(terms);\n      return arr;\n    }, []);\n  },\n  html: function html(r) {\n    var html = r.list.reduce(function (str, ts) {\n      var sentence = ts.terms.reduce(function (sen, t) {\n        sen += '\\n    ' + t.out('html');\n        return sen;\n      }, '');\n      return str += '\\n  <span>' + sentence + '\\n  </span>';\n    }, '');\n    return '<span> ' + html + '\\n</span>';\n  },\n  terms: function terms(r) {\n    var arr = [];\n    r.list.forEach(function (ts) {\n      ts.terms.forEach(function (t) {\n        arr.push({\n          text: t.text,\n          normal: t.normal,\n          tags: Object.keys(t.tag)\n        });\n      });\n    });\n    return arr;\n  },\n  debug: function debug(r) {\n    console.log('====');\n    r.list.forEach(function (ts) {\n      console.log('   --');\n      ts.debug();\n    });\n    return r;\n  },\n  topk: function topk(r) {\n    return _topk(r);\n  }\n};\nmethods.plaintext = methods.text;\nmethods.normalized = methods.normal;\nmethods.colors = methods.color;\nmethods.tags = methods.terms;\nmethods.offset = methods.offsets;\nmethods.frequency = methods.topk;\nmethods.freq = methods.topk;\nmethods.arr = methods.array;\n\nvar addMethods = function addMethods(Text) {\n  Text.prototype.out = function (fn) {\n    if (methods[fn]) {\n      return methods[fn](this);\n    }\n    return methods.text(this);\n  };\n  Text.prototype.debug = function () {\n    return methods.debug(this);\n  };\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{\"./offset\":31,\"./topk\":32}],31:[function(_dereq_,module,exports){\n'use strict';\n/** say where in the original output string they are found*/\n\nvar findOffset = function findOffset(parent, term) {\n  var sum = 0;\n  for (var i = 0; i < parent.list.length; i++) {\n    for (var o = 0; o < parent.list[i].terms.length; o++) {\n      var t = parent.list[i].terms[o];\n      if (t.uid === term.uid) {\n        return sum;\n      } else {\n        sum += t.whitespace.before.length + t._text.length + t.whitespace.after.length;\n      }\n    }\n  }\n  return null;\n};\n\n//map over all-dem-results\nvar allOffset = function allOffset(r) {\n  var parent = r.all();\n  return r.list.map(function (ts) {\n    return {\n      text: ts.out('text'),\n      normal: ts.out('normal'),\n      offset: findOffset(parent, ts.terms[0]),\n      length: ts.out('text').length\n    };\n  });\n};\nmodule.exports = allOffset;\n\n},{}],32:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar topk = function topk(r, n) {\n  //count occurance\n  var count = {};\n  r.list.forEach(function (ts) {\n    var str = ts.out('root');\n    count[str] = count[str] || 0;\n    count[str] += 1;\n  });\n  //turn into an array\n  var all = [];\n  Object.keys(count).forEach(function (k) {\n    all.push({\n      normal: k,\n      count: count[k]\n    });\n  });\n  //add percentage\n  all.forEach(function (o) {\n    o.percent = parseFloat((o.count / r.list.length * 100).toFixed(2));\n  });\n  //sort by freq\n  all = all.sort(function (a, b) {\n    if (a.count > b.count) {\n      return -1;\n    }\n    return 1;\n  });\n  if (n) {\n    all = all.splice(0, n);\n  }\n  return all;\n};\n\nmodule.exports = topk;\n\n},{}],33:[function(_dereq_,module,exports){\n'use strict';\n\nvar sorter = _dereq_('./methods');\n\nvar addMethods = function addMethods(Text) {\n\n  var fns = {\n\n    /**reorder result.list alphabetically */\n    sort: function sort(method) {\n      //default sort\n      method = method || 'alphabetical';\n      method = method.toLowerCase();\n      if (!method || method === 'alpha' || method === 'alphabetical') {\n        return sorter.alpha(this, Text);\n      }\n      if (method === 'chron' || method === 'chronological') {\n        return sorter.chron(this, Text);\n      }\n      if (method === 'length') {\n        return sorter.lengthFn(this, Text);\n      }\n      if (method === 'freq' || method === 'frequency') {\n        return sorter.freq(this, Text);\n      }\n      if (method === 'wordcount') {\n        return sorter.wordCount(this, Text);\n      }\n      return this;\n    },\n\n    /**reverse the order of result.list */\n    reverse: function reverse() {\n      this.list = this.list.reverse();\n      return this;\n    },\n\n    unique: function unique() {\n      var obj = {};\n      this.list = this.list.filter(function (ts) {\n        var str = ts.out('root');\n        if (obj[str]) {\n          return false;\n        }\n        obj[str] = true;\n        return true;\n      });\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(fns).forEach(function (k) {\n    Text.prototype[k] = fns[k];\n  });\n  return Text;\n};\n\nmodule.exports = addMethods;\n\n},{\"./methods\":34}],34:[function(_dereq_,module,exports){\n'use strict';\n\n//perform sort on pre-computed values\n\nvar sortEm = function sortEm(arr) {\n  arr = arr.sort(function (a, b) {\n    if (a.index > b.index) {\n      return 1;\n    }\n    if (a.index === b.index) {\n      return 0;\n    }\n    return -1;\n  });\n  //return ts objects\n  return arr.map(function (o) {\n    return o.ts;\n  });\n};\n\n//alphabetical sorting of a termlist array\nexports.alpha = function (r) {\n  r.list.sort(function (a, b) {\n    //#1 performance speedup\n    if (a === b) {\n      return 0;\n    }\n    //#2 performance speedup\n    if (a.terms[0] && b.terms[0]) {\n      if (a.terms[0].root > b.terms[0].root) {\n        return 1;\n      }\n      if (a.terms[0].root < b.terms[0].root) {\n        return -1;\n      }\n    }\n    //regular compare\n    if (a.out('root') > b.out('root')) {\n      return 1;\n    }\n    return -1;\n  });\n  return r;\n};\n\n//the order they were recieved (chronological~)\nexports.chron = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.termIndex()\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n//shortest matches first\nexports.lengthFn = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.chars()\n    };\n  });\n  r.list = sortEm(tmp).reverse();\n  return r;\n};\n\n//count the number of terms in each match\nexports.wordCount = function (r) {\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    return {\n      ts: ts,\n      index: ts.length\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n//sort by frequency (like topk)\nexports.freq = function (r) {\n  //get counts\n  var count = {};\n  r.list.forEach(function (ts) {\n    var str = ts.out('root');\n    count[str] = count[str] || 0;\n    count[str] += 1;\n  });\n  //pre-compute indexes\n  var tmp = r.list.map(function (ts) {\n    var num = count[ts.out('root')] || 0;\n    return {\n      ts: ts,\n      index: num * -1 //quick-reverse it\n    };\n  });\n  r.list = sortEm(tmp);\n  return r;\n};\n\n},{}],35:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n    /** turn result into two seperate results */\n    splitAfter: function splitAfter(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitAfter(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    },\n    /** turn result into two seperate results */\n    splitBefore: function splitBefore(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitBefore(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    },\n    /** turn result into two seperate results */\n    splitOn: function splitOn(reg, verbose) {\n      var list = [];\n      this.list.forEach(function (ts) {\n        ts.splitOn(reg, verbose).forEach(function (mts) {\n          list.push(mts);\n        });\n      });\n      this.list = list;\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],36:[function(_dereq_,module,exports){\n'use strict';\n\nvar splitMethods = function splitMethods(Text) {\n\n  var methods = {\n\n    /**tag all the terms in this result as something */\n    tag: function tag(_tag, reason) {\n      var _this = this;\n\n      this.list.forEach(function (ts) {\n        ts.tagAs(_tag, reason, _this.tagSet);\n      });\n      return this;\n    },\n    /**remove a tag in all the terms in this result (that had it) */\n    unTag: function unTag(tag, reason) {\n      var _this2 = this;\n\n      this.list.forEach(function (ts) {\n        ts.unTag(tag, reason, _this2.tagSet);\n      });\n      return this;\n    },\n\n    /** see if these terms can become this tag*/\n    canBe: function canBe(tag) {\n      var _this3 = this;\n\n      this.list.forEach(function (ts) {\n        ts.terms = ts.terms.filter(function (t) {\n          return t.canBe(tag, _this3.tagSet);\n        });\n      });\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Text.prototype[k] = methods[k];\n  });\n  return Text;\n};\n\nmodule.exports = splitMethods;\n\n},{}],37:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  data: _dereq_('../data'),\n  Terms: _dereq_('../terms'),\n  tags: _dereq_('../tags')\n};\n\n},{\"../data\":6,\"../fns\":21,\"../log\":23,\"../tags\":175,\"../terms\":195}],38:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Acronyms = function (_Text) {\n  _inherits(Acronyms, _Text);\n\n  function Acronyms() {\n    _classCallCheck(this, Acronyms);\n\n    return _possibleConstructorReturn(this, (Acronyms.__proto__ || Object.getPrototypeOf(Acronyms)).apply(this, arguments));\n  }\n\n  _createClass(Acronyms, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        var parsed = t.text.toUpperCase().replace(/\\./g).split('');\n        return {\n          periods: parsed.join('.'),\n          normal: parsed.join(''),\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Acronym');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Acronyms;\n}(Text);\n\nmodule.exports = Acronyms;\n\n},{\"../../index\":25}],39:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar methods = _dereq_('./methods');\n\nvar Adjectives = function (_Text) {\n  _inherits(Adjectives, _Text);\n\n  function Adjectives() {\n    _classCallCheck(this, Adjectives);\n\n    return _possibleConstructorReturn(this, (Adjectives.__proto__ || Object.getPrototypeOf(Adjectives)).apply(this, arguments));\n  }\n\n  _createClass(Adjectives, [{\n    key: 'data',\n    value: function data() {\n      var _this2 = this;\n\n      return this.list.map(function (ts) {\n        var str = ts.out('normal');\n        return {\n          comparative: methods.toComparative(str),\n          superlative: methods.toSuperlative(str),\n          adverbForm: methods.toAdverb(str),\n          nounForm: methods.toNoun(str),\n          verbForm: methods.toVerb(str),\n          normal: str,\n          text: _this2.out('text')\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Adjective');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Adjectives;\n}(Text);\n\nmodule.exports = Adjectives;\n\n},{\"../../index\":25,\"./methods\":41}],40:[function(_dereq_,module,exports){\n'use strict';\n//an obj of adjectives that can be converted to superlative + comparative, via the lexicon data\n\nvar data = _dereq_('../../../../data');\n\nvar convertables = {};\ndata.superlatives.forEach(function (a) {\n  convertables[a] = true;\n});\ndata.verbConverts.forEach(function (a) {\n  convertables[a] = true;\n});\nmodule.exports = convertables;\n\n},{\"../../../../data\":6}],41:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  toNoun: _dereq_('./toNoun'),\n  toSuperlative: _dereq_('./toSuperlative'),\n  toComparative: _dereq_('./toComparative'),\n  toAdverb: _dereq_('./toAdverb'),\n  toVerb: _dereq_('./toVerb')\n};\n\n},{\"./toAdverb\":42,\"./toComparative\":43,\"./toNoun\":44,\"./toSuperlative\":45,\"./toVerb\":46}],42:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\n\nvar adj_to_adv = function adj_to_adv(str) {\n  var irregulars = {\n    'idle': 'idly',\n    'public': 'publicly',\n    'vague': 'vaguely',\n    'day': 'daily',\n    'icy': 'icily',\n    'single': 'singly',\n    'female': 'womanly',\n    'male': 'manly',\n    'simple': 'simply',\n    'whole': 'wholly',\n    'special': 'especially',\n    'straight': 'straight',\n    'wrong': 'wrong',\n    'fast': 'fast',\n    'hard': 'hard',\n    'late': 'late',\n    'early': 'early',\n    'well': 'well',\n    'good': 'well',\n    'little': 'little',\n    'long': 'long',\n    'low': 'low',\n    'best': 'best',\n    'latter': 'latter',\n    'bad': 'badly'\n  };\n\n  var dont = {\n    'foreign': 1,\n    'black': 1,\n    'modern': 1,\n    'next': 1,\n    'difficult': 1,\n    'degenerate': 1,\n    'young': 1,\n    'awake': 1,\n    'back': 1,\n    'blue': 1,\n    'brown': 1,\n    'orange': 1,\n    'complex': 1,\n    'cool': 1,\n    'dirty': 1,\n    'done': 1,\n    'empty': 1,\n    'fat': 1,\n    'fertile': 1,\n    'frozen': 1,\n    'gold': 1,\n    'grey': 1,\n    'gray': 1,\n    'green': 1,\n    'medium': 1,\n    'parallel': 1,\n    'outdoor': 1,\n    'unknown': 1,\n    'undersized': 1,\n    'used': 1,\n    'welcome': 1,\n    'yellow': 1,\n    'white': 1,\n    'fixed': 1,\n    'mixed': 1,\n    'super': 1,\n    'guilty': 1,\n    'tiny': 1,\n    'able': 1,\n    'unable': 1,\n    'same': 1,\n    'adult': 1\n  };\n\n  var transforms = [{\n    reg: /al$/i,\n    repl: 'ally'\n  }, {\n    reg: /ly$/i,\n    repl: 'ly'\n  }, {\n    reg: /(.{3})y$/i,\n    repl: '$1ily'\n  }, {\n    reg: /que$/i,\n    repl: 'quely'\n  }, {\n    reg: /ue$/i,\n    repl: 'uly'\n  }, {\n    reg: /ic$/i,\n    repl: 'ically'\n  }, {\n    reg: /ble$/i,\n    repl: 'bly'\n  }, {\n    reg: /l$/i,\n    repl: 'ly'\n  }];\n\n  var not_matches = [/airs$/, /ll$/, /ee.$/, /ile$/];\n\n  if (dont[str]) {\n    return null;\n  }\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.length <= 3) {\n    return null;\n  }\n  for (var i = 0; i < not_matches.length; i++) {\n    if (str.match(not_matches[i])) {\n      return null;\n    }\n  }\n  for (var _i = 0; _i < transforms.length; _i++) {\n    if (str.match(transforms[_i].reg)) {\n      return str.replace(transforms[_i].reg, transforms[_i].repl);\n    }\n  }\n  return str + 'ly';\n};\n// console.log(adj_to_adv('direct'))\n\nmodule.exports = adj_to_adv;\n\n},{}],43:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickly'\n'use strict';\n\nvar convertables = _dereq_('./convertable');\n\nvar irregulars = {\n  'grey': 'greyer',\n  'gray': 'grayer',\n  'green': 'greener',\n  'yellow': 'yellower',\n  'red': 'redder',\n  'good': 'better',\n  'well': 'better',\n  'bad': 'worse',\n  'sad': 'sadder',\n  'big': 'bigger'\n};\n\nvar dont = {\n  'overweight': 1,\n  'main': 1,\n  'nearby': 1,\n  'asleep': 1,\n  'weekly': 1,\n  'secret': 1,\n  'certain': 1\n};\n\nvar transforms = [{\n  reg: /y$/i,\n  repl: 'ier'\n}, {\n  reg: /([aeiou])t$/i,\n  repl: '$1tter'\n}, {\n  reg: /([aeou])de$/i,\n  repl: '$1der'\n}, {\n  reg: /nge$/i,\n  repl: 'nger'\n}];\n\nvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/];\n\nvar not_matches = [/ary$/, /ous$/];\n\nvar to_comparative = function to_comparative(str) {\n  if (dont.hasOwnProperty(str)) {\n    return null;\n  }\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables[str] !== undefined) {\n    if (str.match(/e$/)) {\n      return str + 'r';\n    }\n    return str + 'er';\n  }\n\n  for (var _i = 0; _i < not_matches.length; _i++) {\n    if (str.match(not_matches[_i])) {\n      return 'more ' + str;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n    if (str.match(matches[_i2])) {\n      return str + 'er';\n    }\n  }\n  return 'more ' + str;\n};\n\n// console.log(to_comparative('big'));\n\nmodule.exports = to_comparative;\n\n},{\"./convertable\":40}],44:[function(_dereq_,module,exports){\n'use strict';\n//convert 'cute' to 'cuteness'\n\nvar to_noun = function to_noun(w) {\n  var irregulars = {\n    'clean': 'cleanliness',\n    'naivety': 'naivety',\n    hurt: 'hurt'\n  };\n  if (!w) {\n    return '';\n  }\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w];\n  }\n  if (w.match(' ')) {\n    return w;\n  }\n  if (w.match(/w$/)) {\n    return w;\n  }\n  var transforms = [{\n    'reg': /y$/,\n    'repl': 'iness'\n  }, {\n    'reg': /le$/,\n    'repl': 'ility'\n  }, {\n    'reg': /ial$/,\n    'repl': 'y'\n  }, {\n    'reg': /al$/,\n    'repl': 'ality'\n  }, {\n    'reg': /ting$/,\n    'repl': 'ting'\n  }, {\n    'reg': /ring$/,\n    'repl': 'ring'\n  }, {\n    'reg': /bing$/,\n    'repl': 'bingness'\n  }, {\n    'reg': /sing$/,\n    'repl': 'se'\n  }, {\n    'reg': /ing$/,\n    'repl': 'ment'\n  }, {\n    'reg': /ess$/,\n    'repl': 'essness'\n  }, {\n    'reg': /ous$/,\n    'repl': 'ousness'\n  }];\n\n  for (var i = 0; i < transforms.length; i++) {\n    if (w.match(transforms[i].reg)) {\n      return w.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (w.match(/s$/)) {\n    return w;\n  }\n  return w + 'ness';\n};\n\n// console.log(to_noun(\"great\"))\n\nmodule.exports = to_noun;\n\n},{}],45:[function(_dereq_,module,exports){\n//turn 'quick' into 'quickest'\n'use strict';\n\nvar convertables = _dereq_('./convertable');\n\nvar irregulars = {\n  'nice': 'nicest',\n  'late': 'latest',\n  'hard': 'hardest',\n  'inner': 'innermost',\n  'outer': 'outermost',\n  'far': 'furthest',\n  'worse': 'worst',\n  'bad': 'worst',\n  'good': 'best',\n  'big': 'biggest'\n};\n\nvar dont = {\n  'overweight': 1,\n  'ready': 1\n};\n\nvar transforms = [{\n  'reg': /y$/i,\n  'repl': 'iest'\n}, {\n  'reg': /([aeiou])t$/i,\n  'repl': '$1ttest'\n}, {\n  'reg': /([aeou])de$/i,\n  'repl': '$1dest'\n}, {\n  'reg': /nge$/i,\n  'repl': 'ngest'\n}];\n\nvar matches = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/];\n\nvar not_matches = [/ary$/];\n\nvar generic_transformation = function generic_transformation(s) {\n  if (s.match(/e$/)) {\n    return s + 'st';\n  }\n  return s + 'est';\n};\n\nvar to_superlative = function to_superlative(str) {\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n\n  if (convertables.hasOwnProperty(str)) {\n    return generic_transformation(str);\n  }\n\n  if (dont.hasOwnProperty(str)) {\n    return 'most ' + str;\n  }\n\n  for (var _i = 0; _i < not_matches.length; _i++) {\n    if (str.match(not_matches[_i])) {\n      return 'most ' + str;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < matches.length; _i2++) {\n    if (str.match(matches[_i2])) {\n      if (irregulars.hasOwnProperty(str)) {\n        return irregulars[str];\n      }\n      return generic_transformation(str);\n    }\n  }\n  return 'most ' + str;\n};\n\n// console.log(to_superlative(\"great\"))\n\nmodule.exports = to_superlative;\n\n},{\"./convertable\":40}],46:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('../../../../data');\n//turn an adjective like 'soft' into a verb like 'soften'\n\nvar irregulars = {\n  red: 'redden',\n  sad: 'sadden',\n  fat: 'fatten'\n};\n\nvar convertable = data.verbConverts.reduce(function (h, str) {\n  h[str] = true;\n  return h;\n}, {});\n\nvar toVerb = function toVerb(str) {\n  //don't do words like 'green' -> 'greenen'\n  if (!convertable[str]) {\n    return str;\n  }\n  //irregulars\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  if (str.match(/e$/)) {\n    return str + 'n';\n  }\n  return str + 'en';\n};\nmodule.exports = toVerb;\n\n},{\"../../../../data\":6}],47:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar toAdjective = _dereq_('./toAdjective');\n\nvar Adverbs = function (_Text) {\n  _inherits(Adverbs, _Text);\n\n  function Adverbs() {\n    _classCallCheck(this, Adverbs);\n\n    return _possibleConstructorReturn(this, (Adverbs.__proto__ || Object.getPrototypeOf(Adverbs)).apply(this, arguments));\n  }\n\n  _createClass(Adverbs, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          adjectiveForm: toAdjective(t.normal),\n          normal: t.normal,\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Adverb+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Adverbs;\n}(Text);\n\nmodule.exports = Adverbs;\n\n},{\"../../index\":25,\"./toAdjective\":48}],48:[function(_dereq_,module,exports){\n//turns 'quickly' into 'quick'\n'use strict';\n\nvar irregulars = {\n  'idly': 'idle',\n  'sporadically': 'sporadic',\n  'basically': 'basic',\n  'grammatically': 'grammatical',\n  'alphabetically': 'alphabetical',\n  'economically': 'economical',\n  'conically': 'conical',\n  'politically': 'political',\n  'vertically': 'vertical',\n  'practically': 'practical',\n  'theoretically': 'theoretical',\n  'critically': 'critical',\n  'fantastically': 'fantastic',\n  'mystically': 'mystical',\n  'pornographically': 'pornographic',\n  'fully': 'full',\n  'jolly': 'jolly',\n  'wholly': 'whole'\n};\n\nvar transforms = [{\n  'reg': /bly$/i,\n  'repl': 'ble'\n}, {\n  'reg': /gically$/i,\n  'repl': 'gical'\n}, {\n  'reg': /([rsdh])ically$/i,\n  'repl': '$1ical'\n}, {\n  'reg': /ically$/i,\n  'repl': 'ic'\n}, {\n  'reg': /uly$/i,\n  'repl': 'ue'\n}, {\n  'reg': /ily$/i,\n  'repl': 'y'\n}, {\n  'reg': /(.{3})ly$/i,\n  'repl': '$1'\n}];\n\nvar toAdjective = function toAdjective(str) {\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < transforms.length; i++) {\n    if (str.match(transforms[i].reg)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  }\n  return str;\n};\n\n// console.log(toAdjective('quickly') === 'quick')\n// console.log(toAdjective('marvelously') === 'marvelous')\nmodule.exports = toAdjective;\n\n},{}],49:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Clauses = function (_Text) {\n  _inherits(Clauses, _Text);\n\n  function Clauses() {\n    _classCallCheck(this, Clauses);\n\n    return _possibleConstructorReturn(this, (Clauses.__proto__ || Object.getPrototypeOf(Clauses)).apply(this, arguments));\n  }\n\n  _createClass(Clauses, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#ClauseEnd');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Clauses;\n}(Text);\n\nmodule.exports = Clauses;\n\n},{\"../../index\":25}],50:[function(_dereq_,module,exports){\n'use strict';\n\n//the plumbing to turn two words into a contraction\n\nvar combine = function combine(a, b) {\n  b.whitespace.after = a.whitespace.after;\n  a.whitespace.after = '';\n  b.whitespace.before = '';\n  a.silent_term = a.text;\n  b.silent_term = b.text;\n  b.text = '';\n  a.tagAs('Contraction', 'new-contraction');\n  b.tagAs('Contraction', 'new-contraction');\n};\n\nvar contract = function contract(ts) {\n  if (ts.expanded === false || ts.match('#Contraction').found) {\n    return ts;\n  }\n  //he is -> he's\n  ts.match('(#Noun|#QuestionWord) is').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'s';\n    ls.contracted = true;\n  });\n  //he did -> he'd\n  ts.match('#PronNoun did').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n  //how do -> how'd\n  ts.match('#QuestionWord (did|do)').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n\n  //he would -> he'd\n  ts.match('#Noun (could|would)').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'d';\n    ls.contracted = true;\n  });\n  //they are -> they're\n  ts.match('(they|we|you) are').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'re';\n    ls.contracted = true;\n  });\n  //i am -> i'm\n  ts.match('i am').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'m';\n    ls.contracted = true;\n  });\n  //they will -> they'll\n  ts.match('(#Noun|#QuestionWord) will').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'ll';\n    ls.contracted = true;\n  });\n  //they have -> they've\n  ts.match('(they|we|you|i) have').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += '\\'ve';\n    ls.contracted = true;\n  });\n  //is not -> isn't\n  ts.match('(#Copula|#Modal|do) not').list.forEach(function (ls) {\n    combine(ls.terms[0], ls.terms[1]);\n    ls.terms[0].text += 'n\\'t';\n    ls.contracted = true;\n  });\n  return ts;\n};\n\nmodule.exports = contract;\n\n},{}],51:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _contract = _dereq_('./contract');\n\nvar _expand = function _expand(ts) {\n  if (ts.contracted === false) {\n    return ts;\n  }\n  ts.terms.forEach(function (t) {\n    if (t.silent_term) {\n      //this term also needs a space now too\n      if (!t.text) {\n        t.whitespace.before = ' ';\n      }\n      t._text = t.silent_term;\n      t.normalize();\n      t.silent_term = null;\n      t.unTag('Contraction', 'expanded');\n    }\n  });\n  return ts;\n};\n\nvar Contraction = function (_Terms) {\n  _inherits(Contraction, _Terms);\n\n  function Contraction() {\n    _classCallCheck(this, Contraction);\n\n    return _possibleConstructorReturn(this, (Contraction.__proto__ || Object.getPrototypeOf(Contraction)).apply(this, arguments));\n  }\n\n  _createClass(Contraction, [{\n    key: 'data',\n    value: function data() {\n      var expanded = _expand(this.clone());\n      var contracted = _contract(this.clone());\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        expanded: {\n          normal: expanded.out('normal'),\n          text: expanded.out('text')\n        },\n        contracted: {\n          normal: contracted.out('normal'),\n          text: contracted.out('text')\n        },\n        isContracted: !!this.contracted\n      };\n    }\n  }, {\n    key: 'expand',\n    value: function expand() {\n      return _expand(this);\n    }\n  }, {\n    key: 'contract',\n    value: function contract() {\n      return _contract(this);\n    }\n  }]);\n\n  return Contraction;\n}(Terms);\n\nmodule.exports = Contraction;\n\n},{\"../../paths\":37,\"./contract\":50}],52:[function(_dereq_,module,exports){\n'use strict';\n//find contractable, expanded-contractions\n\nvar find = function find(r) {\n  var remain = r.not('#Contraction');\n  var m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)');\n  m.concat(remain.match('(they|we|you|i) have'));\n  m.concat(remain.match('i am'));\n  m.concat(remain.match('(#Copula|#Modal|do) not'));\n  m.list.forEach(function (ts) {\n    ts.expanded = true;\n  });\n  return m;\n};\nmodule.exports = find;\n\n},{}],53:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Contraction = _dereq_('./contraction');\nvar findPossible = _dereq_('./findPossible');\n\nvar Contractions = function (_Text) {\n  _inherits(Contractions, _Text);\n\n  function Contractions() {\n    _classCallCheck(this, Contractions);\n\n    return _possibleConstructorReturn(this, (Contractions.__proto__ || Object.getPrototypeOf(Contractions)).apply(this, arguments));\n  }\n\n  _createClass(Contractions, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'contract',\n    value: function contract() {\n      this.list.forEach(function (ts) {\n        return ts.contract();\n      });\n      return this;\n    }\n  }, {\n    key: 'expand',\n    value: function expand() {\n      this.list.forEach(function (ts) {\n        return ts.expand();\n      });\n      return this;\n    }\n  }, {\n    key: 'contracted',\n    value: function contracted() {\n      this.list = this.list.filter(function (ts) {\n        return ts.contracted;\n      });\n      return this;\n    }\n  }, {\n    key: 'expanded',\n    value: function expanded() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.contracted;\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      //find currently-contracted\n      var found = r.match('#Contraction #Contraction #Contraction?');\n      found.list = found.list.map(function (ts) {\n        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n        c.contracted = true;\n        return c;\n      });\n      //find currently-expanded\n      var expanded = findPossible(r);\n      expanded.list.forEach(function (ts) {\n        var c = new Contraction(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n        c.contracted = false;\n        found.list.push(c);\n      });\n      found.sort('chronological');\n      //get nth element\n      if (typeof n === 'number') {\n        found = found.get(n);\n      }\n      return found;\n    }\n  }]);\n\n  return Contractions;\n}(Text);\n\nmodule.exports = Contractions;\n\n},{\"../../index\":25,\"./contraction\":51,\"./findPossible\":52}],54:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\n// const parsePunt = require('./parsePunt');\n// const parseSection = require('./parseSection');\n// const parseRelative = require('./parseRelative');\nvar parseDate = _dereq_('./parseDate');\n\nvar Date = function (_Terms) {\n  _inherits(Date, _Terms);\n\n  function Date(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Date);\n\n    var _this = _possibleConstructorReturn(this, (Date.__proto__ || Object.getPrototypeOf(Date)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.month = _this.match('#Month');\n    return _this;\n  }\n\n  _createClass(Date, [{\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        date: parseDate(this)\n      };\n    }\n  }]);\n\n  return Date;\n}(Terms);\n\nmodule.exports = Date;\n\n},{\"../../paths\":37,\"./parseDate\":58}],55:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Date = _dereq_('./date');\nvar weekdays = _dereq_('./weekday');\nvar months = _dereq_('./month');\n\nvar Dates = function (_Text) {\n  _inherits(Dates, _Text);\n\n  function Dates() {\n    _classCallCheck(this, Dates);\n\n    return _possibleConstructorReturn(this, (Dates.__proto__ || Object.getPrototypeOf(Dates)).apply(this, arguments));\n  }\n\n  _createClass(Dates, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'toShortForm',\n    value: function toShortForm() {\n      this.match('#Month').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        months.toShortForm(t);\n      });\n      this.match('#WeekDay').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        weekdays.toShortForm(t);\n      });\n      return this;\n    }\n  }, {\n    key: 'toLongForm',\n    value: function toLongForm() {\n      this.match('#Month').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        months.toLongForm(t);\n      });\n      this.match('#WeekDay').terms().list.forEach(function (ts) {\n        var t = ts.terms[0];\n        weekdays.toLongForm(t);\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      var dates = r.match('#Date+');\n      if (typeof n === 'number') {\n        dates = dates.get(n);\n      }\n      dates.list = dates.list.map(function (ts) {\n        return new Date(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return dates;\n    }\n  }]);\n\n  return Dates;\n}(Text);\n\nmodule.exports = Dates;\n\n},{\"../../index\":25,\"./date\":54,\"./month\":57,\"./weekday\":61}],56:[function(_dereq_,module,exports){\n'use strict';\n\n//follow the javascript scheme\n//january is 0\nexports.longMonths = {\n  'january': 0,\n  'february': 1,\n  'march': 2,\n  'april': 3,\n  'may': 4,\n  'june': 5,\n  'july': 6,\n  'august': 7,\n  'september': 8,\n  'october': 9,\n  'november': 10,\n  'december': 11\n};\nexports.shortMonths = {\n  'jan': 0,\n  'feb': 1,\n  'febr': 1,\n  'mar': 2,\n  'apr': 3,\n  'may': 4,\n  'jun': 5,\n  'jul': 6,\n  'aug': 7,\n  'sep': 8,\n  'sept': 8,\n  'oct': 9,\n  'nov': 10,\n  'dec': 11\n};\n\n},{}],57:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('./data');\nvar shortMonths = data.shortMonths;\nvar longMonths = data.longMonths;\n\nmodule.exports = {\n  index: function index(t) {\n    if (t.tag.Month) {\n      if (longMonths[t.normal] !== undefined) {\n        return longMonths[t.normal];\n      }\n      if (shortMonths[t.normal] !== undefined) {\n        return shortMonths[t.normal];\n      }\n    }\n    return null;\n  },\n  toShortForm: function toShortForm(t) {\n    if (t.tag.Month !== undefined) {\n      if (longMonths[t.normal] !== undefined) {\n        var shorten = Object.keys(shortMonths);\n        t.text = shorten[longMonths[t.normal]];\n      }\n    }\n    t.dirty = true;\n    return t;\n  },\n  toLongForm: function toLongForm(t) {\n    if (t.tag.Month !== undefined) {\n      if (shortMonths[t.normal] !== undefined) {\n        var longer = Object.keys(longMonths);\n        t.text = longer[shortMonths[t.normal]];\n      }\n    }\n    t.dirty = true;\n    return t;\n  }\n\n};\n\n},{\"./data\":56}],58:[function(_dereq_,module,exports){\n'use strict';\n\nvar parseTime = _dereq_('./parseTime');\nvar weekdays = _dereq_('./weekday');\nvar months = _dereq_('./month');\n//a hugely-conservative and incomplete first-pass for parsing written-dates\n\n//validate a day-of-month\nvar isDate = function isDate(num) {\n  if (num && num < 31 && num > 0) {\n    return true;\n  }\n  return false;\n};\n\n//please change this in one thousand years\nvar isYear = function isYear(num) {\n  if (num && num > 1000 && num < 3000) {\n    return true;\n  }\n  return false;\n};\n\n//\nvar parseDate = function parseDate(r) {\n  var result = {\n    month: null,\n    date: null,\n    weekday: null,\n    year: null,\n    named: null,\n    time: null\n  };\n  var m = r.match('(#Holiday|today|tomorrow|yesterday)');\n  if (m.found) {\n    result.named = m.out('normal');\n  }\n  m = r.match('#Month');\n  if (m.found) {\n    result.month = months.index(m.list[0].terms[0]);\n  }\n  m = r.match('#WeekDay');\n  if (m.found) {\n    result.weekday = weekdays.index(m.list[0].terms[0]);\n  }\n  m = r.match('#Time');\n  if (m.found) {\n    result.time = parseTime(r);\n    r.not('#Time'); //unsure\n  }\n  //january fifth 1992\n  m = r.match('#Month #Value #Year');\n  if (m.found) {\n    var numbers = m.values().numbers();\n    if (isDate(numbers[0])) {\n      result.date = numbers[0];\n    }\n    var year = parseInt(r.match('#Year').out('normal'), 10);\n    if (isYear(year)) {\n      result.year = year;\n    }\n  }\n  if (!m.found) {\n    //january fifth,  january 1992\n    m = r.match('#Month #Value');\n    if (m.found) {\n      var _numbers = m.values().numbers();\n      var num = _numbers[0];\n      if (isDate(num)) {\n        result.date = num;\n      }\n    }\n    //january 1992\n    m = r.match('#Month #Year');\n    if (m.found) {\n      var _num = parseInt(r.match('#Year').out('normal'), 10);\n      if (isYear(_num)) {\n        result.year = _num;\n      }\n    }\n  }\n\n  //fifth of january\n  m = r.match('#Value of #Month');\n  if (m.found) {\n    var _num2 = m.values().numbers()[0];\n    if (isDate(_num2)) {\n      result.date = _num2;\n    }\n  }\n  return result;\n};\nmodule.exports = parseDate;\n\n},{\"./month\":57,\"./parseTime\":59,\"./weekday\":61}],59:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar isHour = function isHour(num) {\n  if (num && num > 0 && num < 25) {\n    return true;\n  }\n  return false;\n};\nvar isMinute = function isMinute(num) {\n  if (num && num > 0 && num < 60) {\n    return true;\n  }\n  return false;\n};\n\nvar parseTime = function parseTime(r) {\n  var result = {\n    logic: null,\n    hour: null,\n    minute: null,\n    second: null,\n    timezone: null\n  };\n\n  var logic = r.match('(by|before|for|during|at|until|after) #Time').firstTerm();\n  if (logic.found) {\n    result.logic = logic.out('normal');\n  }\n\n  var time = r.match('#Time');\n  time.terms().list.forEach(function (ts) {\n    var t = ts.terms[0];\n    //3pm\n    var m = t.text.match(/([12]?[0-9]) ?(am|pm)/i);\n    if (m) {\n      result.hour = parseInt(m[1], 10);\n      if (m[2] === 'pm') {\n        result.hour += 12;\n      }\n      if (!isHour(result.hour)) {\n        result.hour = null;\n      }\n    }\n    //3:15\n    m = t.text.match(/([12]?[0-9]):([0-9][0-9]) ?(am|pm)?/i);\n    if (m) {\n      result.hour = parseInt(m[1], 10);\n      result.minute = parseInt(m[2], 10);\n      if (!isMinute(result.minute)) {\n        result.minute = null;\n      }\n      if (m[3] === 'pm') {\n        result.hour += 12;\n      }\n      if (!isHour(result.hour)) {\n        result.hour = null;\n      }\n    }\n  });\n  return result;\n};\nmodule.exports = parseTime;\n\n},{}],60:[function(_dereq_,module,exports){\n'use strict';\n\n//follow the javascript scheme\n//sunday is 0\nexports.longDays = {\n  'sunday': 0,\n  'monday': 1,\n  'tuesday': 2,\n  'wednesday': 3,\n  'thursday': 4,\n  'friday': 5,\n  'saturday': 6\n};\nexports.shortDays = {\n  'sun': 0,\n  'mon': 1,\n  'tues': 2,\n  'wed': 3,\n  'thurs': 4,\n  'fri': 5,\n  'sat': 6\n};\n\n},{}],61:[function(_dereq_,module,exports){\n'use strict';\n\nvar data = _dereq_('./data');\nvar shortDays = data.shortDays;\nvar longDays = data.longDays;\n\nmodule.exports = {\n  index: function index(t) {\n    if (t.tag.WeekDay) {\n      if (longDays[t.normal] !== undefined) {\n        return longDays[t.normal];\n      }\n      if (shortDays[t.normal] !== undefined) {\n        return shortDays[t.normal];\n      }\n    }\n    return null;\n  },\n  toShortForm: function toShortForm(t) {\n    if (t.tag.WeekDay) {\n      if (longDays[t.normal] !== undefined) {\n        var shorten = Object.keys(shortDays);\n        t.text = shorten[longDays[t.normal]];\n      }\n    }\n    return t;\n  },\n  toLongForm: function toLongForm(t) {\n    if (t.tag.WeekDay) {\n      if (shortDays[t.normal] !== undefined) {\n        var longer = Object.keys(longDays);\n        t.text = longer[shortDays[t.normal]];\n      }\n    }\n    return t;\n  }\n};\n\n},{\"./data\":60}],62:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar HashTags = function (_Text) {\n  _inherits(HashTags, _Text);\n\n  function HashTags() {\n    _classCallCheck(this, HashTags);\n\n    return _possibleConstructorReturn(this, (HashTags.__proto__ || Object.getPrototypeOf(HashTags)).apply(this, arguments));\n  }\n\n  _createClass(HashTags, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#HashTag').terms();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return HashTags;\n}(Text);\n\nmodule.exports = HashTags;\n\n},{\"../../index\":25}],63:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ngrams = _dereq_('./index');\nvar getGrams = _dereq_('./getGrams');\n\n//like an n-gram, but only the endings of matches\n\nvar EndGrams = function (_Ngrams) {\n  _inherits(EndGrams, _Ngrams);\n\n  function EndGrams() {\n    _classCallCheck(this, EndGrams);\n\n    return _possibleConstructorReturn(this, (EndGrams.__proto__ || Object.getPrototypeOf(EndGrams)).apply(this, arguments));\n  }\n\n  _createClass(EndGrams, null, [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4],\n        edge: 'end'\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new EndGrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return EndGrams;\n}(Ngrams);\n\nmodule.exports = EndGrams;\n\n},{\"./getGrams\":64,\"./index\":66}],64:[function(_dereq_,module,exports){\n'use strict';\n\nvar Gram = _dereq_('./gram');\n\n//do all grams of one size, on one termList\nvar getGrams = function getGrams(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [];\n  for (var i = 0; i < terms.length - n + 1; i++) {\n    var gram = new Gram(terms.slice(i, i + n));\n    arr.push(gram);\n  }\n  return arr;\n};\n\n//left-sided grams\nvar startGram = function startGram(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [new Gram(terms.slice(0, n))];\n  return arr;\n};\n\n//right-sided grams\nvar endGram = function endGram(fts, n) {\n  var terms = fts.terms;\n  if (terms.length < n) {\n    return [];\n  }\n  var arr = [new Gram(terms.slice(terms.length - n, terms.length))];\n  return arr;\n};\n\n//ngrams are consecutive terms of a specific size\nvar buildGrams = function buildGrams(r, options) {\n  options = options || {};\n  options.size = options.size || [1, 2, 3];\n  if (typeof options.size === 'number') {\n    options.size = [options.size];\n  }\n  var obj = {};\n  //collect and count all grams\n  options.size.forEach(function (size) {\n    r.list.forEach(function (ts) {\n      var grams = [];\n      if (options.edge === 'start') {\n        grams = startGram(ts, size);\n      } else if (options.edge === 'end') {\n        grams = endGram(ts, size);\n      } else {\n        grams = getGrams(ts, size);\n      }\n      grams.forEach(function (g) {\n        if (obj[g.key]) {\n          obj[g.key].inc();\n        } else {\n          obj[g.key] = g;\n        }\n      });\n    });\n  });\n\n  //flatten to an array\n  var arr = Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n  return arr;\n};\n\nmodule.exports = buildGrams;\n\n},{\"./gram\":65}],65:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\n\n//this is one-or-more terms together, sorted by frequency\n\nvar Gram = function (_Terms) {\n  _inherits(Gram, _Terms);\n\n  function Gram(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Gram);\n\n    //string to sort/uniq by\n    var _this = _possibleConstructorReturn(this, (Gram.__proto__ || Object.getPrototypeOf(Gram)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.key = _this.out('normal');\n    //bigram/trigram/etc\n    _this.size = arr.length;\n    //number of occurances\n    _this.count = 1;\n    return _this;\n  }\n\n  _createClass(Gram, [{\n    key: 'inc',\n    value: function inc() {\n      this.count += 1;\n    }\n  }]);\n\n  return Gram;\n}(Terms);\n\nmodule.exports = Gram;\n\n},{\"../../paths\":37}],66:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar getGrams = _dereq_('./getGrams');\n\nvar Ngrams = function (_Text) {\n  _inherits(Ngrams, _Text);\n\n  function Ngrams() {\n    _classCallCheck(this, Ngrams);\n\n    return _possibleConstructorReturn(this, (Ngrams.__proto__ || Object.getPrototypeOf(Ngrams)).apply(this, arguments));\n  }\n\n  _createClass(Ngrams, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return {\n          normal: ts.out('normal'),\n          count: ts.count,\n          size: ts.size\n        };\n      });\n    }\n  }, {\n    key: 'unigrams',\n    value: function unigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 1;\n      });\n      return this;\n    }\n  }, {\n    key: 'bigrams',\n    value: function bigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 2;\n      });\n      return this;\n    }\n  }, {\n    key: 'trigrams',\n    value: function trigrams() {\n      this.list = this.list.filter(function (g) {\n        return g.size === 3;\n      });\n      return this;\n    }\n\n    //default sort the ngrams\n\n  }, {\n    key: 'sort',\n    value: function sort() {\n      this.list = this.list.sort(function (a, b) {\n        if (a.count > b.count) {\n          return -1;\n        }\n        //(tie-braker)\n        if (a.count === b.count && (a.size > b.size || a.key.length > b.key.length)) {\n          return -1;\n        }\n        return 1;\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4]\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new Ngrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Ngrams;\n}(Text);\n\nmodule.exports = Ngrams;\n\n},{\"../../index\":25,\"./getGrams\":64}],67:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Ngrams = _dereq_('./index');\nvar getGrams = _dereq_('./getGrams');\n\n//like an n-gram, but only the startings of matches\n\nvar StartGrams = function (_Ngrams) {\n  _inherits(StartGrams, _Ngrams);\n\n  function StartGrams() {\n    _classCallCheck(this, StartGrams);\n\n    return _possibleConstructorReturn(this, (StartGrams.__proto__ || Object.getPrototypeOf(StartGrams)).apply(this, arguments));\n  }\n\n  _createClass(StartGrams, null, [{\n    key: 'find',\n    value: function find(r, n, size) {\n      var opts = {\n        size: [1, 2, 3, 4],\n        edge: 'start'\n      };\n      //only look for bigrams, for example\n      if (size) {\n        opts.size = [size];\n      }\n      //fetch them\n      var arr = getGrams(r, opts);\n      r = new StartGrams(arr);\n      //default sort\n      r.sort();\n      //grab top one, or something\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return StartGrams;\n}(Ngrams);\n\nmodule.exports = StartGrams;\n\n},{\"./getGrams\":64,\"./index\":66}],68:[function(_dereq_,module,exports){\n'use strict';\n\nvar uncountables = _dereq_('../../../tries').utils.uncountable;\n\n//certain words can't be plural, like 'peace'\nvar hasPlural = function hasPlural(t) {\n  //end quick\n  if (!t.tag.Noun) {\n    return false;\n  }\n  if (t.tag.Plural) {\n    return true;\n  }\n  //is it potentially plural?\n  var noPlural = ['Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n  for (var i = 0; i < noPlural.length; i++) {\n    if (t.tag[noPlural[i]]) {\n      return false;\n    }\n  }\n  //terms known as un-inflectable, like 'peace'\n  if (uncountables.has(t.normal)) {\n    return false;\n  }\n  return true;\n};\n\nmodule.exports = hasPlural;\n\n},{\"../../../tries\":235}],69:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Noun = _dereq_('./noun');\n\nvar Nouns = function (_Text) {\n  _inherits(Nouns, _Text);\n\n  function Nouns() {\n    _classCallCheck(this, Nouns);\n\n    return _possibleConstructorReturn(this, (Nouns.__proto__ || Object.getPrototypeOf(Nouns)).apply(this, arguments));\n  }\n\n  _createClass(Nouns, [{\n    key: 'isPlural',\n    value: function isPlural() {\n      return this.list.map(function (ts) {\n        return ts.isPlural();\n      });\n    }\n  }, {\n    key: 'hasPlural',\n    value: function hasPlural() {\n      return this.list.map(function (ts) {\n        return ts.hasPlural();\n      });\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      this.list.forEach(function (ts) {\n        return ts.toPlural();\n      });\n      return this;\n    }\n  }, {\n    key: 'toSingular',\n    value: function toSingular() {\n      this.list.forEach(function (ts) {\n        return ts.toSingular();\n      });\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.clauses();\n      r = r.match('#Noun+');\n      r = r.not('#Pronoun');\n      r = r.not('(#Month|#WeekDay)'); //allow Durations, Holidays\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Noun(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Nouns;\n}(Text);\n\nmodule.exports = Nouns;\n\n},{\"../../index\":25,\"./noun\":77}],70:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../data').irregular_plurals;\nvar rules = _dereq_('./methods/data/indicators');\n\nvar knownPlural = {\n  i: false,\n  he: false,\n  she: false,\n  we: true,\n  they: true\n};\n\n//is it potentially plural?\nvar noPlural = ['Place', 'Value', 'Person', 'Month', 'WeekDay', 'RelativeDay', 'Holiday'];\n//first, try to guess based on existing tags\nvar couldEvenBePlural = function couldEvenBePlural(t) {\n  for (var i = 0; i < noPlural.length; i++) {\n    if (t.tag[noPlural[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar isPlural = function isPlural(t) {\n  var str = t.normal;\n\n  //whitelist a few easy ones\n  if (knownPlural[str] !== undefined) {\n    return knownPlural[str];\n  }\n  //inspect the existing tags to see if a plural is valid\n  if (!couldEvenBePlural(t)) {\n    return false;\n  }\n  //handle 'mayors of chicago'\n  var preposition = str.match(/([a-z]*) (of|in|by|for) [a-z]/);\n  if (preposition && preposition[1]) {\n    str = preposition[1];\n  }\n  // if it's a known irregular case\n  if (irregulars.toSingle[str]) {\n    return true;\n  }\n  if (irregulars.toPlural[str]) {\n    return false;\n  }\n  //check the suffix-type rules for indications\n  for (var i = 0; i < rules.plural_indicators.length; i++) {\n    if (str.match(rules.plural_indicators[i])) {\n      return true;\n    }\n  }\n  for (var _i = 0; _i < rules.singular_indicators.length; _i++) {\n    if (str.match(rules.singular_indicators[_i])) {\n      return false;\n    }\n  }\n  // a fallback 'looks check plural' rule..\n  if (str.match(/s$/) && !str.match(/ss$/) && str.length > 3) {\n    //needs some lovin'\n    return true;\n  }\n  return false;\n};\n\n// console.log(is_plural('octopus') === false)\n// console.log(is_plural('octopi') === true)\n// console.log(is_plural('eyebrow') === false)\n// console.log(is_plural('eyebrows') === true)\n// console.log(is_plural('child') === false)\n// console.log(is_plural('children') === true)\n// console.log(is_plural('days') === true)\n\nmodule.exports = isPlural;\n\n},{\"../../../data\":6,\"./methods/data/indicators\":72}],71:[function(_dereq_,module,exports){\n'use strict';\n\n//chooses an indefinite aricle 'a/an' for a word\n\nvar irregulars = {\n  'hour': 'an',\n  'heir': 'an',\n  'heirloom': 'an',\n  'honest': 'an',\n  'honour': 'an',\n  'honor': 'an',\n  'uber': 'an' //german u\n};\n//pronounced letters of acronyms that get a 'an'\nvar an_acronyms = {\n  a: true,\n  e: true,\n  f: true,\n  h: true,\n  i: true,\n  l: true,\n  m: true,\n  n: true,\n  o: true,\n  r: true,\n  s: true,\n  x: true\n};\n//'a' regexes\nvar a_regexs = [/^onc?e/i, //'wu' sound of 'o'\n/^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n/^eul/i];\n\nvar makeArticle = function makeArticle(t) {\n  var str = t.normal;\n\n  //explicit irregular forms\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  }\n  //spelled-out acronyms\n  var firstLetter = str.substr(0, 1);\n  if (t.isAcronym() && an_acronyms.hasOwnProperty(firstLetter)) {\n    return 'an';\n  }\n  //'a' regexes\n  for (var i = 0; i < a_regexs.length; i++) {\n    if (str.match(a_regexs[i])) {\n      return 'a';\n    }\n  }\n  //basic vowel-startings\n  if (str.match(/^[aeiou]/i)) {\n    return 'an';\n  }\n  return 'a';\n};\n\nmodule.exports = makeArticle;\n\n},{}],72:[function(_dereq_,module,exports){\n'use strict';\n//similar to plural/singularize rules, but not the same\n\nvar plural_indicators = [/(^v)ies$/i, /ises$/i, /ives$/i, /(antenn|formul|nebul|vertebr|vit)ae$/i, /(octop|vir|radi|nucle|fung|cact|stimul)i$/i, /(buffal|tomat|tornad)oes$/i, /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i, /(vert|ind|cort)ices$/i, /(matr|append)ices$/i, /(x|ch|ss|sh|s|z|o)es$/i, /men$/i, /news$/i, /.tia$/i, /(^f)ves$/i, /(lr)ves$/i, /(^aeiouy|qu)ies$/i, /(m|l)ice$/i, /(cris|ax|test)es$/i, /(alias|status)es$/i, /ics$/i];\n\n//similar to plural/singularize rules, but not the same\nvar singular_indicators = [/(ax|test)is$/i, /(octop|vir|radi|nucle|fung|cact|stimul)us$/i, /(octop|vir)i$/i, /(rl)f$/i, /(alias|status)$/i, /(bu)s$/i, /(al|ad|at|er|et|ed|ad)o$/i, /(ti)um$/i, /(ti)a$/i, /sis$/i, /(?:(^f)fe|(lr)f)$/i, /hive$/i, /(^aeiouy|qu)y$/i, /(x|ch|ss|sh|z)$/i, /(matr|vert|ind|cort)(ix|ex)$/i, /(m|l)ouse$/i, /(m|l)ice$/i, /(antenn|formul|nebul|vertebr|vit)a$/i, /.sis$/i, /^(?!talis|.*hu)(.*)man$/i];\nmodule.exports = {\n  singular_indicators: singular_indicators,\n  plural_indicators: plural_indicators\n};\n\n},{}],73:[function(_dereq_,module,exports){\n'use strict';\n\n//patterns for turning 'bus' to 'buses'\nmodule.exports = [[/(ax|test)is$/i, '$1es'], [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'], [/(octop|vir)i$/i, '$1i'], [/(kn|l|w)ife$/i, '$1ives'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'], [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'], [/(alias|status)$/i, '$1es'], [/(bu)s$/i, '$1ses'], [/(al|ad|at|er|et|ed|ad)o$/i, '$1oes'], [/([ti])um$/i, '$1a'], [/([ti])a$/i, '$1a'], [/sis$/i, 'ses'], [/(hive)$/i, '$1s'], [/([^aeiouy]|qu)y$/i, '$1ies'], [/(x|ch|ss|sh|s|z)$/i, '$1es'], [/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/([m|l])ouse$/i, '$1ice'], [/([m|l])ice$/i, '$1ice'], [/^(ox)$/i, '$1en'], [/^(oxen)$/i, '$1'], [/(quiz)$/i, '$1zes'], [/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/(sis)$/i, 'ses'], [/^(?!talis|.*hu)(.*)man$/i, '$1men'], [/(.*)/i, '$1s']].map(function (a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n},{}],74:[function(_dereq_,module,exports){\n'use strict';\n\n//patterns for turning 'dwarves' to 'dwarf'\nmodule.exports = [[/([^v])ies$/i, '$1y'], [/ises$/i, 'isis'], [/(kn|[^o]l|w)ives$/i, '$1ife'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'], [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'], [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'], [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'], [/(buffal|tomat|tornad)(oes)$/i, '$1o'], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, '$1sis'], [/(vert|ind|cort)(ices)$/i, '$1ex'], [/(matr|append)(ices)$/i, '$1ix'], [/(x|ch|ss|sh|s|z|o)es$/i, '$1'], [/men$/i, 'man'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/([m|l])ice$/i, '$1ouse'], [/(cris|ax|test)es$/i, '$1is'], [/(alias|status)es$/i, '$1'], [/(ss)$/i, '$1'], [/(ics)$/i, '$1'], [/s$/i, '']].map(function (a) {\n  return {\n    reg: a[0],\n    repl: a[1]\n  };\n});\n\n},{}],75:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../data').irregular_plurals.toPlural;\nvar pluralRules = _dereq_('./data/pluralRules');\n\n//turn 'shoe' into 'shoes'\nvar pluralize = function pluralize(str) {\n  //irregular\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      var better_first = pluralize(first); //recursive\n      return better_first + str.replace(first, '');\n    }\n  }\n\n  //regular rule-based inflector\n  for (var i = 0; i < pluralRules.length; i++) {\n    if (str.match(pluralRules[i].reg)) {\n      return str.replace(pluralRules[i].reg, pluralRules[i].repl);\n    }\n  }\n  return null;\n};\n\nmodule.exports = pluralize;\n\n},{\"../../../../data\":6,\"./data/pluralRules\":73}],76:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../data').irregular_plurals.toSingle;\nvar singleRules = _dereq_('./data/singleRules');\n\n//turn 'shoes' into 'shoe'\nvar toSingle = function toSingle(str) {\n  //irregular\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  //inflect first word of preposition-phrase\n  if (str.match(/([a-z]*) (of|in|by|for) [a-z]/)) {\n    var first = (str.match(/^([a-z]*) (of|in|by|for) [a-z]/) || [])[1];\n    if (first) {\n      var better_first = toSingle(first); //recursive\n      return better_first + str.replace(first, '');\n    }\n  }\n\n  //regular rule-based inflector\n  for (var i = 0; i < singleRules.length; i++) {\n    if (str.match(singleRules[i].reg)) {\n      return str.replace(singleRules[i].reg, singleRules[i].repl);\n    }\n  }\n  return null;\n};\n\n// console.log(toSingle('gases') === 'gas')\nmodule.exports = toSingle;\n// console.log(toSingle('days'))\n\n},{\"../../../../data\":6,\"./data/singleRules\":74}],77:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _hasPlural = _dereq_('./hasPlural');\nvar _isPlural = _dereq_('./isPlural');\nvar makeArticle = _dereq_('./makeArticle');\nvar pluralize = _dereq_('./methods/pluralize');\nvar singularize = _dereq_('./methods/singularize');\n\nvar Noun = function (_Terms) {\n  _inherits(Noun, _Terms);\n\n  function Noun(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Noun);\n\n    var _this = _possibleConstructorReturn(this, (Noun.__proto__ || Object.getPrototypeOf(Noun)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.t = _this.terms[0];\n    return _this;\n  }\n\n  _createClass(Noun, [{\n    key: 'article',\n    value: function article() {\n      var t = this.t;\n      return makeArticle(t);\n    }\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      var t = this.t;\n      return _isPlural(t);\n    }\n  }, {\n    key: 'hasPlural',\n    value: function hasPlural() {\n      var t = this.t;\n      return _hasPlural(t);\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      var t = this.t;\n      if (_hasPlural(t) && !_isPlural(t)) {\n        t.text = pluralize(t.text);\n        t.unTag('Plural', 'toPlural');\n        t.tagAs('Singular', 'toPlural');\n      }\n      return this;\n    }\n  }, {\n    key: 'toSingular',\n    value: function toSingular() {\n      var t = this.t;\n      if (_isPlural(t)) {\n        t.text = singularize(t.text);\n        t.unTag('Plural', 'toSingular');\n        t.tagAs('Singular', 'toSingular');\n      }\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return {\n        article: this.article(),\n        singular: this.toSingular().out('normal'),\n        plural: this.toPlural().out('normal')\n      };\n    }\n  }]);\n\n  return Noun;\n}(Terms);\n\nmodule.exports = Noun;\n\n},{\"../../paths\":37,\"./hasPlural\":68,\"./isPlural\":70,\"./makeArticle\":71,\"./methods/pluralize\":75,\"./methods/singularize\":76}],78:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Organizations = function (_Text) {\n  _inherits(Organizations, _Text);\n\n  function Organizations() {\n    _classCallCheck(this, Organizations);\n\n    return _possibleConstructorReturn(this, (Organizations.__proto__ || Object.getPrototypeOf(Organizations)).apply(this, arguments));\n  }\n\n  _createClass(Organizations, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#Organization+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Organizations;\n}(Text);\n\nmodule.exports = Organizations;\n\n},{\"../../index\":25}],79:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../../paths').log;\n// make a statistical assumption about the gender of the person based on their given name\n// used for pronoun resolution only.\n// not intended for classification, or discrimination of people.\nvar gender = function gender(firstName) {\n  if (!firstName) {\n    return null;\n  }\n  //statistical guesses\n  if (firstName.match(/.(i|ee|[a|e]y|a)$/i)) {\n    //this is almost-always true\n    log.tell('Female-name suffix');\n    return 'Female';\n  }\n  if (firstName.match(/[ou]$/i)) {\n    //if it ends in a 'oh or uh', male\n    log.tell('Male-name suffix');\n    return 'Male';\n  }\n  if (firstName.match(/(nn|ll|tt)/i)) {\n    //if it has double-consonants, female\n    log.tell('Female-name consonant-doubling');\n    return 'Female';\n  }\n  // name not recognized, or recognized as of indeterminate gender\n  return null;\n};\nmodule.exports = gender;\n\n},{\"../../paths\":37}],80:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Person = _dereq_('./person');\n//this is used for pronoun and honorifics, and not intented for more-than grammatical use (see #117)\n\nvar People = function (_Text) {\n  _inherits(People, _Text);\n\n  function People() {\n    _classCallCheck(this, People);\n\n    return _possibleConstructorReturn(this, (People.__proto__ || Object.getPrototypeOf(People)).apply(this, arguments));\n  }\n\n  _createClass(People, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'pronoun',\n    value: function pronoun() {\n      return this.list.map(function (ts) {\n        return ts.pronoun();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      var people = r.clauses();\n      people = people.match('#Person+');\n      if (typeof n === 'number') {\n        people = people.get(n);\n      }\n      people.list = people.list.map(function (ts) {\n        return new Person(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return people;\n    }\n  }]);\n\n  return People;\n}(Text);\n\nmodule.exports = People;\n\n},{\"../../index\":25,\"./person\":81}],81:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _guessGender = _dereq_('./guessGender');\nvar log = _dereq_('../../paths').log;\n\nvar Person = function (_Terms) {\n  _inherits(Person, _Terms);\n\n  _createClass(Person, [{\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        firstName: this.firstName.out('normal'),\n        middleName: this.middleName.out('normal'),\n        lastName: this.lastName.out('normal'),\n        genderGuess: this.guessGender(),\n        pronoun: this.pronoun(),\n        honorifics: this.honorifics.out('array')\n      };\n    }\n  }]);\n\n  function Person(arr, lexicon, refText, refTerms) {\n    var _ret;\n\n    _classCallCheck(this, Person);\n\n    var _this = _possibleConstructorReturn(this, (Person.__proto__ || Object.getPrototypeOf(Person)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.firstName = _this.match('#FirstName+');\n    _this.middleName = _this.match('#Acronym+');\n    _this.honorifics = _this.match('#Honorific');\n    _this.lastName = _this.match('#LastName+');\n    //assume first-last\n    if (!_this.firstName.found && _this.length > 1) {\n      var m = _this.not('(#Acronym|#Honorific)');\n      _this.firstName = m.first();\n      _this.lastName = m.last();\n    }\n    return _ret = _this, _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Person, [{\n    key: 'guessGender',\n    value: function guessGender() {\n      //try known honorifics\n      if (this.honorifics.match('(mr|mister|sr|sir|jr)').found) {\n        log.tell('known male honorific');\n        return 'Male';\n      }\n      if (this.honorifics.match('(mrs|miss|ms|misses|mme|mlle)').found) {\n        log.tell('known female honorific');\n        return 'Female';\n      }\n      //try known first-names\n      if (this.firstName.match('#MaleName').found) {\n        log.tell('known male name');\n        return 'Male';\n      }\n      if (this.firstName.match('#FemaleName').found) {\n        log.tell('known female name');\n        return 'Female';\n      }\n      //look-for regex clues\n      var str = this.firstName.out('normal');\n      return _guessGender(str);\n    }\n  }, {\n    key: 'pronoun',\n    value: function pronoun() {\n      var str = this.firstName.out('normal');\n      var g = this.guessGender(str);\n      if (g === 'Male') {\n        return 'he';\n      }\n      if (g === 'Female') {\n        return 'she';\n      }\n      return 'they';\n    }\n  }, {\n    key: 'root',\n    value: function root() {\n      var first = this.firstName.out('root');\n      var last = this.lastName.out('root');\n      if (first && last) {\n        return first + ' ' + last;\n      }\n      return last || first || this.out('root');\n    }\n  }]);\n\n  return Person;\n}(Terms);\n\nmodule.exports = Person;\n\n},{\"../../paths\":37,\"./guessGender\":79}],82:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar PhoneNumbers = function (_Text) {\n  _inherits(PhoneNumbers, _Text);\n\n  function PhoneNumbers() {\n    _classCallCheck(this, PhoneNumbers);\n\n    return _possibleConstructorReturn(this, (PhoneNumbers.__proto__ || Object.getPrototypeOf(PhoneNumbers)).apply(this, arguments));\n  }\n\n  _createClass(PhoneNumbers, [{\n    key: 'data',\n    value: function data() {\n      return this.terms().list.map(function (ts) {\n        var t = ts.terms[0];\n        return {\n          text: t.text\n        };\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#PhoneNumber+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return PhoneNumbers;\n}(Text);\n\nmodule.exports = PhoneNumbers;\n\n},{\"../../index\":25}],83:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Place = _dereq_('./place');\n\nvar Places = function (_Text) {\n  _inherits(Places, _Text);\n\n  function Places() {\n    _classCallCheck(this, Places);\n\n    return _possibleConstructorReturn(this, (Places.__proto__ || Object.getPrototypeOf(Places)).apply(this, arguments));\n  }\n\n  _createClass(Places, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.splitAfter('#Comma');\n      r = r.match('#Place+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Place(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Places;\n}(Text);\n\nmodule.exports = Places;\n\n},{\"../../index\":25,\"./place\":84}],84:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\n\nvar Place = function (_Terms) {\n  _inherits(Place, _Terms);\n\n  function Place(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Place);\n\n    var _this = _possibleConstructorReturn(this, (Place.__proto__ || Object.getPrototypeOf(Place)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.city = _this.match('#City');\n    _this.country = _this.match('#Country');\n    return _this;\n  }\n\n  _createClass(Place, [{\n    key: 'root',\n    value: function root() {\n      return this.city.out('root');\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Place';\n    }\n  }]);\n\n  return Place;\n}(Terms);\n\nmodule.exports = Place;\n\n},{\"../../paths\":37}],85:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Quotations = function (_Text) {\n  _inherits(Quotations, _Text);\n\n  function Quotations() {\n    _classCallCheck(this, Quotations);\n\n    return _possibleConstructorReturn(this, (Quotations.__proto__ || Object.getPrototypeOf(Quotations)).apply(this, arguments));\n  }\n\n  _createClass(Quotations, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Quotation+');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Quotations;\n}(Text);\n\nmodule.exports = Quotations;\n\n},{\"../../index\":25}],86:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Sentence = _dereq_('./sentence');\n\nvar Sentences = function (_Text) {\n  _inherits(Sentences, _Text);\n\n  function Sentences(arr, lexicon, reference) {\n    _classCallCheck(this, Sentences);\n\n    return _possibleConstructorReturn(this, (Sentences.__proto__ || Object.getPrototypeOf(Sentences)).call(this, arr, lexicon, reference));\n  }\n  /** conjugate the main/first verb*/\n\n\n  _createClass(Sentences, [{\n    key: 'toPastTense',\n    value: function toPastTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPastTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPresentTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toFutureTense();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n    /** negative/positive */\n\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toNegative();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      this.list = this.list.map(function (ts) {\n        ts = ts.toPositive();\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return this;\n    }\n\n    /** look for 'was _ by' patterns */\n\n  }, {\n    key: 'isPassive',\n    value: function isPassive() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isPassive();\n      });\n      return this;\n    }\n    /** add a word to the start */\n\n  }, {\n    key: 'prepend',\n    value: function prepend(str) {\n      this.list = this.list.map(function (ts) {\n        return ts.prepend(str);\n      });\n      return this;\n    }\n    /** add a word to the end */\n\n  }, {\n    key: 'append',\n    value: function append(str) {\n      this.list = this.list.map(function (ts) {\n        return ts.append(str);\n      });\n      return this;\n    }\n\n    /** convert between question/statement/exclamation*/\n\n  }, {\n    key: 'toExclamation',\n    value: function toExclamation() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('!');\n      });\n      return this;\n    }\n  }, {\n    key: 'toQuestion',\n    value: function toQuestion() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('?');\n      });\n      return this;\n    }\n  }, {\n    key: 'toStatement',\n    value: function toStatement() {\n      this.list.forEach(function (ts) {\n        ts.setPunctuation('.');\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Sentence(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      // return new Text(r.list, r.lexicon, r.reference);\n      return r;\n    }\n  }]);\n\n  return Sentences;\n}(Text);\n\nmodule.exports = Sentences;\n\n},{\"../../index\":25,\"./sentence\":88}],87:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../index');\n\nvar Questions = function (_Text) {\n  _inherits(Questions, _Text);\n\n  function Questions() {\n    _classCallCheck(this, Questions);\n\n    return _possibleConstructorReturn(this, (Questions.__proto__ || Object.getPrototypeOf(Questions)).apply(this, arguments));\n  }\n\n  _createClass(Questions, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      var list = r.list.filter(function (ts) {\n        return ts.last().endPunctuation() === '?';\n      });\n      return new Text(list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Questions;\n}(Text);\n\nmodule.exports = Questions;\n\n},{\"../index\":86}],88:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _toNegative = _dereq_('./toNegative');\nvar _toPositive = _dereq_('./toPositive');\nvar Verb = _dereq_('../verbs/verb');\nvar insert = _dereq_('./smartInsert');\n\nvar Sentence = function (_Terms) {\n  _inherits(Sentence, _Terms);\n\n  function Sentence(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Sentence);\n\n    return _possibleConstructorReturn(this, (Sentence.__proto__ || Object.getPrototypeOf(Sentence)).call(this, arr, lexicon, refText, refTerms));\n  }\n  /** inflect the main/first noun*/\n\n\n  _createClass(Sentence, [{\n    key: 'toSingular',\n    value: function toSingular() {\n      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n      nouns.things().toSingular();\n      return this;\n    }\n  }, {\n    key: 'toPlural',\n    value: function toPlural() {\n      var nouns = this.match('#Noun').match('!#Pronoun').firstTerm();\n      nouns.things().toPlural();\n      return this;\n    }\n\n    /** find the first important verbPhrase. returns a Term object */\n\n  }, {\n    key: 'mainVerb',\n    value: function mainVerb() {\n      var terms = this.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n      if (terms.found) {\n        terms = terms.list[0].terms;\n        return new Verb(terms, this.lexicon, this.refText, this.refTerms);\n      }\n      return null;\n    }\n\n    /** sentence tense conversion**/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        //this is really ugly..\n        var start = verb.out('normal');\n        verb.toPastTense();\n        // console.log(verb.parentTerms.out() + '!');\n        var end = verb.out('normal');\n        var r = this.parentTerms.replace(start, end);\n        return r;\n      }\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        var start = verb.out('normal');\n        verb.toPresentTense();\n        var end = verb.out('normal');\n        return this.parentTerms.replace(start, end);\n      }\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      var verb = this.mainVerb();\n      if (verb) {\n        var start = verb.out('normal');\n        verb.toFutureTense();\n        var end = verb.out('normal');\n        return this.parentTerms.replace(start, end);\n      }\n      return this;\n    }\n\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      return this.match('#Negative').list.length === 1;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      if (this.isNegative()) {\n        return this;\n      }\n      return _toNegative(this);\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      if (!this.isNegative()) {\n        return this;\n      }\n      return _toPositive(this);\n    }\n\n    /** smarter insert methods*/\n\n  }, {\n    key: 'append',\n    value: function append(str) {\n      return insert.append(this, str);\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend(str) {\n      return insert.prepend(this, str);\n    }\n\n    /** punctuation */\n\n  }, {\n    key: 'setPunctuation',\n    value: function setPunctuation(punct) {\n      var last = this.terms[this.terms.length - 1];\n      last.setPunctuation(punct);\n    }\n  }, {\n    key: 'getPunctuation',\n    value: function getPunctuation() {\n      var last = this.terms[this.terms.length - 1];\n      return last.getPunctuation();\n    }\n    /** look for 'was _ by' patterns */\n\n  }, {\n    key: 'isPassive',\n    value: function isPassive() {\n      return this.match('was #Adverb? #PastTense #Adverb? by').found; //haha\n    }\n  }]);\n\n  return Sentence;\n}(Terms);\n\nmodule.exports = Sentence;\n\n},{\"../../paths\":37,\"../verbs/verb\":129,\"./smartInsert\":89,\"./toNegative\":91,\"./toPositive\":92}],89:[function(_dereq_,module,exports){\n'use strict';\n\n//sticking words at the start sentence-sensitive\n\nvar prepend = function prepend(ts, str) {\n  var firstTerm = ts.terms[0];\n  ts.insertAt(0, str);\n  //handle titlecase of first-word\n  if (firstTerm.text.match(/^[A-Z]/)) {\n    //is it titlecased because it should be?\n    if (firstTerm.needsTitleCase() === false) {\n      firstTerm.toLowerCase();\n    }\n    var newTerm = ts.terms[0];\n    newTerm.toTitleCase();\n  }\n  return ts;\n};\n\n//sticking words on end sentence-sensitive\nvar append = function append(ts, str) {\n  var endTerm = ts.terms[ts.terms.length - 1];\n  //move the sentence punctuation to the end\n  var punct = endTerm.endPunctuation();\n  if (punct) {\n    endTerm.killPunctuation();\n  }\n  ts.insertAt(ts.terms.length, str);\n  var newTerm = ts.terms[ts.terms.length - 1];\n  if (punct) {\n    newTerm.text += punct;\n  }\n  //move over sentence-ending whitespace too\n  if (endTerm.whitespace.after) {\n    newTerm.whitespace.after = endTerm.whitespace.after;\n    endTerm.whitespace.after = '';\n  }\n  return ts;\n};\n\nmodule.exports = {\n  append: append,\n  prepend: prepend\n};\n\n},{}],90:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../index');\n\nvar Statements = function (_Text) {\n  _inherits(Statements, _Text);\n\n  function Statements() {\n    _classCallCheck(this, Statements);\n\n    return _possibleConstructorReturn(this, (Statements.__proto__ || Object.getPrototypeOf(Statements)).apply(this, arguments));\n  }\n\n  _createClass(Statements, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.all();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      var list = r.list.filter(function (ts) {\n        return ts.last().endPunctuation() !== '?';\n      });\n      return new Text(list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Statements;\n}(Text);\n\nmodule.exports = Statements;\n\n},{\"../index\":86}],91:[function(_dereq_,module,exports){\n'use strict';\n\n//these terms are nicer ways to negate a sentence\n//ie. john always walks -> john always doesn't walk\n\nvar logicalNegate = {\n  'everyone': 'no one',\n  'everybody': 'nobody',\n  'someone': 'no one',\n  'somebody': 'nobody',\n  // everything:\"nothing\",\n  'always': 'never'\n};\n\n//different rule for i/we/they/you + infinitive\n//that is, 'i walk' -> 'i don\\'t walk', not 'I not walk'\nvar toNegative = function toNegative(ts) {\n  var lg = ts.match('(everyone|everybody|someone|somebody|always)').first();\n  if (lg.found && logicalNegate[lg.out('normal')]) {\n    var found = lg.out('normal');\n    // ts = ts.replace(found, logicalNegate[found]);\n    ts = ts.match(found).replaceWith(logicalNegate[found]).list[0];\n    return ts.parentTerms;\n  }\n  //negate the main verb of the sentence\n  var vb = ts.mainVerb();\n  if (vb) {\n    vb.toNegative();\n  }\n  return ts;\n};\nmodule.exports = toNegative;\n\n},{}],92:[function(_dereq_,module,exports){\n'use strict';\n\n//ie. john never walks -> john always walks\n//nobody/noone are ambiguous logically (somebody? / everybody?)\n\nvar logical = {\n  'never': 'always',\n  'nothing': 'everything'\n};\n\nvar toPositive = function toPositive(ts) {\n  var m = ts.match('(never|nothing)').first();\n  if (m.found) {\n    var str = m.out('normal');\n    if (logical[str]) {\n      ts = ts.match(str).replaceWith(logical[str]).list[0];\n      return ts.parentTerms;\n    }\n  }\n  //otherwise just remove 'not'\n  ts['delete']('#Negative');\n  return ts;\n};\nmodule.exports = toPositive;\n\n},{}],93:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Term = _dereq_('./term');\n\nvar Terms = function (_Text) {\n  _inherits(Terms, _Text);\n\n  function Terms() {\n    _classCallCheck(this, Terms);\n\n    return _possibleConstructorReturn(this, (Terms.__proto__ || Object.getPrototypeOf(Terms)).apply(this, arguments));\n  }\n\n  _createClass(Terms, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('.');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Term(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Terms;\n}(Text);\n\nmodule.exports = Terms;\n\n},{\"../../index\":25,\"./term\":94}],94:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar tagList = _dereq_('../../paths').tags;\nvar boringTags = {\n  Auxillary: true\n};\n\nvar Term = function (_Terms) {\n  _inherits(Term, _Terms);\n\n  function Term(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Term);\n\n    var _this = _possibleConstructorReturn(this, (Term.__proto__ || Object.getPrototypeOf(Term)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.t = _this.terms[0];\n    return _this;\n  }\n\n  _createClass(Term, [{\n    key: 'data',\n    value: function data() {\n      var t = this.t;\n      return {\n        spaceBefore: t.whitespace.before,\n        text: t.text,\n        spaceAfter: t.whitespace.after,\n        normal: t.normal,\n        implicit: t.silent_term,\n        bestTag: this.bestTag(),\n        tags: Object.keys(t.tag)\n      };\n    }\n  }, {\n    key: 'bestTag',\n    value: function bestTag() {\n      var tags = Object.keys(this.t.tag);\n      tags = tags.sort(); //alphabetical, first\n      //then sort by #of parent tags\n      tags = tags.sort(function (a, b) {\n        //bury the tags we dont want\n        if (boringTags[b] || !tagList[a] || !tagList[b]) {\n          return -1;\n        }\n        if (tagList[a].parents.length > tagList[b].parents.length) {\n          return -1;\n        }\n        return 1;\n      });\n      return tags[0];\n    }\n  }]);\n\n  return Term;\n}(Terms);\n\nmodule.exports = Term;\n\n},{\"../../paths\":37}],95:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Things = function (_Text) {\n  _inherits(Things, _Text);\n\n  function Things() {\n    _classCallCheck(this, Things);\n\n    return _possibleConstructorReturn(this, (Things.__proto__ || Object.getPrototypeOf(Things)).apply(this, arguments));\n  }\n\n  _createClass(Things, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.clauses();\n      //find people, places, and organizations\n      var yup = r.people();\n      yup.concat(r.places());\n      yup.concat(r.organizations());\n      //return them to normal ordering\n      yup.sort('chronological');\n      // yup.unique() //? not sure\n      if (typeof n === 'number') {\n        yup = yup.get(n);\n      }\n      return yup;\n    }\n  }]);\n\n  return Things;\n}(Text);\n\nmodule.exports = Things;\n\n},{\"../../index\":25}],96:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\n\nvar Urls = function (_Text) {\n  _inherits(Urls, _Text);\n\n  function Urls() {\n    _classCallCheck(this, Urls);\n\n    return _possibleConstructorReturn(this, (Urls.__proto__ || Object.getPrototypeOf(Urls)).apply(this, arguments));\n  }\n\n  _createClass(Urls, null, [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Url');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      return r;\n    }\n  }]);\n\n  return Urls;\n}(Text);\n\nmodule.exports = Urls;\n\n},{\"../../index\":25}],97:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Value = _dereq_('./value');\n\nvar Values = function (_Text) {\n  _inherits(Values, _Text);\n\n  function Values() {\n    _classCallCheck(this, Values);\n\n    return _possibleConstructorReturn(this, (Values.__proto__ || Object.getPrototypeOf(Values)).apply(this, arguments));\n  }\n\n  _createClass(Values, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'noDates',\n    value: function noDates() {\n      return this.not('#Date');\n    }\n    /** five -> 5 */\n\n  }, {\n    key: 'numbers',\n    value: function numbers() {\n      return this.list.map(function (ts) {\n        return ts.number();\n      });\n    }\n    /** five -> '5' */\n\n  }, {\n    key: 'toNumber',\n    value: function toNumber() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNumber();\n      });\n      return this;\n    }\n    /**5 -> 'five' */\n\n  }, {\n    key: 'toTextValue',\n    value: function toTextValue() {\n      this.list = this.list.map(function (ts) {\n        return ts.toTextValue();\n      });\n      return this;\n    }\n    /**5th -> 5 */\n\n  }, {\n    key: 'toCardinal',\n    value: function toCardinal() {\n      this.list = this.list.map(function (ts) {\n        return ts.toCardinal();\n      });\n      return this;\n    }\n    /**5 -> 5th */\n\n  }, {\n    key: 'toOrdinal',\n    value: function toOrdinal() {\n      this.list = this.list.map(function (ts) {\n        return ts.toOrdinal();\n      });\n      return this;\n    }\n    /**5900 -> 5,900 */\n\n  }, {\n    key: 'toNiceNumber',\n    value: function toNiceNumber() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNiceNumber();\n      });\n      return this;\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('#Value+');\n      // r = r.match('#Value+ #Unit?');\n\n      //june 21st 1992 is two seperate values\n      r.splitOn('#Year');\n      // r.debug();\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Value(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return r;\n    }\n  }]);\n\n  return Values;\n}(Text);\n\nValues.prototype.clone = function () {\n  var list = this.list.map(function (ts) {\n    return ts.clone();\n  });\n  return new Values(list, this.lexicon);\n};\nmodule.exports = Values;\n\n},{\"../../index\":25,\"./value\":109}],98:[function(_dereq_,module,exports){\n'use strict';\n\nvar toNumber = _dereq_('../toNumber');\n\n//turn a number like 5 into an ordinal like 5th\nvar numOrdinal = function numOrdinal(ts) {\n  var num = toNumber(ts);\n  if (!num && num !== 0) {\n    return null;\n  }\n  //the teens are all 'th'\n  var tens = num % 100;\n  if (tens > 10 && tens < 20) {\n    return '' + num + 'th';\n  }\n  //the rest of 'em\n  var mapping = {\n    0: 'th',\n    1: 'st',\n    2: 'nd',\n    3: 'rd'\n  };\n  var str = '' + num;\n  var last = str.slice(str.length - 1, str.length);\n  if (mapping[last]) {\n    str += mapping[last];\n  } else {\n    str += 'th';\n  }\n  return str;\n};\n\nmodule.exports = numOrdinal;\n\n},{\"../toNumber\":104}],99:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = _dereq_('../../paths');\n\n},{\"../../paths\":37}],100:[function(_dereq_,module,exports){\n'use strict';\n\nvar toNumber = _dereq_('../toNumber');\nvar toText = _dereq_('../toText');\nvar ordinalWord = _dereq_('../../../paths').data.ordinalMap.toOrdinal;\n//\nvar textOrdinal = function textOrdinal(ts) {\n  var num = toNumber(ts);\n  var words = toText(num);\n  //convert the last number to an ordinal\n  var last = words[words.length - 1];\n  words[words.length - 1] = ordinalWord[last] || last;\n  return words.join(' ');\n};\n\nmodule.exports = textOrdinal;\n\n},{\"../../../paths\":37,\"../toNumber\":104,\"../toText\":108}],101:[function(_dereq_,module,exports){\n'use strict';\n\nvar niceNumber = function niceNumber(num) {\n  if (!num && num !== 0) {\n    return null;\n  }\n  num = '' + num;\n  var x = num.split('.');\n  var x1 = x[0];\n  var x2 = x.length > 1 ? '.' + x[1] : '';\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n  return x1 + x2;\n};\nmodule.exports = niceNumber;\n\n},{}],102:[function(_dereq_,module,exports){\n'use strict';\n\nvar p = _dereq_('../paths');\nvar numbers = p.data.numbers;\nvar fns = p.fns;\n\n//setup number-word data\nvar ones = fns.extend(numbers.ordinal.ones, numbers.cardinal.ones);\nvar teens = fns.extend(numbers.ordinal.teens, numbers.cardinal.teens);\nvar tens = fns.extend(numbers.ordinal.tens, numbers.cardinal.tens);\nvar multiples = fns.extend(numbers.ordinal.multiples, numbers.cardinal.multiples);\n\nmodule.exports = {\n  ones: ones,\n  teens: teens,\n  tens: tens,\n  multiples: multiples\n};\n\n},{\"../paths\":99}],103:[function(_dereq_,module,exports){\n'use strict';\n\n//support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\n\nvar findModifiers = function findModifiers(str) {\n  var mults = [{\n    reg: /^(minus|negative)[\\s\\-]/i,\n    mult: -1\n  }, {\n    reg: /^(a\\s)?half[\\s\\-](of\\s)?/i,\n    mult: 0.5\n  }];\n  for (var i = 0; i < mults.length; i++) {\n    if (str.match(mults[i].reg)) {\n      return {\n        amount: mults[i].mult,\n        str: str.replace(mults[i].reg, '')\n      };\n    }\n  }\n  return {\n    amount: 1,\n    str: str\n  };\n};\n\nmodule.exports = findModifiers;\n\n},{}],104:[function(_dereq_,module,exports){\n'use strict';\n\nvar parseNumeric = _dereq_('./parseNumeric');\nvar findModifiers = _dereq_('./findModifiers');\nvar words = _dereq_('./data');\nvar isValid = _dereq_('./validate');\nvar parseDecimals = _dereq_('./parseDecimals');\nvar log = _dereq_('../paths').log;\nvar path = 'parseNumber';\n\n//some numbers we know\nvar casualForms = {\n  // 'a few': 3,\n  'a couple': 2,\n  'a dozen': 12,\n  'two dozen': 24,\n  'zero': 0\n};\n\n// a 'section' is something like 'fifty-nine thousand'\n// turn a section into something we can add to - like 59000\nvar section_sum = function section_sum(obj) {\n  // console.log(obj);\n  return Object.keys(obj).reduce(function (sum, k) {\n    sum += obj[k];\n    return sum;\n  }, 0);\n};\n\nvar alreadyNumber = function alreadyNumber(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    if (!ts.terms[i].tag.NumericValue) {\n      return false;\n    }\n  }\n  return true;\n};\n\n//turn a string into a number\nvar parse = function parse(ts) {\n  log.here('parseNumber', path);\n  var str = ts.out('normal');\n  //convert some known-numbers\n  if (casualForms[str] !== undefined) {\n    return casualForms[str];\n  }\n  //'a/an' is 1\n  if (str === 'a' || str === 'an') {\n    return 1;\n  }\n  //handle a string of mostly numbers\n  if (alreadyNumber(ts)) {\n    return parseNumeric(ts.out('normal'));\n  }\n  var modifier = findModifiers(str);\n  str = modifier.str;\n  var last_mult = null;\n  var has = {};\n  var sum = 0;\n  var isNegative = false;\n  var terms = str.split(/[ -]/);\n  // console.log(terms);\n  for (var i = 0; i < terms.length; i++) {\n    var w = terms[i];\n    // console.log(i + '  - ' + w);\n    if (!w || w === 'and') {\n      continue;\n    }\n    if (w === '-' || w === 'negative') {\n      isNegative = true;\n      continue;\n    }\n    if (w.startsWith('-')) {\n      isNegative = true;\n      w = w.substr(1);\n    }\n    //decimal mode\n    if (w === 'point') {\n      sum += section_sum(has);\n      sum += parseDecimals(terms.slice(i + 1, terms.length));\n      sum *= modifier.amount;\n      return sum;\n    }\n    //improper fraction\n    var improperFractionMatch = w.match(/^([0-9,\\. ]+)\\/([0-9,\\. ]+)$/);\n    if (improperFractionMatch) {\n      log.here('fractionMath', path);\n      var num = parseFloat(improperFractionMatch[1].replace(/[, ]/g, ''));\n      var denom = parseFloat(improperFractionMatch[2].replace(/[, ]/g, ''));\n      if (denom) {\n        sum += num / denom || 0;\n      }\n      continue;\n    }\n    //prevent mismatched units, like 'seven eleven'\n    if (!isValid(w, has)) {\n      log.tell('invalid state', path);\n      log.tell(has, path);\n      return null;\n    }\n    //buildup section, collect 'has' values\n    if (w.match(/^[0-9\\.]+$/)) {\n      has['ones'] = parseFloat(w, 10); //not technically right\n    } else if (words.ones[w]) {\n      has['ones'] = words.ones[w];\n    } else if (words.teens[w]) {\n      has['teens'] = words.teens[w];\n    } else if (words.tens[w]) {\n      has['tens'] = words.tens[w];\n    } else if (words.multiples[w]) {\n      var mult = words.multiples[w];\n      //something has gone wrong : 'two hundred five hundred'\n      if (mult === last_mult) {\n        log.tell('invalid multiplier', path);\n        return null;\n      }\n      //support 'hundred thousand'\n      //this one is tricky..\n      if (mult === 100 && terms[i + 1]) {\n        // has['hundreds']=\n        var w2 = terms[i + 1];\n        if (words.multiples[w2]) {\n          mult *= words.multiples[w2]; //hundredThousand/hundredMillion\n          i += 1;\n        }\n      }\n      //natural order of things\n      //five thousand, one hundred..\n      if (last_mult === null || mult < last_mult) {\n        sum += (section_sum(has) || 1) * mult;\n        last_mult = mult;\n        has = {};\n      } else {\n        //maybe hundred .. thousand\n        sum += section_sum(has);\n        last_mult = mult;\n        sum = (sum || 1) * mult;\n        has = {};\n      }\n    }\n    // console.log(w + '=-------');\n    // console.log(has);\n  }\n  //dump the remaining has values\n  sum += section_sum(has);\n  //post-process add modifier\n  sum *= modifier.amount;\n  sum *= isNegative ? -1 : 1;\n  //dont return 0, if it went straight-through\n  if (sum === 0) {\n    return null;\n  }\n  return sum;\n};\n\nmodule.exports = parse;\n\n},{\"../paths\":99,\"./data\":102,\"./findModifiers\":103,\"./parseDecimals\":105,\"./parseNumeric\":106,\"./validate\":107}],105:[function(_dereq_,module,exports){\n'use strict';\n\nvar words = _dereq_('./data');\n\n//concatenate into a string with leading '0.'\nvar parseDecimals = function parseDecimals(arr) {\n  var str = '0.';\n  for (var i = 0; i < arr.length; i++) {\n    var w = arr[i];\n    if (words.ones[w]) {\n      str += words.ones[w];\n    } else if (words.teens[w]) {\n      str += words.teens[w];\n    } else if (words.tens[w]) {\n      str += words.tens[w];\n    } else if (w.match(/^[0-9]$/)) {\n      str += w;\n    } else {\n      return 0;\n    }\n  }\n  return parseFloat(str);\n};\n\nmodule.exports = parseDecimals;\n\n},{\"./data\":102}],106:[function(_dereq_,module,exports){\n'use strict';\n//parse a string like \"4,200.1\" into Number 4200.1\n\nvar parseNumeric = function parseNumeric(str) {\n  //remove ordinal - 'th/rd'\n  str = str.replace(/1st$/, '1');\n  str = str.replace(/2nd$/, '2');\n  str = str.replace(/3rd$/, '3');\n  str = str.replace(/([4567890])r?th$/, '$1');\n  //remove prefixes\n  str = str.replace(/^[$€¥£¢]/, '');\n  //remove suffixes\n  str = str.replace(/[%$€¥£¢]$/, '');\n  //remove commas\n  str = str.replace(/,/g, '');\n  //split '5kg' from '5'\n  str = str.replace(/([0-9])([a-z]{1,2})$/, '$1');\n  return parseFloat(str);\n};\n\nmodule.exports = parseNumeric;\n\n},{}],107:[function(_dereq_,module,exports){\n'use strict';\n\nvar words = _dereq_('./data');\n\n//prevent things like 'fifteen ten', and 'five sixty'\nvar isValid = function isValid(w, has) {\n  if (words.ones[w]) {\n    if (has.ones || has.teens) {\n      return false;\n    }\n  } else if (words.teens[w]) {\n    if (has.ones || has.teens || has.tens) {\n      return false;\n    }\n  } else if (words.tens[w]) {\n    if (has.ones || has.teens || has.tens) {\n      return false;\n    }\n  }\n  return true;\n};\nmodule.exports = isValid;\n\n},{\"./data\":102}],108:[function(_dereq_,module,exports){\n'use strict';\n// turns an integer/float into a textual number, like 'fifty-five'\n\n//turn number into an array of magnitudes, like [[5, million], [2, hundred]]\n\nvar breakdown_magnitudes = function breakdown_magnitudes(num) {\n  var working = num;\n  var have = [];\n  var sequence = [[1000000000, 'million'], [100000000, 'hundred million'], [1000000, 'million'], [100000, 'hundred thousand'], [1000, 'thousand'], [100, 'hundred'], [1, 'one']];\n  sequence.forEach(function (a) {\n    if (num > a[0]) {\n      var howmany = Math.floor(working / a[0]);\n      working -= howmany * a[0];\n      if (howmany) {\n        have.push({\n          unit: a[1],\n          count: howmany\n        });\n      }\n    }\n  });\n  return have;\n};\n\n//turn numbers from 100-0 into their text\nvar breakdown_hundred = function breakdown_hundred(num) {\n  var tens_mapping = [['ninety', 90], ['eighty', 80], ['seventy', 70], ['sixty', 60], ['fifty', 50], ['forty', 40], ['thirty', 30], ['twenty', 20]];\n  var ones_mapping = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n  var arr = [];\n  for (var i = 0; i < tens_mapping.length; i++) {\n    if (num >= tens_mapping[i][1]) {\n      num -= tens_mapping[i][1];\n      arr.push(tens_mapping[i][0]);\n    }\n  }\n  //(hopefully) we should only have 20-0 now\n  if (ones_mapping[num]) {\n    arr.push(ones_mapping[num]);\n  }\n  return arr;\n};\n\n/** print-out 'point eight nine'*/\nvar handle_decimal = function handle_decimal(num) {\n  var names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  var arr = [];\n  //parse it out like a string, because js math is such shit\n  var decimal = ('' + num).match(/\\.([0-9]+)/);\n  if (!decimal || !decimal[0]) {\n    return arr;\n  }\n  arr.push('point');\n  var decimals = decimal[0].split('');\n  for (var i = 0; i < decimals.length; i++) {\n    arr.push(names[decimals[i]]);\n  }\n  return arr;\n};\n\n/** turns an integer into a textual number */\nvar to_text = function to_text(num) {\n  var arr = [];\n  //handle negative numbers\n  if (num < 0) {\n    arr.push('negative');\n    num = Math.abs(num);\n  }\n  //break-down into units, counts\n  var units = breakdown_magnitudes(num);\n  //build-up the string from its components\n  for (var i = 0; i < units.length; i++) {\n    var unit_name = units[i].unit;\n    if (unit_name === 'one') {\n      unit_name = '';\n      //put an 'and' in here\n      if (arr.length > 1) {\n        arr.push('and');\n      }\n    }\n    arr = arr.concat(breakdown_hundred(units[i].count));\n    arr.push(unit_name);\n  }\n  //also support decimals - 'point eight'\n  arr = arr.concat(handle_decimal(num));\n  //remove empties\n  arr = arr.filter(function (s) {\n    return s;\n  });\n  if (arr.length === 0) {\n    arr[0] = 'zero';\n  }\n  return arr;\n};\n\nmodule.exports = to_text;\n\n// console.log(to_text(-1000.8));\n\n},{}],109:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar paths = _dereq_('../../paths');\nvar Terms = paths.Terms;\nvar parse = _dereq_('./toNumber');\nvar toText = _dereq_('./toText');\nvar _toNiceNumber = _dereq_('./toNiceNumber');\nvar numOrdinal = _dereq_('./numOrdinal');\nvar textOrdinal = _dereq_('./textOrdinal');\n\nvar isOrdinal = function isOrdinal(ts) {\n  var t = ts.terms[ts.terms.length - 1];\n  if (!t) {\n    return false;\n  }\n  return t.tag.Ordinal === true;\n};\nvar isText = function isText(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    if (ts.terms[i].tag.TextValue) {\n      return true;\n    }\n  }\n  return false;\n};\nvar isNumber = function isNumber(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.tag.TextValue || t.tag.NiceNumber || !t.tag.NumericValue) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar Value = function (_Terms) {\n  _inherits(Value, _Terms);\n\n  function Value(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Value);\n\n    var _this = _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.val = _this.match('#Value+').list[0];\n    _this.unit = _this.match('#Unit$').list[0];\n    return _this;\n  }\n\n  _createClass(Value, [{\n    key: 'number',\n    value: function number() {\n      var num = parse(this.val);\n      return num;\n    }\n    /** five -> '5' */\n\n  }, {\n    key: 'toNumber',\n    value: function toNumber() {\n      var val = this.val;\n      // this.debug();\n      //is already\n      if (isNumber(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isOrdinal(val)) {\n        var num = numOrdinal(val);\n        this.replaceWith(num, 'Value');\n      } else {\n        var _num = parse(val);\n        // console.log(num);\n        if (_num !== null) {\n          this.replaceWith('' + _num, 'Value');\n        }\n      }\n      return this;\n    }\n    /**5 -> 'five' */\n\n  }, {\n    key: 'toTextValue',\n    value: function toTextValue() {\n      var val = this.val;\n      //is already\n      if (isText(val)) {\n        return this;\n      }\n      //otherwise, parse it\n      if (isOrdinal(val)) {\n        var _str = textOrdinal(val);\n        return this.replaceWith(_str, 'Value');\n      }\n      var num = '' + parse(val);\n      var str = toText(num).join(' ');\n      this.replaceWith(str, 'Value');\n      return this;\n    }\n\n    /**5th -> 5 */\n\n  }, {\n    key: 'toCardinal',\n    value: function toCardinal() {\n      var val = this.val;\n      //already\n      if (!isOrdinal(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isText(val)) {\n        var _num2 = '' + parse(val);\n        var str = toText(_num2).join(' ');\n        return this.replaceWith(str, 'Value');\n      }\n      var num = '' + parse(val);\n      return this.replaceWith(num, 'Value');\n    }\n\n    /**5 -> 5th */\n\n  }, {\n    key: 'toOrdinal',\n    value: function toOrdinal() {\n      var val = this.val;\n      //already\n      if (isOrdinal(val)) {\n        return this;\n      }\n      //otherwise,\n      if (isText(val)) {\n        var str = textOrdinal(val);\n        this.replaceWith(str, 'Value');\n      } else {\n        //number-ordinal\n        var _str2 = numOrdinal(val);\n        this.replaceWith(_str2, 'Value');\n      }\n      return this;\n    }\n\n    /**5900 -> 5,900 */\n\n  }, {\n    key: 'toNiceNumber',\n    value: function toNiceNumber() {\n      var num = parse(this);\n      var str = _toNiceNumber(num);\n      this.replaceWith(str, 'Value');\n      return this;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      var numV = this.clone().toNumber();\n      var txtV = this.clone().toTextValue();\n      var obj = {\n        NumericValue: {\n          cardinal: numV.toCardinal().out('text'),\n          ordinal: numV.toOrdinal().out('text'),\n          nicenumber: this.toNiceNumber().out('text')\n        },\n        TextValue: {\n          cardinal: txtV.toCardinal().out('text'),\n          ordinal: txtV.toOrdinal().out('text')\n        },\n        unit: ''\n      };\n      if (this.unit) {\n        obj.unit = this.unit.out('text');\n      }\n      obj.number = this.number();\n      return obj;\n    }\n  }]);\n\n  return Value;\n}(Terms);\n\nValue.prototype.clone = function () {\n  var terms = this.terms.map(function (t) {\n    return t.clone();\n  });\n  return new Value(terms, this.lexicon, this.refText, this.refTerms);\n};\nmodule.exports = Value;\n\n},{\"../../paths\":37,\"./numOrdinal\":98,\"./textOrdinal\":100,\"./toNiceNumber\":101,\"./toNumber\":104,\"./toText\":108}],110:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Text = _dereq_('../../index');\nvar Verb = _dereq_('./verb');\n\nvar Verbs = function (_Text) {\n  _inherits(Verbs, _Text);\n\n  function Verbs(arr, lexicon, reference) {\n    _classCallCheck(this, Verbs);\n\n    return _possibleConstructorReturn(this, (Verbs.__proto__ || Object.getPrototypeOf(Verbs)).call(this, arr, lexicon, reference));\n  }\n\n  _createClass(Verbs, [{\n    key: 'data',\n    value: function data() {\n      return this.list.map(function (ts) {\n        return ts.data();\n      });\n    }\n  }, {\n    key: 'conjugation',\n    value: function conjugation(verbose) {\n      return this.list.map(function (ts) {\n        return ts.conjugation(verbose);\n      });\n    }\n  }, {\n    key: 'conjugate',\n    value: function conjugate(verbose) {\n      return this.list.map(function (ts) {\n        return ts.conjugate(verbose);\n      });\n    }\n\n    /** plural/singular **/\n\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isPlural();\n      });\n      return this;\n    }\n  }, {\n    key: 'isSingular',\n    value: function isSingular() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.isPlural();\n      });\n      return this;\n    }\n\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      this.list = this.list.filter(function (ts) {\n        return ts.isNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'isPositive',\n    value: function isPositive() {\n      this.list = this.list.filter(function (ts) {\n        return !ts.isNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      this.list = this.list.map(function (ts) {\n        return ts.toNegative();\n      });\n      return this;\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      this.list.forEach(function (ts) {\n        ts.toPositive();\n      });\n      return this;\n    }\n\n    /** tense **/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      this.list.forEach(function (ts) {\n        ts.toPastTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      this.list.forEach(function (ts) {\n        ts.toPresentTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      this.list.forEach(function (ts) {\n        ts.toFutureTense();\n      });\n      return this;\n    }\n  }, {\n    key: 'toInfinitive',\n    value: function toInfinitive() {\n      this.list.forEach(function (ts) {\n        ts.toInfinitive();\n      });\n      return this;\n    }\n  }, {\n    key: 'asAdjective',\n    value: function asAdjective() {\n      return this.list.map(function (ts) {\n        return ts.asAdjective();\n      });\n    }\n  }], [{\n    key: 'find',\n    value: function find(r, n) {\n      r = r.match('(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+')['if']('#Verb'); //this should be (much) smarter\n      r = r.splitAfter('#Comma');\n      if (typeof n === 'number') {\n        r = r.get(n);\n      }\n      r.list = r.list.map(function (ts) {\n        return new Verb(ts.terms, ts.lexicon, ts.refText, ts.refTerms);\n      });\n      return new Text(r.list, this.lexicon, this.parent);\n    }\n  }]);\n\n  return Verbs;\n}(Text);\n\nmodule.exports = Verbs;\n\n},{\"../../index\":25,\"./verb\":129}],111:[function(_dereq_,module,exports){\n'use strict';\n\nvar predict = _dereq_('./methods/predict');\n\n//'walking' - aka progressive\nvar isContinuous = function isContinuous(ts) {\n  return ts.match('#Gerund').found;\n};\n\n//will not walk\nvar isNegative = function isNegative(ts) {\n  var negs = ts.match('#Negative').list;\n  if (negs.length === 2) {\n    return false;\n  }\n  if (negs.length === 1) {\n    return true;\n  }\n  return false;\n};\n\n//been walked by..\nvar isPassive = function isPassive(ts) {\n  if (ts.match('is being #PastTense').found) {\n    return true;\n  }\n  if (ts.match('(had|has) been #PastTense').found) {\n    return true;\n  }\n  if (ts.match('will have been #PastTense').found) {\n    return true;\n  }\n  return false;\n};\n\n//had walked\nvar isPerfect = function isPerfect(ts) {\n  if (ts.match('^(had|have) #PastTense')) {\n    return true;\n  }\n  return false;\n};\n\n//should walk, could walk\nvar getModal = function getModal(ts) {\n  var modal = ts.match('#Modal');\n  if (!modal.found) {\n    return null;\n  }\n  return modal.out('normal');\n};\n\n//past/present/future\nvar getTense = function getTense(ts) {\n  //look at the preceding words\n  if (ts.auxillary.found) {\n    //'will'\n    if (ts.match('will have #PastTense').found) {\n      return 'Past';\n    }\n    if (ts.auxillary.match('will').found) {\n      return 'Future';\n    }\n    //'was'\n    if (ts.auxillary.match('was').found) {\n      return 'Past';\n    }\n  }\n  //look at the main verb tense\n  if (ts.verb) {\n    var tenses = {\n      PastTense: 'Past',\n      FutureTense: 'Future',\n      FuturePerfect: 'Future'\n    };\n    var tense = predict(ts.verb); //yikes\n    return tenses[tense] || 'Present';\n  }\n  return 'Present';\n};\n\n// const isImperative = function(ts) {};\n// const isConditional = function(ts) {};\n\n// detect signals in auxillary verbs\n// 'will' -> future, 'have'->perfect, modals, negatives, adverbs\nvar interpret = function interpret(ts) {\n  var isNeg = isNegative(ts);\n  // let aux = ts.auxillary.clone();\n  // aux = aux.not('(#Negative|#Adverb)');\n  var obj = {\n    negative: isNeg,\n    continuous: isContinuous(ts),\n    passive: isPassive(ts),\n    perfect: isPerfect(ts),\n    modal: getModal(ts),\n    tense: getTense(ts)\n  };\n  return obj;\n};\nmodule.exports = interpret;\n\n},{\"./methods/predict\":123}],112:[function(_dereq_,module,exports){\n'use strict';\n\nvar checkIrregulars = _dereq_('./irregulars');\nvar suffixPass = _dereq_('./suffixes');\nvar toActor = _dereq_('./toActor');\nvar toAdjective = _dereq_('./toAdjective');\nvar generic = _dereq_('./generic');\nvar predict = _dereq_('../predict');\nvar toInfinitive = _dereq_('../toInfinitive');\nvar toBe = _dereq_('./toBe');\n\n//turn a verb into all it's forms\nvar conjugate = function conjugate(t, verbose) {\n\n  //handle is/was/will-be specially\n  if (t.normal === 'is' || t.normal === 'was' || t.normal === 'will') {\n    return toBe();\n  }\n\n  //dont conjugate didn't\n  if (t.tag.Contraction) {\n    t.text = t.silent_term;\n  }\n  var all = {\n    PastTense: null,\n    PresentTense: null,\n    // FutureTense: null,\n    Infinitive: null,\n    Gerund: null,\n    Actor: null\n  };\n  //first, get its current form\n  var form = predict(t);\n  if (form) {\n    all[form] = t.normal;\n  }\n  if (form !== 'Infinitive') {\n    all['Infinitive'] = toInfinitive(t, verbose) || '';\n  }\n  //check irregular forms\n  var irregObj = checkIrregulars(all['Infinitive']) || {};\n  Object.keys(irregObj).forEach(function (k) {\n    if (irregObj[k] && !all[k]) {\n      all[k] = irregObj[k];\n    }\n  });\n  //ok, send this infinitive to all conjugators\n  var inf = all['Infinitive'] || t.normal;\n\n  //check suffix rules\n  var suffObj = suffixPass(inf);\n  Object.keys(suffObj).forEach(function (k) {\n    if (suffObj[k] && !all[k]) {\n      all[k] = suffObj[k];\n    }\n  });\n  //ad-hoc each missing form\n  //to Actor\n  if (!all.Actor) {\n    //a phrasal like 'step up' can't be an actor -'step upper'?\n    // if (!t.tag.PhrasalVerb) {\n    all.Actor = toActor(inf);\n    // }\n  }\n  //add adjective, like walk->walkable\n  all.Adjective = toAdjective(all.Infinitive);\n\n  //use fallback, generic transformations\n  Object.keys(all).forEach(function (k) {\n    if (!all[k] && generic[k]) {\n      all[k] = generic[k](all);\n    }\n  });\n\n  return all;\n};\n\nmodule.exports = conjugate;\n\n},{\"../predict\":123,\"../toInfinitive\":126,\"./generic\":115,\"./irregulars\":117,\"./suffixes\":118,\"./toActor\":119,\"./toAdjective\":120,\"./toBe\":121}],113:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = [{\n  reg: /(eave)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1d',\n    gr: 'eaving',\n    ar: '$1r'\n  }\n}, {\n  reg: /(ink)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'unk',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(end)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ent',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(ide)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ode',\n    gr: 'iding',\n    ar: 'ider'\n  }\n}, {\n  reg: /(ake)$/i,\n  repl: {\n    pr: '$1s',\n    pa: 'ook',\n    gr: 'aking',\n    ar: '$1r'\n  }\n}, {\n  reg: /(eed)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing',\n    ar: '$1er'\n  }\n}, {\n  reg: /(e)(ep)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1pt',\n    gr: '$1$2ing',\n    ar: '$1$2er'\n  }\n}, {\n  reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing',\n    prt: '$1en'\n  }\n}, {\n  reg: /([i|f|rr])y$/i,\n  repl: {\n    pr: '$1ies',\n    pa: '$1ied',\n    gr: '$1ying'\n  }\n}, {\n  reg: /([td]er)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /([bd]l)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(ish|tch|ess)$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(ion|end|e[nc]t)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(om)e$/i,\n  repl: {\n    pr: '$1es',\n    pa: 'ame',\n    gr: '$1ing'\n  }\n}, {\n  reg: /([aeiu])([pt])$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /(er)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(en)$/i,\n  repl: {\n    pr: '$1s',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}, {\n  reg: /(..)(ow)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1ew',\n    gr: '$1$2ing',\n    prt: '$1$2n'\n  }\n}, {\n  reg: /(..)([cs]h)$/i,\n  repl: {\n    pr: '$1$2es',\n    pa: '$1$2ed',\n    gr: '$1$2ing'\n  }\n}, {\n  reg: /([^aeiou][ou])(g|d)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2$2ed',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /([^aeiou][aeiou])(b|t|p|m)$/i,\n  repl: {\n    pr: '$1$2s',\n    pa: '$1$2$2ed',\n    gr: '$1$2$2ing'\n  }\n}, {\n  reg: /([aeiou]zz)$/i,\n  repl: {\n    pr: '$1es',\n    pa: '$1ed',\n    gr: '$1ing'\n  }\n}];\n\n},{}],114:[function(_dereq_,module,exports){\n'use strict';\n\nvar checkIrregulars = _dereq_('./irregulars');\nvar suffixPass = _dereq_('./suffixes');\nvar generic = _dereq_('./generic');\n//this method is the same as regular conjugate, but optimised for use in the lexicon during warm-up.\n//it's way faster because it knows input is already infinitive\n\nvar want = ['Gerund', 'PastTense', 'PresentTense'];\n\nvar fasterConjugate = function fasterConjugate(inf) {\n  var all = {\n    Infinitive: inf\n  };\n  var irregObj = checkIrregulars(all['Infinitive']);\n  if (irregObj !== null) {\n    Object.keys(irregObj).forEach(function (k) {\n      if (irregObj[k] && !all[k]) {\n        all[k] = irregObj[k];\n      }\n    });\n  }\n  //check suffix rules\n  var suffObj = suffixPass(inf);\n  Object.keys(suffObj).forEach(function (k) {\n    if (suffObj[k] && !all[k]) {\n      all[k] = suffObj[k];\n    }\n  });\n  for (var i = 0; i < want.length; i++) {\n    if (!all[want[i]]) {\n      all[want[i]] = generic[want[i]](all);\n    }\n  }\n  return all;\n};\nmodule.exports = fasterConjugate;\n// console.log(fasterConjugate('walk'));\n\n},{\"./generic\":115,\"./irregulars\":117,\"./suffixes\":118}],115:[function(_dereq_,module,exports){\n'use strict';\n//non-specifc, 'hail-mary' transforms from infinitive, into other forms\n\nvar fns = _dereq_('../../../../../fns'); //jaja!\n\nvar generic = {\n\n  Gerund: function Gerund(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 'e')) {\n      return inf.replace(/e$/, 'ing');\n    }\n    return inf + 'ing';\n  },\n\n  PresentTense: function PresentTense(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 's')) {\n      return inf + 'es';\n    }\n    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n      return inf.slice(0, -1) + 'ies';\n    }\n    return inf + 's';\n  },\n\n  PastTense: function PastTense(o) {\n    var inf = o.Infinitive;\n    if (fns.endsWith(inf, 'e')) {\n      return inf + 'd';\n    }\n    if (fns.endsWith(inf, 'ed')) {\n      return inf;\n    }\n    if (inf.match(/[bcdfghjklmnpqrstvwxz]y$/)) {\n      return inf.slice(0, -1) + 'ied';\n    }\n    return inf + 'ed';\n  }\n\n};\n\nmodule.exports = generic;\n\n},{\"../../../../../fns\":21}],116:[function(_dereq_,module,exports){\n'use strict';\n\nvar conjugate = _dereq_('./conjugate');\nvar toBe = _dereq_('./toBe');\n\n//conjugation using auxillaries+adverbs and stuff\nvar multiWord = function multiWord(vb, verbose) {\n  var isNegative = vb.negative.found;\n  var isPlural = false;\n  //handle 'to be' verb seperately\n  if (vb.verb.tag.Copula || vb.verb.normal === 'be' && vb.auxillary.match('will').found) {\n    return toBe(isPlural, isNegative);\n  }\n\n  var obj = conjugate(vb.verb, verbose);\n  //apply particles\n  if (vb.particle.found) {\n    Object.keys(obj).forEach(function (k) {\n      obj[k] = obj[k] + vb.particle.out();\n    });\n  }\n  //apply adverbs\n  if (vb.adverbs.found) {\n    Object.keys(obj).forEach(function (k) {\n      obj[k] = obj[k] + vb.adverbs.out();\n    });\n  }\n  //apply negative\n  if (isNegative) {\n    obj.PastTense = 'did not ' + obj.Infinitive;\n    obj.PresentTense = 'does not ' + obj.Infinitive;\n  }\n  //future Tense is pretty straightforward\n  if (!obj.FutureTense) {\n    if (isNegative) {\n      obj.FutureTense = 'will not ' + obj.Infinitive;\n    } else {\n      obj.FutureTense = 'will ' + obj.Infinitive;\n    }\n  }\n  return obj;\n};\nmodule.exports = multiWord;\n\n},{\"./conjugate\":112,\"./toBe\":121}],117:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('../../../../../data').irregular_verbs; //weeee!\nvar fns = _dereq_('../../../../../fns'); //weeee!\nvar infArr = Object.keys(irregulars);\nvar forms = ['Participle', 'Gerund', 'PastTense', 'PresentTense', 'FuturePerfect', 'PerfectTense', 'Actor'];\n\nvar checkIrregulars = function checkIrregulars(str) {\n  //fast infinitive lookup\n  if (irregulars[str] !== undefined) {\n    var obj = fns.copy(irregulars[str]);\n    obj.Infinitive = str;\n    return obj;\n  }\n  //longer check of known-verb forms\n  for (var i = 0; i < infArr.length; i++) {\n    for (var o = 0; o < forms.length; o++) {\n      var irObj = irregulars[infArr[i]];\n      if (irObj[forms[o]] === str) {\n        var _obj = fns.copy(irObj);\n        _obj.Infinitive = infArr[i];\n        return _obj;\n      }\n    }\n  }\n  return {};\n};\n\nmodule.exports = checkIrregulars;\n// console.log(checkIrregulars('bit'));\n\n},{\"../../../../../data\":6,\"../../../../../fns\":21}],118:[function(_dereq_,module,exports){\n'use strict';\n\nvar rules = _dereq_('./data/rules');\nvar mapping = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor'\n};\nvar keys = Object.keys(mapping);\n\n//check suffix rules\nvar suffixPass = function suffixPass(inf) {\n  var found = {};\n  for (var i = 0; i < rules.length; i++) {\n    if (inf.match(rules[i].reg)) {\n      var obj = rules[i].repl;\n      for (var o = 0; o < keys.length; o++) {\n        if (obj[keys[o]]) {\n          var key = mapping[keys[o]];\n          found[key] = inf.replace(rules[i].reg, obj[keys[o]]);\n        }\n      }\n      return found;\n    }\n  }\n  return found;\n};\n\nmodule.exports = suffixPass;\n\n},{\"./data/rules\":113}],119:[function(_dereq_,module,exports){\n'use strict';\n//turn 'walk' into 'walker'\n\nvar irregulars = {\n  'tie': 'tier',\n  'dream': 'dreamer',\n  'sail': 'sailer',\n  'run': 'runner',\n  'rub': 'rubber',\n  'begin': 'beginner',\n  'win': 'winner',\n  'claim': 'claimant',\n  'deal': 'dealer',\n  'spin': 'spinner'\n};\nvar dont = {\n  'aid': 1,\n  'fail': 1,\n  'appear': 1,\n  'happen': 1,\n  'seem': 1,\n  'try': 1,\n  'say': 1,\n  'marry': 1,\n  'be': 1,\n  'forbid': 1,\n  'understand': 1,\n  'bet': 1\n};\nvar rules = [{\n  'reg': /e$/i,\n  'repl': 'er'\n}, {\n  'reg': /([aeiou])([mlgp])$/i,\n  'repl': '$1$2$2er'\n}, {\n  'reg': /([rlf])y$/i,\n  'repl': '$1ier'\n}, {\n  'reg': /^(.?.[aeiou])t$/i,\n  'repl': '$1tter'\n}];\n\nvar toActor = function toActor(inf) {\n  //check blacklist\n  if (dont[inf]) {\n    return null;\n  }\n  //check irregulars\n  if (irregulars[inf]) {\n    return irregulars[inf];\n  }\n  //try rules\n  for (var i = 0; i < rules.length; i++) {\n    if (inf.match(rules[i].reg)) {\n      return inf.replace(rules[i].reg, rules[i].repl);\n    }\n  }\n  //yup,\n  return inf + 'er';\n};\n\nmodule.exports = toActor;\n\n},{}],120:[function(_dereq_,module,exports){\n'use strict';\n//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\nvar rules = [[/[^aeiou]y$/, 'i'], //relay - reliable\n[/([aeiou][n])$/, '$1n']];\n\n//convert - 'convertible'\n//http://grammarist.com/usage/able-ible/\n//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\nvar ible_suffixes = {\n  collect: true,\n  exhaust: true,\n  convert: true,\n  digest: true,\n  discern: true,\n  dismiss: true,\n  reverse: true,\n  access: true,\n  collapse: true,\n  express: true\n};\n\nvar irregulars = {\n  eat: 'edible',\n  hear: 'audible',\n  see: 'visible',\n  defend: 'defensible',\n  write: 'legible',\n  move: 'movable',\n  divide: 'divisible',\n  perceive: 'perceptible'\n};\n\n//takes an infitive verb, and returns an adjective form\nvar toAdjective = function toAdjective(str) {\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < rules.length; i++) {\n    if (str.match(rules[i][0])) {\n      str = str.replace(rules[i][0], rules[i][1]);\n    }\n  }\n  var adj = str + 'able';\n  if (ible_suffixes[str]) {\n    adj = str + 'ible';\n  }\n  return adj;\n};\n\nmodule.exports = toAdjective;\n// console.log(toAdjective('buy'));\n\n},{}],121:[function(_dereq_,module,exports){\n'use strict';\n//too many special cases for is/was/will be\n\nvar toBe = function toBe(isPlural, isNegative) {\n  var obj = {\n    PastTense: 'was',\n    PresentTense: 'is',\n    FutureTense: 'will be',\n    Infinitive: 'is',\n    Gerund: 'being',\n    Actor: '',\n    PerfectTense: 'been',\n    Pluperfect: 'been'\n  };\n  if (isPlural) {\n    obj.PastTense = 'were';\n    obj.PresentTense = 'are';\n    obj.Infinitive = 'are';\n  }\n  if (isNegative) {\n    obj.PastTense += ' not';\n    obj.PresentTense += ' not';\n    obj.FutureTense = 'will not be';\n    obj.Infinitive += ' not';\n    obj.PerfectTense = 'not ' + obj.PerfectTense;\n    obj.Pluperfect = 'not ' + obj.Pluperfect;\n  }\n  return obj;\n};\nmodule.exports = toBe;\n\n},{}],122:[function(_dereq_,module,exports){\n'use strict';\n//sometimes you can tell if a verb is plural/singular, just by the verb\n// i am / we were\n//othertimes you need its noun 'we walk' vs 'i walk'\n\nvar isPlural = function isPlural(vb) {\n  if (vb.match('(are|were|does)').found) {\n    return true;\n  }\n  if (vb.match('(is|am|do|was)').found) {\n    return false;\n  }\n  //consider its prior noun\n  var noun = vb.getNoun();\n  if (noun && noun.found) {\n    if (noun.match('#Plural').found) {\n      return true;\n    }\n    if (noun.match('#Singular').found) {\n      return false;\n    }\n  }\n  return null;\n};\nmodule.exports = isPlural;\n\n},{}],123:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../../../../../fns'); //jaja!\nvar suffix_rules = _dereq_('./suffix_rules');\n\nvar goodTypes = {\n  Infinitive: true,\n  Gerund: true,\n  PastTense: true,\n  PresentTense: true,\n  FutureTense: true,\n  PerfectTense: true,\n  Pluperfect: true,\n  FuturePerfect: true,\n  Participle: true\n};\n\nvar predictForm = function predictForm(term, verbose) {\n  //do we already know the form?\n  var keys = Object.keys(goodTypes);\n  for (var i = 0; i < keys.length; i++) {\n    if (term.tag[keys[i]]) {\n      if (verbose) {\n        console.log('predicted ' + keys[i] + ' from pos', path);\n      }\n      return keys[i];\n    }\n  }\n  //consult our handy suffix rules\n  var arr = Object.keys(suffix_rules);\n  for (var _i = 0; _i < arr.length; _i++) {\n    if (fns.endsWith(term.normal, arr[_i]) && arr[_i].length < term.normal.length) {\n      if (verbose) {\n        var msg = 'predicted ' + suffix_rules[arr[_i]] + ' from suffix ' + arr[_i];\n        console.log(msg, path);\n      }\n      return suffix_rules[arr[_i]];\n    }\n  }\n  return null;\n};\n\nmodule.exports = predictForm;\n\n},{\"../../../../../fns\":21,\"./suffix_rules\":124}],124:[function(_dereq_,module,exports){\n'use strict';\n//suffix signals for verb tense, generated from test data\n\nvar compact = {\n  'Gerund': ['ing'],\n  'Actor': ['erer'],\n  'Infinitive': ['ate', 'ize', 'tion', 'rify', 'then', 'ress', 'ify', 'age', 'nce', 'ect', 'ise', 'ine', 'ish', 'ace', 'ash', 'ure', 'tch', 'end', 'ack', 'and', 'ute', 'ade', 'ock', 'ite', 'ase', 'ose', 'use', 'ive', 'int', 'nge', 'lay', 'est', 'ain', 'ant', 'ent', 'eed', 'er', 'le', 'own', 'unk', 'ung', 'en'],\n  'PastTense': ['ed', 'lt', 'nt', 'pt', 'ew', 'ld'],\n  'PresentTense': ['rks', 'cks', 'nks', 'ngs', 'mps', 'tes', 'zes', 'ers', 'les', 'acks', 'ends', 'ands', 'ocks', 'lays', 'eads', 'lls', 'els', 'ils', 'ows', 'nds', 'ays', 'ams', 'ars', 'ops', 'ffs', 'als', 'urs', 'lds', 'ews', 'ips', 'es', 'ts', 'ns', 's']\n};\nvar suffix_rules = {};\nvar keys = Object.keys(compact);\nvar l = keys.length;\n\nfor (var i = 0; i < l; i++) {\n  var l2 = compact[keys[i]].length;\n  for (var o = 0; o < l2; o++) {\n    suffix_rules[compact[keys[i]][o]] = keys[i];\n  }\n}\nmodule.exports = suffix_rules;\n\n},{}],125:[function(_dereq_,module,exports){\n'use strict';\n//turn a infinitiveVerb, like \"walk\" into an adjective like \"walkable\"\n\nvar rules = [[/y$/, 'i'], //relay - reliable\n[/([aeiou][n])$/, '$1n']];\n\n//convert - 'convertible'\n//http://grammarist.com/usage/able-ible/\n//http://blog.oxforddictionaries.com/2012/10/ibles-and-ables/\nvar ible_suffixes = {\n  collect: true,\n  exhaust: true,\n  convert: true,\n  digest: true,\n  discern: true,\n  dismiss: true,\n  reverse: true,\n  access: true,\n  collapse: true,\n  express: true\n};\n\nvar irregulars = {\n  eat: 'edible',\n  hear: 'audible',\n  see: 'visible',\n  defend: 'defensible',\n  write: 'legible',\n  move: 'movable',\n  divide: 'divisible',\n  perceive: 'perceptible'\n};\n\n//takes an infitive verb, and returns an adjective form\nvar toAdjective = function toAdjective(str) {\n  if (irregulars[str]) {\n    return irregulars[str];\n  }\n  for (var i = 0; i < rules.length; i++) {\n    if (str.match(rules[i][0])) {\n      str = str.replace(rules[i][0], rules[i][1]);\n    }\n  }\n  var adj = str + 'able';\n  if (ible_suffixes[str]) {\n    adj = str + 'ible';\n  }\n  return adj;\n};\n\nmodule.exports = toAdjective;\n\n},{}],126:[function(_dereq_,module,exports){\n'use strict';\n//turn any verb into its infinitive form\n\nvar rules = _dereq_('./rules');\nvar irregulars = _dereq_('../../../../../data').irregular_verbs;\nvar predict = _dereq_('../predict');\n\n//map the irregulars for easy infinitive lookup\n// {bought: 'buy'}\nvar verb_mapping = function verb_mapping() {\n  return Object.keys(irregulars).reduce(function (h, k) {\n    Object.keys(irregulars[k]).forEach(function (pos) {\n      h[irregulars[k][pos]] = k;\n    });\n    return h;\n  }, {});\n};\n\nirregulars = verb_mapping();\n\nvar toInfinitive = function toInfinitive(t) {\n  if (t.tag.Infinitive) {\n    return t.normal;\n  }\n  //check the irregular verb conjugations\n  if (irregulars[t.normal]) {\n    return irregulars[t.normal];\n  }\n  //check the suffix rules\n  var form = predict(t);\n  if (rules[form]) {\n    for (var i = 0; i < rules[form].length; i++) {\n      var rule = rules[form][i];\n      if (t.normal.match(rule.reg)) {\n        return t.normal.replace(rule.reg, rule.to);\n      }\n    }\n  }\n  return t.normal;\n};\n\nmodule.exports = toInfinitive;\n\n},{\"../../../../../data\":6,\"../predict\":123,\"./rules\":127}],127:[function(_dereq_,module,exports){\n'use strict';\n//rules for turning a verb into infinitive form\n\nvar rules = {\n  Participle: [{\n    reg: /own$/i,\n    to: 'ow'\n  }, {\n    reg: /(.)un([g|k])$/i,\n    to: '$1in$2'\n  }],\n  Actor: [{\n    reg: /(er)er$/i,\n    to: '$1'\n  }],\n  PresentTense: [{\n    reg: /(ies)$/i,\n    to: 'y'\n  }, {\n    reg: /(tch|sh)es$/i,\n    to: '$1'\n  }, {\n    reg: /(ss|zz)es$/i,\n    to: '$1'\n  }, {\n    reg: /([tzlshicgrvdnkmu])es$/i,\n    to: '$1e'\n  }, {\n    reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n    to: '$1'\n  }, {\n    reg: /(ow)s$/i,\n    to: '$1'\n  }, {\n    reg: /(op)s$/i,\n    to: '$1'\n  }, {\n    reg: /([eirs])ts$/i,\n    to: '$1t'\n  }, {\n    reg: /(ll)s$/i,\n    to: '$1'\n  }, {\n    reg: /(el)s$/i,\n    to: '$1'\n  }, {\n    reg: /(ip)es$/i,\n    to: '$1e'\n  }, {\n    reg: /ss$/i,\n    to: 'ss'\n  }, {\n    reg: /s$/i,\n    to: ''\n  }],\n  Gerund: [{\n    reg: /pping$/i,\n    to: 'p'\n  }, {\n    reg: /lling$/i,\n    to: 'll'\n  }, {\n    reg: /tting$/i,\n    to: 't'\n  }, {\n    reg: /ssing$/i,\n    to: 'ss'\n  }, {\n    reg: /gging$/i,\n    to: 'g'\n  }, {\n    reg: /([^aeiou])ying$/i,\n    to: '$1y'\n  }, {\n    reg: /([^ae]i.)ing$/i,\n    to: '$1e'\n  }, {\n    reg: /(ea.)ing$/i,\n    to: '$1'\n  }, {\n    reg: /(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,\n    to: '$1e'\n  }, {\n    reg: /(ch|sh)ing$/i,\n    to: '$1'\n  }, {\n    reg: /(..)ing$/i,\n    to: '$1'\n  }],\n  PastTense: [{\n    reg: /(ued)$/i,\n    to: 'ue'\n  }, {\n    reg: /([aeiou]zz)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(e|i)lled$/i,\n    to: '$1ll'\n  }, {\n    reg: /(sh|ch)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(tl|gl)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(um?pt?)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(ss)ed$/i,\n    to: '$1'\n  }, {\n    reg: /pped$/i,\n    to: 'p'\n  }, {\n    reg: /tted$/i,\n    to: 't'\n  }, {\n    reg: /gged$/i,\n    to: 'g'\n  }, {\n    reg: /(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(.ut)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(us)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(..[^aeiouy])ed$/i,\n    to: '$1e'\n  }, {\n    reg: /ied$/i,\n    to: 'y'\n  }, {\n    reg: /(.o)ed$/i,\n    to: '$1o'\n  }, {\n    reg: /(.i)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(a[^aeiou])ed$/i,\n    to: '$1'\n  }, {\n    reg: /([rl])ew$/i,\n    to: '$1ow'\n  }, {\n    reg: /([pl])t$/i,\n    to: '$1t'\n  }]\n};\nmodule.exports = rules;\n\n},{}],128:[function(_dereq_,module,exports){\n'use strict';\n//turns a verb negative - may not have enough information to do it properly\n// (eg 'did not eat' vs 'does not eat') - needs the noun\n\nvar toInfinitive = _dereq_('./methods/toInfinitive');\n\nvar toNegative = function toNegative(ts) {\n  //would not walk\n  var modal = ts.match('#Auxillary').first(); //.notIf('(is|are|was|will|has|had)').first(); //.first();\n  if (modal.found) {\n    var index = modal.list[0].index();\n    return ts.parentTerms.insertAt(index + 1, 'not', 'Verb');\n  }\n\n  //words that pair easily with a 'not' - 'is not'\n  var copula = ts.match('(#Copula|will|has|had|do)').first();\n  if (copula.found) {\n    var _index = copula.list[0].index();\n    return ts.parentTerms.insertAt(_index + 1, 'not', 'Verb');\n  }\n\n  var isPlural = ts.isPlural();\n\n  //walked -> did not walk\n  var past = ts.match('#PastTense').last();\n  if (past.found) {\n    var _vb = past.list[0];\n    var _index2 = _vb.index();\n    _vb.terms[0].text = toInfinitive(_vb.terms[0]);\n    if (isPlural) {\n      return ts.parentTerms.insertAt(_index2, 'do not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index2, 'did not', 'Verb');\n  }\n\n  //walks -> does not walk\n  var pres = ts.match('#PresentTense').first();\n  if (pres.found) {\n    var _vb2 = pres.list[0];\n    var _index3 = _vb2.index();\n    _vb2.terms[0].text = toInfinitive(_vb2.terms[0]);\n    //some things use 'do not', everything else is 'does not'\n    var noun = ts.getNoun();\n    if (noun.match('(i|we|they|you)').found) {\n      return ts.parentTerms.insertAt(_index3, 'do not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index3, 'does not', 'Verb');\n  }\n\n  //not walking\n  var gerund = ts.match('#Gerund').last();\n  if (gerund.found) {\n    var _index4 = gerund.list[0].index();\n    return ts.parentTerms.insertAt(_index4, 'not', 'Verb');\n  }\n\n  //walk -> do not walk\n  var vb = ts.match('#Verb').last();\n  if (vb.found) {\n    vb = vb.list[0];\n    var _index5 = vb.index();\n    vb.terms[0].text = toInfinitive(vb.terms[0]);\n    if (isPlural) {\n      return ts.parentTerms.insertAt(_index5, 'does not', 'Verb');\n    }\n    return ts.parentTerms.insertAt(_index5, 'did not', 'Verb');\n  }\n\n  return ts;\n};\nmodule.exports = toNegative;\n\n},{\"./methods/toInfinitive\":126}],129:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Terms = _dereq_('../../paths').Terms;\nvar _conjugate = _dereq_('./methods/conjugate');\nvar toAdjective = _dereq_('./methods/toAdjective');\nvar interpret = _dereq_('./interpret');\nvar _toNegative = _dereq_('./toNegative');\nvar _isPlural = _dereq_('./methods/isPlural');\n\nvar Verb = function (_Terms) {\n  _inherits(Verb, _Terms);\n\n  function Verb(arr, lexicon, refText, refTerms) {\n    _classCallCheck(this, Verb);\n\n    var _this = _possibleConstructorReturn(this, (Verb.__proto__ || Object.getPrototypeOf(Verb)).call(this, arr, lexicon, refText, refTerms));\n\n    _this.parse();\n    return _this;\n  }\n\n  _createClass(Verb, [{\n    key: 'parse',\n    value: function parse() {\n      this.negative = this.match('#Negative');\n      this.adverbs = this.match('#Adverb');\n      var aux = this.clone().not('(#Adverb|#Negative)');\n      this.verb = aux.match('#Verb').not('#Particle').last();\n      this.particle = aux.match('#Particle').last();\n      if (this.verb.found) {\n        this.verb = this.verb.list[0].terms[0];\n      }\n      this.auxillary = aux.match('#Auxillary+');\n    }\n  }, {\n    key: 'data',\n    value: function data(verbose) {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal'),\n        parts: {\n          negative: this.negative.out('normal'),\n          auxillary: this.auxillary.out('normal'),\n          verb: this.verb.out('normal'),\n          adverbs: this.adverbs.out('normal')\n        },\n        interpret: interpret(this, verbose),\n        conjugations: this.conjugate()\n      };\n    }\n  }, {\n    key: 'getNoun',\n    value: function getNoun() {\n      if (!this.refTerms) {\n        return null;\n      }\n      var str = '#Adjective? #Noun+ ' + this.out('normal');\n      return this.refTerms.match(str).match('#Noun+');\n    }\n    //which conjugation is this right now?\n\n  }, {\n    key: 'conjugation',\n    value: function conjugation() {\n      return interpret(this, false).tense;\n    }\n    //blast-out all forms\n\n  }, {\n    key: 'conjugate',\n    value: function conjugate(verbose) {\n      return _conjugate(this, verbose);\n    }\n  }, {\n    key: 'isPlural',\n    value: function isPlural() {\n      return _isPlural(this);\n    }\n    /** negation **/\n\n  }, {\n    key: 'isNegative',\n    value: function isNegative() {\n      return this.match('#Negative').list.length === 1;\n    }\n  }, {\n    key: 'isPerfect',\n    value: function isPerfect() {\n      return this.auxillary.match('(have|had)').found;\n    }\n  }, {\n    key: 'toNegative',\n    value: function toNegative() {\n      if (this.isNegative()) {\n        return this;\n      }\n      return _toNegative(this);\n    }\n  }, {\n    key: 'toPositive',\n    value: function toPositive() {\n      return this.match('#Negative')['delete']();\n    }\n\n    /** conjugation **/\n\n  }, {\n    key: 'toPastTense',\n    value: function toPastTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.PastTense);\n    }\n  }, {\n    key: 'toPresentTense',\n    value: function toPresentTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.PresentTense);\n    }\n  }, {\n    key: 'toFutureTense',\n    value: function toFutureTense() {\n      var obj = this.conjugate();\n      return this.replaceWith(obj.FutureTense);\n    }\n  }, {\n    key: 'toInfinitive',\n    value: function toInfinitive() {\n      var obj = this.conjugate();\n      //NOT GOOD. please fix\n      this.terms[this.terms.length - 1].text = obj.Infinitive;\n      return this;\n    }\n  }, {\n    key: 'asAdjective',\n    value: function asAdjective() {\n      return toAdjective(this.verb.out('normal'));\n    }\n  }]);\n\n  return Verb;\n}(Terms);\n\nmodule.exports = Verb;\n\n},{\"../../paths\":37,\"./interpret\":111,\"./methods/conjugate\":116,\"./methods/isPlural\":122,\"./methods/toAdjective\":125,\"./toNegative\":128}],130:[function(_dereq_,module,exports){\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2015 MIT\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\nvar data = _dereq_('../data/index');\nvar abbreviations = Object.keys(data.abbreviations);\n\nvar naiive_split = function naiive_split(text) {\n  //first, split by newline\n  var splits = text.split(/(\\n+)/);\n  //split by period, question-mark, and exclamation-mark\n  splits = splits.map(function (str) {\n    return str.split(/(\\S.+?[.!?])(?=\\s+|$)/g);\n  });\n  return fns.flatten(splits);\n};\n\nvar sentence_parser = function sentence_parser(text) {\n  var sentences = [];\n  text = fns.ensureString(text);\n  //first do a greedy-split..\n  var chunks = [];\n  //ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || !text.match(/\\S/)) {\n    return sentences;\n  }\n  // This was the splitter regex updated to fix quoted punctuation marks.\n  // let splits = text.split(/(\\S.+?[.\\?!])(?=\\s+|$|\")/g);\n  // todo: look for side effects in this regex replacement:\n  var splits = naiive_split(text);\n  //filter-out the grap ones\n  for (var i = 0; i < splits.length; i++) {\n    var s = splits[i];\n    if (!s || s === '') {\n      continue;\n    }\n    //this is meaningful whitespace\n    if (!s.match(/\\S/)) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s;\n        continue;\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1];\n        continue;\n      }\n      //else, only whitespace, no terms, no sentence\n    }\n    chunks.push(s);\n  }\n\n  //detection of non-sentence chunks\n  var abbrev_reg = new RegExp('\\\\b(' + abbreviations.join('|') + ')[.!?] ?$', 'i');\n  var acronym_reg = new RegExp('[ |\\.][A-Z]\\.?( *)?$', 'i');\n  var elipses_reg = new RegExp('\\\\.\\\\.+( +)?$');\n  //loop through these chunks, and join the non-sentence chunks back together..\n  for (var _i = 0; _i < chunks.length; _i++) {\n    //should this chunk be combined with the next one?\n    if (chunks[_i + 1] && (chunks[_i].match(abbrev_reg) || chunks[_i].match(acronym_reg) || chunks[_i].match(elipses_reg))) {\n      chunks[_i + 1] = chunks[_i] + (chunks[_i + 1] || '');\n    } else if (chunks[_i] && chunks[_i].length > 0) {\n      //this chunk is a proper sentence..\n      sentences.push(chunks[_i]);\n      chunks[_i] = '';\n    }\n  }\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text];\n  }\n  return sentences;\n};\n\nmodule.exports = sentence_parser;\n// console.log(sentence_parser('john f. kennedy'));\n\n},{\"../data/index\":6,\"./paths\":37}],131:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\n\nvar irregulars = {\n  'wanna': ['want', 'to'],\n  'gonna': ['going', 'to'],\n  'im': ['i', 'am'],\n  'alot': ['a', 'lot'],\n\n  'dont': ['do', 'not'],\n  'dun': ['do', 'not'],\n\n  'ive': ['i', 'have'],\n\n  'won\\'t': ['will', 'not'],\n  'wont': ['will', 'not'],\n\n  'can\\'t': ['can', 'not'],\n  'cant': ['can', 'not'],\n  'cannot': ['can', 'not'],\n\n  'aint': ['is', 'not'], //or 'are'\n  'ain\\'t': ['is', 'not'],\n  'shan\\'t': ['should', 'not'],\n  'imma': ['I', 'will'],\n\n  'where\\'d': ['where', 'did'],\n  'whered': ['where', 'did'],\n  'when\\'d': ['when', 'did'],\n  'whend': ['when', 'did'],\n  'how\\'d': ['how', 'did'],\n  'howd': ['how', 'did'],\n  'what\\'d': ['what', 'did'],\n  'whatd': ['what', 'did'],\n  'let\\'s': ['let', 'us'],\n\n  //multiple word contractions\n  'dunno': ['do', 'not', 'know'],\n  'brb': ['be', 'right', 'back'],\n  'gtg': ['got', 'to', 'go'],\n  'irl': ['in', 'real', 'life'],\n  'tbh': ['to', 'be', 'honest'],\n  'imo': ['in', 'my', 'opinion'],\n  'til': ['today', 'i', 'learned'],\n  'rn': ['right', 'now']\n};\n\n//check irregulars\nvar checkIrregulars = function checkIrregulars(ts) {\n  var irreg = Object.keys(irregulars);\n  for (var i = 0; i < irreg.length; i++) {\n    for (var t = 0; t < ts.terms.length; t++) {\n      if (ts.terms[t].normal === irreg[i]) {\n        var fix = irregulars[irreg[i]];\n        ts = fixContraction(ts, fix, t);\n        break;\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = checkIrregulars;\n\n},{\"./fix\":135}],132:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar splitContraction = _dereq_('./split');\n\n//these are always contractions\n// const blacklist = {\n//   'it\\'s': true,\n//   'that\\'s': true\n// };\n\n// //rocket's red glare\n// if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n//   return true;\n// }\n// //next word is an adjective\n// if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n//   return false;\n// }\n\n\n// \"'s\" may be a contraction or a possessive\n// 'spencer's house' vs 'spencer's good'\nvar isPossessive = function isPossessive(ts, i) {\n  var t = ts.terms[i];\n  var next_t = ts.terms[i + 1];\n  //a pronoun can't be possessive - \"he's house\"\n  if (t.tag.Pronoun || t.tag.QuestionWord) {\n    return false;\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  if (!next_t) {\n    return true;\n  }\n  //a gerund suggests 'is walking'\n  if (next_t.tag.VerbPhrase) {\n    return false;\n  }\n  //spencer's house\n  if (next_t.tag.Noun) {\n    return true;\n  }\n  //rocket's red glare\n  if (next_t.tag.Adjective && ts.terms[i + 2] && ts.terms[i + 2].tag.Noun) {\n    return true;\n  }\n  //an adjective suggests 'is good'\n  if (next_t.tag.Adjective || next_t.tag.Adverb || next_t.tag.Verb) {\n    return false;\n  }\n  return false;\n};\n\n//handle ambigous contraction \"'s\"\nvar hardOne = function hardOne(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    //skip existing\n    if (ts.terms[i].silent_term) {\n      continue;\n    }\n    var parts = splitContraction(ts.terms[i]);\n    if (parts) {\n      //have we found a hard one\n      if (parts.end === 's') {\n        //spencer's house\n        if (isPossessive(ts, i)) {\n          ts.terms[i].tagAs('#Possessive', 'hard-contraction');\n          // console.log('==possessive==');\n          continue;\n        }\n        //is vs was\n        var arr = [parts.start, 'is'];\n        ts = fixContraction(ts, arr, i);\n        i += 1;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = hardOne;\n\n},{\"./fix\":135,\"./split\":137}],133:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar split = _dereq_('./split');\n\n//the formulaic contraction types:\nvar easy_ends = {\n  'll': 'will',\n  'd': 'would',\n  've': 'have',\n  're': 'are',\n  'm': 'am',\n  'n\\'t': 'not'\n  //these ones are a bit tricksier:\n  // 't': 'not',\n  // 's': 'is' //or was\n};\n\n//unambiguous contractions, like \"'ll\"\nvar easyOnes = function easyOnes(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    //skip existing\n    if (ts.terms[i].silent_term) {\n      continue;\n    }\n    var parts = split(ts.terms[i]);\n    if (parts) {\n      //make sure its an easy one\n      if (easy_ends[parts.end]) {\n        var arr = [parts.start, easy_ends[parts.end]];\n        ts = fixContraction(ts, arr, i);\n        i += 1;\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = easyOnes;\n\n},{\"./fix\":135,\"./split\":137}],134:[function(_dereq_,module,exports){\n'use strict';\n\nvar fixContraction = _dereq_('./fix');\nvar Term = _dereq_('../../term');\n\nvar numberRange = function numberRange(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //skip existing\n    if (t.silent_term) {\n      continue;\n    }\n    //hyphens found in whitespace - '5 - 7'\n    if (t.tag.Value && i > 0 && t.whitespace.before === ' - ') {\n      var to = new Term('');\n      to.silent_term = 'to';\n      ts.insertAt(i, to);\n      ts.terms[i - 1].tagAs('NumberRange');\n      ts.terms[i].tagAs('NumberRange');\n      ts.terms[i].whitespace.before = '';\n      ts.terms[i].whitespace.after = '';\n      ts.terms[i + 1].tagAs('NumberRange');\n      return ts;\n    }\n    if (t.tag.NumberRange) {\n      var arr = t.text.split(/(-)/);\n      arr[1] = 'to';\n      ts = fixContraction(ts, arr, i);\n      ts.terms[i].tagAs('NumberRange');\n      ts.terms[i + 1].tagAs('NumberRange');\n      ts.terms[i + 2].tagAs('NumberRange');\n      i += 2;\n    }\n  }\n  return ts;\n};\nmodule.exports = numberRange;\n\n},{\"../../term\":177,\"./fix\":135}],135:[function(_dereq_,module,exports){\n'use strict';\n\nvar Term = _dereq_('../../term');\n\nvar tags = {\n  'not': 'Negative',\n  'will': 'Verb',\n  'would': 'Modal',\n  'have': 'Verb',\n  'are': 'Copula',\n  'is': 'Copula',\n  'am': 'Verb'\n};\n//make sure the newly created term gets the easy tags\nvar easyTag = function easyTag(t) {\n  if (tags[t.silent_term]) {\n    t.tagAs(tags[t.silent_term]);\n  }\n};\n\n//add a silent term\nvar fixContraction = function fixContraction(ts, parts, i) {\n  //add the interpretation to the contracted term\n  var one = ts.terms[i];\n  one.silent_term = parts[0];\n  //tag it as a contraction\n  one.tagAs('Contraction', 'tagger-contraction');\n\n  //add a new empty term\n  var two = new Term('');\n  two.silent_term = parts[1];\n  two.tagAs('Contraction', 'tagger-contraction');\n  ts.insertAt(i + 1, two);\n  //ensure new term has no auto-whitspace\n  two.whitespace.before = '';\n  two.whitespace.after = '';\n  easyTag(two);\n\n  //potentially it's three-contracted-terms, like 'dunno'\n  if (parts[2]) {\n    var three = new Term('');\n    three.silent_term = parts[2];\n    // ts.terms.push(three);\n    ts.insertAt(i + 2, three);\n    three.tagAs('Contraction', 'tagger-contraction');\n    easyTag(three);\n  }\n\n  return ts;\n};\n\nmodule.exports = fixContraction;\n\n},{\"../../term\":177}],136:[function(_dereq_,module,exports){\n'use strict';\n\nvar irregulars = _dereq_('./01-irregulars');\nvar hardOne = _dereq_('./02-hardOne');\nvar easyOnes = _dereq_('./03-easyOnes');\nvar numberRange = _dereq_('./04-numberRange');\n\n//find and pull-apart contractions\nvar interpret = function interpret(ts) {\n  //check irregulars\n  ts = irregulars(ts);\n  //guess-at ambiguous \"'s\" one\n  ts = hardOne(ts);\n  //check easy ones\n  ts = easyOnes(ts);\n  //5-7\n  ts = numberRange(ts);\n  return ts;\n};\n\nmodule.exports = interpret;\n\n},{\"./01-irregulars\":131,\"./02-hardOne\":132,\"./03-easyOnes\":133,\"./04-numberRange\":134}],137:[function(_dereq_,module,exports){\n'use strict';\n\nvar allowed = {\n  're': true,\n  've': true,\n  'll': true,\n  't': true,\n  's': true,\n  'd': true,\n  'm': true\n};\n/** interpret a terms' contraction */\nvar splitContraction = function splitContraction(t) {\n  var parts = t.text.match(/^([a-z]+)'([a-z][a-z]?)$/i);\n  if (parts && parts[1] && allowed[parts[2]]) {\n    //handle n't\n    if (parts[2] === 't' && parts[1].match(/[a-z]n$/)) {\n      parts[1] = parts[1].replace(/n$/, '');\n      parts[2] = 'n\\'t'; //dunno..\n    }\n    //fix titlecase\n    if (t.tag.TitleCase) {\n      parts[1] = parts[1].replace(/^[a-z]/, function (x) {\n        return x.toUpperCase();\n      });\n    }\n    return {\n      start: parts[1],\n      end: parts[2]\n    };\n  }\n  // \"flanders' house\"\n  parts = t.text.match(/[a-z]s'$/i);\n  if (parts) {\n    return {\n      start: t.normal.replace(/s'?$/, ''),\n      end: ''\n    };\n  }\n  return null;\n};\nmodule.exports = splitContraction;\n\n},{}],138:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'correction';\nvar verb_corrections = _dereq_('./verb_corrections');\n\n//mostly pos-corections here\nvar corrections = function corrections(r) {\n  log.here(path);\n  //ambig prepositions/conjunctions\n  //so funny\n  r.match('so #Adjective').match('so').tag('Adverb', 'so-adv');\n  //so the\n  r.match('so #Noun').match('so').tag('Conjunction', 'so-conj');\n  //do so\n  r.match('do so').match('so').tag('Noun', 'so-noun');\n  //still good\n  r.match('still #Adjective').match('still').tag('Adverb', 'still-advb');\n  //'more' is not always an adverb\n  r.match('more #Noun').tag('Noun', 'more-noun');\n  //still make\n  r.match('still #Verb').term(0).tag('Adverb', 'still-verb');\n  //the word 'second'\n  r.match('second #Noun').term(0).unTag('Unit').tag('Ordinal', 'second-noun');\n  //foot/feet\n  r.match('(foot|feet)').tag('Noun', 'foot-noun');\n  r.match('#Value (foot|feet)').match('(foot|feet)').tag('Unit', 'foot-unit');\n  //the word 'how'\n  r.match('how (#Copula|#Modal|#PastTense)').term(0).tag('QuestionWord', 'how-question');\n  //will secure our\n  r.match('will #Adjective').term(1).tag('Verb', 'will-adj');\n  //'u' as pronoun\n  r.match('u #Verb').term(0).tag('Pronoun', 'u-pronoun-1');\n  r.match('#Conjunction u').term(1).tag('Pronoun', 'u-pronoun-2');\n  //is no walk\n  r.match('is no #Verb').term(2).tag('Noun', 'is-no-verb');\n\n  //Determiner-signals\n  //the wait to vote\n  r.match('the #Verb #Preposition .').match('#Verb').tag('Noun', 'correction-determiner1');\n  //the swim\n  r.match('the #Verb').match('#Verb').tag('Noun', 'correction-determiner2');\n  //the nice swim\n  r.match('the #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner3');\n  //the truly nice swim\n  r.match('the #Adverb #Adjective #Verb').match('#Verb').tag('Noun', 'correction-determiner4');\n\n  //organization\n  r.match('#Organization of the? #TitleCase').tag('Organization', 'org-of-place');\n  r.match('#Organization #Country').tag('Organization', 'org-country');\n  r.match('(world|global|international|national|#Demonym) #Organization').tag('Organization', 'global-org');\n  r.match('#TitleCase (ltd|co|inc|dept|assn|bros)').tag('Organization', 'org-abbrv');\n\n  //a sense of\n  r.match('#Determiner #Verb of').term(1).tag('Noun', 'the-verb-of');\n  //he quickly foo\n  r.match('#Noun #Adverb #Noun').term(2).tag('Verb', 'correction');\n  //is eager to go\n  r.match('#Copula #Adjective to #Verb').match('#Adjective to').tag('Verb', 'correction');\n  //different views than\n  r.match('#Verb than').term(0).tag('Noun', 'correction');\n  //her polling\n  r.match('#Possessive #Verb').term(1).tag('Noun', 'correction-possessive');\n\n  //like\n  r.match('just like').term(1).tag('Preposition', 'like-preposition');\n  //folks like her\n  r.match('#Noun like #Noun').term(1).tag('Preposition', 'noun-like');\n  //look like\n  r.match('#Verb like').term(1).tag('Adverb', 'verb-like');\n  //exactly like\n  r.match('#Adverb like').term(1).tag('Adverb', 'adverb-like');\n\n  //the threat of force\n  r.match('#Determiner #Noun of #Verb').match('#Verb').tag('Noun', 'noun-of-noun');\n  //big dreams, critical thinking\n  r.match('#Adjective #PresentTense').term(1).tag('Noun', 'adj-presentTense');\n  //my buddy\n  r.match('#Possessive #FirstName').term(1).unTag('Person', 'possessive-name');\n  //'a/an' can mean 1\n  r.match('(a|an) (#Duration|#Value)').ifNo('#Plural').term(0).tag('Value', 'a-is-one');\n  //half a million\n  r.match('half a? #Value').tag('Value', 'half-a-value'); //quarter not ready\n  r.match('#Value and a (half|quarter)').tag('Value', 'value-and-a-half');\n  //all values are either ordinal or cardinal\n  r.match('#Value').match('!#Ordinal').tag('#Cardinal', 'not-ordinal');\n\n  //money\n  r.match('#Value+ #Currency').tag('Money', 'value-currency');\n  r.match('#Money and #Money #Currency?').tag('Money', 'money-and-money');\n\n  //swear-words as non-expression POS\n  //nsfw\n  r.match('holy (shit|fuck|hell)').tag('Expression', 'swears-expression');\n  r.match('#Determiner (shit|damn|hell)').term(1).tag('Noun', 'swears-noun');\n  r.match('(shit|damn|fuck) (#Determiner|#Possessive|them)').term(0).tag('Verb', 'swears-verb');\n  r.match('#Copula fucked up?').not('#Copula').tag('Adjective', 'swears-adjective');\n\n  //more-detailed corrections\n  r = verb_corrections(r);\n\n  return r;\n};\n\nmodule.exports = corrections;\n\n},{\"../paths\":145,\"./verb_corrections\":139}],139:[function(_dereq_,module,exports){\n'use strict';\n\nvar corrections = function corrections(r) {\n  //support a splattering of auxillaries before a verb\n  var advb = '(#Adverb|not)+?';\n  //had walked\n  r.match('(has|had) ' + advb + ' #PastTense').not('#Verb$').tag('Auxillary', 'had-walked');\n  //was walking\n  r.match('#Copula ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'copula-walking');\n  //been walking\n  r.match('(be|been) ' + advb + ' #Gerund').not('#Verb$').tag('Auxillary', 'be-walking');\n  //would walk\n  r.match('(#Modal|did) ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'modal-verb');\n  //would have had\n  r.match('#Modal ' + advb + ' have ' + advb + ' had ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-have');\n  //would be walking\n  r.match('(#Modal) ' + advb + ' be ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n  //would been walking\n  r.match('(#Modal|had|has) ' + advb + ' been ' + advb + ' #Verb').not('#Verb$').tag('Auxillary', 'would-be');\n  //infinitive verbs suggest plural nouns - 'XYZ walk to the store'\n  // r.match(`#Singular+ #Infinitive`).match('#Singular+').tag('Plural', 'infinitive-make-plural');\n  return r;\n};\nmodule.exports = corrections;\n\n},{}],140:[function(_dereq_,module,exports){\n'use strict';\n//the steps and processes of pos-tagging\n\nvar contraction = {\n  interpret: _dereq_('./contraction')\n};\nvar lumper = {\n  lexicon_lump: _dereq_('./lumper/lexicon_lump'),\n  lump_two: _dereq_('./lumper/lump_two'),\n  lump_three: _dereq_('./lumper/lump_three')\n};\nvar step = {\n  punctuation_step: _dereq_('./steps/01-punctuation_step'),\n  lexicon_step: _dereq_('./steps/02-lexicon_step'),\n  capital_step: _dereq_('./steps/03-capital_step'),\n  web_step: _dereq_('./steps/04-web_step'),\n  suffix_step: _dereq_('./steps/05-suffix_step'),\n  neighbour_step: _dereq_('./steps/06-neighbour_step'),\n  noun_fallback: _dereq_('./steps/07-noun_fallback'),\n  date_step: _dereq_('./steps/08-date_step'),\n  auxillary_step: _dereq_('./steps/09-auxillary_step'),\n  negation_step: _dereq_('./steps/10-negation_step'),\n  phrasal_step: _dereq_('./steps/12-phrasal_step'),\n  comma_step: _dereq_('./steps/13-comma_step'),\n  possessive_step: _dereq_('./steps/14-possessive_step'),\n  value_step: _dereq_('./steps/15-value_step'),\n  acronym_step: _dereq_('./steps/16-acronym_step'),\n  emoji_step: _dereq_('./steps/17-emoji_step'),\n  person_step: _dereq_('./steps/18-person_step'),\n  quotation_step: _dereq_('./steps/19-quotation_step'),\n  organization_step: _dereq_('./steps/20-organization_step'),\n  plural_step: _dereq_('./steps/21-plural_step')\n};\nvar corrections = _dereq_('./corrections');\nvar tagPhrase = _dereq_('./phrase');\n\nvar tagger = function tagger(ts) {\n  ts = step.punctuation_step(ts);\n  ts = step.emoji_step(ts);\n  ts = lumper.lexicon_lump(ts);\n  ts = step.lexicon_step(ts);\n  ts = step.web_step(ts);\n  ts = step.suffix_step(ts);\n  ts = step.neighbour_step(ts);\n  ts = step.capital_step(ts);\n  ts = step.noun_fallback(ts);\n  ts = contraction.interpret(ts);\n  ts = step.date_step(ts);\n  ts = step.auxillary_step(ts);\n  ts = step.negation_step(ts);\n  ts = step.phrasal_step(ts);\n  ts = step.comma_step(ts);\n  ts = step.possessive_step(ts);\n  ts = step.value_step(ts);\n  ts = step.acronym_step(ts);\n  ts = step.person_step(ts);\n  ts = step.quotation_step(ts);\n  ts = step.organization_step(ts);\n  ts = step.plural_step(ts);\n  //lump a couple times, for long ones\n  for (var i = 0; i < 3; i++) {\n    ts = lumper.lump_three(ts);\n    ts = lumper.lump_two(ts);\n  }\n  ts = corrections(ts);\n  ts = tagPhrase(ts);\n  return ts;\n};\n\nmodule.exports = tagger;\n\n},{\"./contraction\":136,\"./corrections\":138,\"./lumper/lexicon_lump\":142,\"./lumper/lump_three\":143,\"./lumper/lump_two\":144,\"./phrase\":147,\"./steps/01-punctuation_step\":148,\"./steps/02-lexicon_step\":149,\"./steps/03-capital_step\":150,\"./steps/04-web_step\":151,\"./steps/05-suffix_step\":152,\"./steps/06-neighbour_step\":153,\"./steps/07-noun_fallback\":154,\"./steps/08-date_step\":155,\"./steps/09-auxillary_step\":156,\"./steps/10-negation_step\":157,\"./steps/12-phrasal_step\":158,\"./steps/13-comma_step\":159,\"./steps/14-possessive_step\":160,\"./steps/15-value_step\":161,\"./steps/16-acronym_step\":162,\"./steps/17-emoji_step\":163,\"./steps/18-person_step\":164,\"./steps/19-quotation_step\":165,\"./steps/20-organization_step\":166,\"./steps/21-plural_step\":167}],141:[function(_dereq_,module,exports){\n'use strict';\n\nvar paths = _dereq_('../paths');\nvar Term = _dereq_('../../term');\nvar log = paths.log;\nvar path = 'tagger/combine';\n//merge two term objects.. carefully\n\nvar makeText = function makeText(a, b) {\n  var text = a.whitespace.before + a.text + a.whitespace.after;\n  text += b.whitespace.before + b.text + b.whitespace.after;\n  return text;\n};\n\nvar combine = function combine(s, i) {\n  var a = s.terms[i];\n  var b = s.terms[i + 1];\n  if (!b) {\n    return;\n  }\n  log.tell('--combining: \"' + a.normal + '\"+\"' + b.normal + '\"', path);\n  var text = makeText(a, b);\n  s.terms[i] = new Term(text, a.context);\n  s.terms[i].normal = a.normal + ' ' + b.normal;\n  s.terms[i + 1] = null;\n  s.terms = s.terms.filter(function (t) {\n    return t !== null;\n  });\n  return;\n};\n\nmodule.exports = combine;\n\n},{\"../../term\":177,\"../paths\":145}],142:[function(_dereq_,module,exports){\n'use strict';\n//check for \"united\" + \"kingdom\" in lexicon, and combine + tag it\n\nvar combine = _dereq_('./combine');\nvar p = _dereq_('../paths');\nvar log = p.log;\nvar lexicon = p.lexicon;\nvar fns = p.fns;\nvar path = 'tagger/multiple';\nvar tries = _dereq_('../../tries');\n\nvar combineMany = function combineMany(ts, i, count) {\n  for (var n = 0; n < count; n++) {\n    combine(ts, i);\n  }\n};\n\n//try to concatenate multiple-words to get this term\nvar tryStringFrom = function tryStringFrom(want, start, ts) {\n  var text = '';\n  var normal = '';\n  var simple = '';\n  for (var i = start; i < ts.terms.length; i++) {\n    if (i === start) {\n      text = ts.terms[i].text;\n      normal = ts.terms[i].normal;\n      simple = ts.terms[i].root;\n    } else {\n      text += ' ' + ts.terms[i].text;\n      normal += ' ' + ts.terms[i].normal;\n      simple += ' ' + ts.terms[i].root;\n    }\n    //we've gone too far\n    if (text === want || normal === want || simple === want) {\n      var count = i - start;\n      combineMany(ts, start, count);\n      return true;\n    }\n    if (normal.length > want.length) {\n      return false;\n    }\n  }\n  return false;\n};\n\nvar lexicon_lump = function lexicon_lump(ts) {\n  log.here(path);\n  var uLexicon = ts.lexicon || {};\n\n  //try the simpler, known lexicon\n  for (var i = 0; i < ts.terms.length - 1; i++) {\n    //try 'A'+'B'\n    var normal = ts.terms[i].normal + ' ' + ts.terms[i + 1].normal;\n    var text = ts.terms[i].text + ' ' + ts.terms[i + 1].text;\n    var pos = lexicon[normal] || lexicon[text];\n\n    if (!pos) {\n      pos = tries.lookupMulti(normal);\n    }\n\n    if (pos) {\n      combine(ts, i);\n      ts.terms[i].tagAs(pos, 'multiples-lexicon');\n    }\n  }\n\n  //try the user's lexicon\n  Object.keys(uLexicon).forEach(function (str) {\n    for (var _i = 0; _i < ts.terms.length; _i++) {\n      if (fns.startsWith(str, ts.terms[_i].normal) || fns.startsWith(str, ts.terms[_i].text)) {\n        if (tryStringFrom(str, _i, ts)) {\n          ts.terms[_i].tagAs(uLexicon[str], 'user-lexicon-lump');\n        }\n      }\n    }\n  });\n  return ts;\n};\n\nmodule.exports = lexicon_lump;\n\n},{\"../../tries\":235,\"../paths\":145,\"./combine\":141}],143:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'lumper/lump_three';\nvar combine = _dereq_('./combine');\n\n//rules for combining three terms into one\nvar do_three = [{\n  //John & Joe's\n  condition: function condition(a, b, c) {\n    return a.tag.Noun && (b.text === '&' || b.normal === 'n') && c.tag.Noun;\n  },\n  result: 'Organization',\n  reason: 'Noun-&-Noun'\n}, {\n  //1 800 PhoneNumber\n  condition: function condition(a, b, c) {\n    return a.tag.Value && b.tag.Value && c.tag.PhoneNumber && b.normal.length === 3 && a.normal.length < 3;\n  },\n  result: 'PhoneNumber',\n  reason: '1-800-PhoneNumber'\n}];\n\nvar lump_three = function lump_three(s) {\n  log.here(path);\n  for (var o = 0; o < do_three.length; o++) {\n    for (var i = 0; i < s.terms.length - 2; i++) {\n      var a = s.terms[i];\n      var b = s.terms[i + 1];\n      var c = s.terms[i + 2];\n      if (do_three[o].condition(a, b, c)) {\n        //merge terms A+B\n        combine(s, i);\n        //merge A+C\n        combine(s, i);\n        //tag it as POS\n        s.terms[i].tagAs(do_three[o].result, 'lump-three (' + do_three[o].reason + ')');\n      }\n    }\n  }\n  return s;\n};\n\nmodule.exports = lump_three;\n\n},{\"../paths\":145,\"./combine\":141}],144:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'lumper/lump_two';\nvar combine = _dereq_('./combine');\n\nvar timezones = {\n  standard: true,\n  daylight: true,\n  summer: true,\n  eastern: true,\n  pacific: true,\n  central: true,\n  mountain: true\n};\n\n//rules that combine two words\nvar do_two = [{\n  //6 am\n  condition: function condition(a, b) {\n    return a.tag.Holiday && (b.normal === 'day' || b.normal === 'eve');\n  },\n  result: 'Holiday',\n  reason: 'holiday-day'\n}, {\n  //Aircraft designer\n  condition: function condition(a, b) {\n    return a.tag.Noun && b.tag.Actor;\n  },\n  result: 'Actor',\n  reason: 'thing-doer'\n}, {\n  //timezones\n  condition: function condition(a, b) {\n    return timezones[a.normal] && (b.normal === 'standard time' || b.normal === 'time');\n  },\n  result: 'Time',\n  reason: 'timezone'\n}, {\n  //canadian dollar, Brazilian pesos\n  condition: function condition(a, b) {\n    return a.tag.Demonym && b.tag.Currency;\n  },\n  result: 'Currency',\n  reason: 'demonym-currency'\n}, {\n  //(454) 232-9873\n  condition: function condition(a, b) {\n    return a.tag.NumericValue && b.tag.PhoneNumber && a.normal.length <= 3;\n  },\n  result: 'PhoneNumber',\n  reason: '(800) PhoneNumber'\n}];\n\nvar lump_two = function lump_two(s) {\n  log.here(path);\n  for (var o = 0; o < do_two.length; o++) {\n    for (var i = 0; i < s.terms.length - 1; i++) {\n      var a = s.terms[i];\n      var b = s.terms[i + 1];\n      if (do_two[o].condition(a, b)) {\n        //merge terms\n        combine(s, i);\n        //tag it as POS\n        s.terms[i].tagAs(do_two[o].result, 'lump-two (' + do_two[o].reason + ')');\n      }\n    }\n  }\n  return s;\n};\n\nmodule.exports = lump_two;\n\n},{\"../paths\":145,\"./combine\":141}],145:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../fns'),\n  lexicon: _dereq_('../data/lexicon'),\n  tries: _dereq_('../tries'),\n  log: _dereq_('../log'),\n  data: _dereq_('../data'),\n  Terms: _dereq_('../terms'),\n  tags: _dereq_('../tags')\n};\n\n},{\"../data\":6,\"../data/lexicon\":7,\"../fns\":21,\"../log\":23,\"../tags\":175,\"../terms\":195,\"../tries\":235}],146:[function(_dereq_,module,exports){\n'use strict';\n\n//\n\nvar conditionPass = function conditionPass(r) {\n  //'if it really goes, I will..'\n  var m = r.match('#Condition {1,7} #ClauseEnd');\n  //make sure it ends on a comma\n  if (m.found && m.match('#Comma$')) {\n    m.tag('ConditionPhrase');\n  }\n  //'go a bit further, if it then has a pronoun\n  m = r.match('#Condition {1,13} #ClauseEnd #Pronoun');\n  if (m.found && m.match('#Comma$')) {\n    m.not('#Pronoun$').tag('ConditionPhrase', 'end-pronoun');\n  }\n  //if it goes then ..\n  m = r.match('#Condition {1,7} then');\n  if (m.found) {\n    m.not('then$').tag('ConditionPhrase', 'cond-then');\n  }\n  //at the end of a sentence:\n  //'..., if it really goes.'\n  m = r.match('#Comma #Condition {1,7} .$');\n  if (m.found) {\n    m.not('^#Comma').tag('ConditionPhrase', 'comma-7-end');\n  }\n  // '... if so.'\n  m = r.match('#Condition {1,4}$');\n  if (m.found) {\n    m.tag('ConditionPhrase', 'cond-4-end');\n  }\n  return r;\n};\n\nmodule.exports = conditionPass;\n\n},{}],147:[function(_dereq_,module,exports){\n'use strict';\n\nvar conditionPass = _dereq_('./00-conditionPass');\n// const verbPhrase = require('./01-verbPhrase');\n// const nounPhrase = require('./02-nounPhrase');\n// const AdjectivePhrase = require('./03-adjectivePhrase');\n//\nvar phraseTag = function phraseTag(Text) {\n  Text = conditionPass(Text);\n  // Text = verbPhrase(Text);\n  // Text = nounPhrase(Text);\n  // Text = AdjectivePhrase(Text);\n  return Text;\n};\n\nmodule.exports = phraseTag;\n\n},{\"./00-conditionPass\":146}],148:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar rules = _dereq_('./rules/punct_rules');\nvar path = 'tagger/punctuation';\n\n//not so smart (right now)\nvar isRomanNumeral = function isRomanNumeral(t) {\n  if (!t.canBe('RomanNumeral')) {\n    return false;\n  }\n  var str = t.text;\n  if (str.length > 1 && str.match(/^[IVXCM]+$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar oneLetters = {\n  a: true,\n  i: true,\n  //internet-slang\n  u: true,\n  r: true,\n  c: true,\n  k: true\n};\n\nvar punctuation_step = function punctuation_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    var str = t.text;\n    //anything can be titlecase\n    if (str.match(/^[A-Z][a-z']/)) {\n      t.tagAs('TitleCase', 'punct-rule');\n    }\n    //ok, normalise it a little,\n    str = str.replace(/[,\\.\\?]$/, '');\n    //do punctuation rules (on t.text)\n    for (var i = 0; i < rules.length; i++) {\n      var r = rules[i];\n      if (str.match(r.reg)) {\n        //don't over-write any other known tags\n        if (t.canBe(r.tag)) {\n          t.tagAs(r.tag, 'punctuation-rule- \"' + r.str + '\"');\n        }\n        return;\n      }\n    }\n    //terms like 'e'\n    if (str.length === 1 && !oneLetters[str.toLowerCase()]) {\n      t.tagAs('Acronym', 'one-letter-acronym');\n    }\n    //roman numerals (weak rn)\n    if (isRomanNumeral(t)) {\n      t.tagAs('RomanNumeral', 'is-roman-numeral');\n    }\n  });\n  return ts;\n};\n\nmodule.exports = punctuation_step;\n\n},{\"../paths\":145,\"./rules/punct_rules\":171}],149:[function(_dereq_,module,exports){\n'use strict';\n\nvar p = _dereq_('../paths');\nvar split = _dereq_('../contraction/split');\nvar tries = _dereq_('../../tries');\n\nvar lexicon = p.lexicon;\nvar log = p.log;\nvar path = 'tagger/lexicon';\n\nvar check_lexicon = function check_lexicon(str, sentence) {\n  //check a user's custom lexicon\n  var custom = sentence.lexicon || {};\n  if (custom[str]) {\n    return custom[str];\n  }\n  if (lexicon[str]) {\n    return lexicon[str];\n  }\n  var tag = tries.lookup(str);\n  if (tag) {\n    return tag;\n  }\n  return null;\n};\n\nvar lexicon_pass = function lexicon_pass(ts) {\n  log.here(path);\n  var found = void 0;\n  //loop through each term\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //basic term lookup\n    found = check_lexicon(t.normal, ts);\n    if (found) {\n      t.tagAs(found, 'lexicon-match');\n      continue;\n    }\n    found = check_lexicon(t.text, ts);\n    if (found) {\n      t.tagAs(found, 'lexicon-match-text');\n      continue;\n    }\n    //support contractions (manually)\n    var parts = split(t);\n    if (parts && parts.start) {\n      found = check_lexicon(parts.start.toLowerCase(), ts);\n      if (found) {\n        t.tagAs(found, 'contraction-lexicon');\n        continue;\n      }\n    }\n    //support silent_term matches\n    found = check_lexicon(t.silent_term, ts);\n    if (t.silent_term && found) {\n      t.tagAs(found, 'silent_term-lexicon');\n      continue;\n    }\n    //multiple-words / hyphenation\n    var words = t.normal.split(/[ -]/);\n    if (words.length > 1) {\n      found = check_lexicon(words[words.length - 1], ts);\n      if (found) {\n        t.tagAs(found, 'multiword-lexicon');\n        continue;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = lexicon_pass;\n\n},{\"../../tries\":235,\"../contraction/split\":137,\"../paths\":145}],150:[function(_dereq_,module,exports){\n'use strict';\n//titlecase is a signal for a noun\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/capital';\n\nvar capital_logic = function capital_logic(s) {\n  log.here(path);\n  //(ignore first word)\n  for (var i = 1; i < s.terms.length; i++) {\n    var _t = s.terms[i];\n    //has a capital, but isn't too weird.\n    if (_t.tag.TitleCase && _t.isWord()) {\n      _t.tagAs('Noun', 'capital-step');\n      _t.tagAs('TitleCase', 'capital-step');\n    }\n  }\n  //support first-word of sentence as proper titlecase\n  var t = s.terms[0];\n  if (t && t.tag.TitleCase) {\n    if (t.tag.Person || t.tag.Organization || t.tag.Place) {\n      t.tagAs('TitleCase', 'first-term-capital');\n    }\n  }\n  return s;\n};\n\nmodule.exports = capital_logic;\n\n},{\"../paths\":145}],151:[function(_dereq_,module,exports){\n'use strict';\n//identify urls, hashtags, @mentions, emails\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/web_step';\n// 'Email': Noun,\n// 'Url': Noun,\n// 'AtMention': Noun,\n// 'HashTag': Noun,\n\nvar is_email = function is_email(str) {\n  if (str.match(/^\\w+@\\w+\\.[a-z]{2,3}$/)) {\n    //not fancy\n    return true;\n  }\n  return false;\n};\n\nvar is_hashtag = function is_hashtag(str) {\n  if (str.match(/^#[a-z0-9_]{2,}$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar is_atmention = function is_atmention(str) {\n  if (str.match(/^@\\w{2,}$/)) {\n    return true;\n  }\n  return false;\n};\n\nvar is_url = function is_url(str) {\n  //with http/www\n  if (str.match(/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/)) {\n    //not fancy\n    return true;\n  }\n  // 'boo.com'\n  //http://mostpopularwebsites.net/top-level-domain\n  if (str.match(/^[\\w\\.\\/]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/)) {\n    return true;\n  }\n  return false;\n};\n\nvar web_pass = function web_pass(terms) {\n  log.here(path);\n  for (var i = 0; i < terms.length; i++) {\n    var t = terms.get(i);\n    var str = t.text.trim().toLowerCase();\n    if (is_email(str)) {\n      t.tagAs('Email', 'web_pass');\n    }\n    if (is_hashtag(str)) {\n      t.tagAs('HashTag', 'web_pass');\n    }\n    if (is_atmention(str)) {\n      t.tagAs('AtMention', 'web_pass');\n    }\n    if (is_url(str)) {\n      t.tagAs('Url', 'web_pass');\n    }\n  }\n  return terms;\n};\n\nmodule.exports = web_pass;\n\n},{\"../paths\":145}],152:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar rules = _dereq_('./rules/word_rules');\nvar path = 'tagger/suffix';\n\nvar suffix_step = function suffix_step(s) {\n  log.here(path);\n  s.terms.forEach(function (t) {\n    //do normalized rules (on t.normal)\n    for (var o = 0; o < rules.length; o++) {\n      var r = rules[o];\n      if (t.normal.match(r.reg)) {\n        //don't over-write any other known tags\n        if (t.canBe(r.tag)) {\n          t.tagAs(r.tag, 'word-rule- \"' + r.str + '\"');\n        }\n        return;\n      }\n    }\n  });\n  return s;\n};\n\nmodule.exports = suffix_step;\n\n},{\"../paths\":145,\"./rules/word_rules\":172}],153:[function(_dereq_,module,exports){\n'use strict';\n\nvar markov = _dereq_('./rules/neighbours');\nvar afterThisWord = markov.afterThisWord;\nvar beforeThisWord = markov.beforeThisWord;\nvar beforeThisPos = markov.beforeThisPos;\nvar afterThisPos = markov.afterThisPos;\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/neighbours';\n\n//basically a last-ditch effort before everything falls back to a noun\n//for unknown terms, look left + right first, and hit-up the markov-chain for clues\nvar neighbour_step = function neighbour_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t, n) {\n    //is it still unknown?\n    var termTags = Object.keys(t.tag);\n    if (termTags.length === 0) {\n      var lastTerm = ts.terms[n - 1];\n      var nextTerm = ts.terms[n + 1];\n      //look at last word for clues\n      if (lastTerm && afterThisWord[lastTerm.normal]) {\n        t.tagAs(afterThisWord[lastTerm.normal], 'neighbour-after-\"' + lastTerm.normal + '\"');\n        return;\n      }\n      //look at next word for clues\n      if (nextTerm && beforeThisWord[nextTerm.normal]) {\n        t.tagAs(beforeThisWord[nextTerm.normal], 'neighbour-before-\"' + nextTerm.normal + '\"');\n        return;\n      }\n      //look at the last POS for clues\n      var tags = [];\n      if (lastTerm) {\n        tags = Object.keys(lastTerm.tag);\n        for (var i = 0; i < tags.length; i++) {\n          if (afterThisPos[tags[i]]) {\n            t.tagAs(afterThisPos[tags[i]], 'neighbour-after-[' + tags[i] + ']');\n            return;\n          }\n        }\n      }\n      //look at the next POS for clues\n      if (nextTerm) {\n        tags = Object.keys(nextTerm.tag);\n        for (var _i = 0; _i < tags.length; _i++) {\n          if (beforeThisPos[tags[_i]]) {\n            t.tagAs(beforeThisPos[tags[_i]], 'neighbour-before-[' + tags[_i] + ']');\n            return;\n          }\n        }\n      }\n    }\n  });\n\n  return ts;\n};\n\nmodule.exports = neighbour_step;\n\n},{\"../paths\":145,\"./rules/neighbours\":170}],154:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/noun_fallback';\n//tag word as noun if we know nothing about it, still.\n\n//tags that dont really count\nvar nothing = {\n  TitleCase: true,\n  UpperCase: true,\n  CamelCase: true\n};\n//are the tags basically empty\nvar gotNothing = function gotNothing(t) {\n  //fail-fast\n  if (t.tag.Noun || t.tag.Verb || t.tag.Adjective) {\n    return false;\n  }\n  var tags = Object.keys(t.tag);\n  if (tags.length === 0) {\n    return true;\n  }\n  if (tags.filter(function (tag) {\n    return !nothing[tag];\n  }).length === 0) {\n    return true;\n  }\n  return false;\n};\n\nvar noun_fallback = function noun_fallback(s) {\n  log.here(path);\n  for (var i = 0; i < s.terms.length; i++) {\n    var t = s.terms[i];\n    //fail-fast\n    if (t.tag.Noun || t.tag.Verb) {\n      continue;\n    }\n    //ensure it only has the tag 'Term'\n    if (gotNothing(t)) {\n      //ensure it's atleast word-looking\n      if (t.isWord() === false) {\n        continue;\n      }\n      t.tagAs('Noun', 'noun-fallback');\n    }\n  }\n  return s;\n};\n\nmodule.exports = noun_fallback;\n\n},{\"../paths\":145}],155:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/datePass';\n\n//ambiguous 'may' and 'march'\nvar months = '(may|march|jan|april|sep)';\nvar preps = '(in|by|before|for|during|on|until|after|of|within)';\nvar thisNext = '(last|next|this|previous|current|upcoming|coming)';\nvar sections = '(start|end|middle|starting|ending|midpoint|beginning)';\n// const dayTime = '(night|evening|morning|afternoon|day|daytime)';\n\n// const isDate = (num) => {\n//   if (num && num < 31 && num > 0) {\n//     return true;\n//   }\n//   return false;\n// };\n\n//ensure a year is approximately typical for common years\n//please change in one thousand years\nvar isYear = function isYear(num) {\n  if (num && num > 1000 && num < 3000) {\n    return true;\n  }\n  return false;\n};\n\n//non-destructively tag values & prepositions as dates\nvar datePass = function datePass(ts) {\n  log.here(path);\n\n  ts.match('#Month #DateRange+').tag('Date', 'correction-numberRange');\n  // ts.match(`#Month #Value to #Value`).tag('Date', 'correction-contraction');\n\n  //months\n  ts.match(months + ' (#Determiner|#Value|#Date)').term(0).tag('Month', 'correction-may');\n  ts.match('#Date ' + months).term(1).tag('Month', 'correction-may');\n  ts.match(preps + ' ' + months).term(1).tag('Month', 'correction-may');\n  ts.match('(next|this|last) ' + months).term(1).tag('Month', 'correction-may'); //maybe not 'this'\n\n  //values\n  ts.match('#Value #Abbreviation').tag('Value', 'value-abbr');\n  ts.match('a #Value').tag('Value', 'a-value');\n  ts.match('(minus|negative) #Value').tag('Value', 'minus-value');\n  ts.match('#Value grand').tag('Value', 'value-grand');\n  // ts.match('#Ordinal (half|quarter)').tag('Value', 'ordinal-half');//not ready\n  ts.match('(half|quarter) #Ordinal').tag('Value', 'half-ordinal');\n  ts.match('(hundred|thousand|million|billion|trillion) and #Value').tag('Value', 'magnitude-and-value');\n  ts.match('#Value point #Value').tag('Value', 'value-point-value');\n\n  //time\n  ts.match('#Cardinal #Time').tag('Time', 'value-time');\n  ts.match('(by|before|after|at|@|about) #Time').tag('Time', 'preposition-time');\n  ts.match('(#Value|#Time) (am|pm)').tag('Time', 'value-ampm');\n  ts.match('all day').tag('Time', 'all-day');\n\n  //seasons\n  ts.match(preps + '? ' + thisNext + ' (spring|summer|winter|fall|autumn)').tag('Date', 'thisNext-season');\n  ts.match('the? ' + sections + ' of (spring|summer|winter|fall|autumn)').tag('Date', 'section-season');\n\n  //june the 5th\n  ts.match('#Date the? #Ordinal').tag('Date', 'correction-date');\n  //5th of March\n  ts.match('#Value of? #Month').tag('Date', 'value-of-month');\n  //5 March\n  ts.match('#Cardinal #Month').tag('Date', 'cardinal-month');\n  //march 5 to 7\n  ts.match('#Month #Value to #Value').tag('Date', 'value-to-value');\n\n  //last month\n  ts.match(thisNext + ' #Date').tag('Date', 'thisNext-date');\n  //for four days\n  ts.match(preps + '? #Value #Duration').tag('Date', 'value-duration');\n\n  //by 5 March\n  ts.match('due? (by|before|after|until) #Date').tag('Date', 'by-date');\n  //tomorrow before 3\n  ts.match('#Date (by|before|after|at|@|about) #Cardinal').not('^#Date').tag('Time', 'date-before-Cardinal');\n  //2pm est\n  ts.match('#Time (eastern|pacific|central|mountain)').term(1).tag('Time', 'timezone');\n  ts.match('#Time (est|pst|gmt)').term(1).tag('Time', 'timezone abbr');\n  //saturday am\n  ts.match('#Date (am|pm)').term(1).unTag('Verb').unTag('Copula').tag('Time', 'date-am');\n  //late at night\n  ts.match('at night').tag('Time', 'at-night');\n  ts.match('in the (night|evening|morning|afternoon|day|daytime)').tag('Time', 'in-the-night');\n  ts.match('(early|late) (at|in)? the? (night|evening|morning|afternoon|day|daytime)').tag('Time', 'early-evening');\n  //march 12th 2018\n  ts.match('#Month #Value #Cardinal').tag('Date', 'month-value-cardinal');\n  ts.match('(last|next|this|previous|current|upcoming|coming|the) #Date').tag('Date', 'next-feb');\n  ts.match('#Date #Value').tag('Date', 'date-value');\n  ts.match('#Value #Date').tag('Date', 'value-date');\n  ts.match('#Date #Preposition #Date').tag('Date', 'date-prep-date');\n\n  //two days before\n  ts.match('#Value #Duration #Conjunction').tag('Date', 'val-duration-conjunction');\n\n  //start of june\n  ts.match('the? ' + sections + ' of #Date').tag('Date', 'section-of-date');\n\n  //year tagging\n  var value = ts.match('#Date #Value #Cardinal').lastTerm().values();\n  var num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-value-year');\n  }\n  //scoops up a bunch\n  value = ts.match('#Date+ #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year');\n  }\n  //feb 8 2018\n  value = ts.match('#Month #Value #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year2');\n  }\n  //feb 8 to 10th 2018\n  value = ts.match('#Month #Value to #Value #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'date-year3');\n  }\n  //in 1998\n  value = ts.match('(in|of|by|during|before|starting|ending|for|year) #Cardinal').lastTerm().values();\n  num = value.numbers()[0];\n  if (isYear(num)) {\n    value.tag('Year', 'preposition-year');\n  }\n  //fifth week in 1998\n  ts.match('#Duration in #Date').tag('Date', 'duration-in-date');\n\n  return ts;\n};\n\nmodule.exports = datePass;\n\n},{\"../paths\":145}],156:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/auxillary';\n//\n\nvar auxillary = {\n  'do': true,\n  'don\\'t': true,\n  'does': true,\n  'doesn\\'t': true,\n  'will': true,\n  'wont': true,\n  'won\\'t': true,\n  'have': true,\n  'haven\\'t': true,\n  'had': true,\n  'hadn\\'t': true,\n  'not': true\n};\n\nvar corrections = function corrections(ts) {\n  log.here(path);\n  //set verbs as auxillaries\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (auxillary[t.normal] || auxillary[t.silent_term]) {\n      var next = ts.terms[i + 1];\n      //if next word is a verb\n      if (next && (next.tag.Verb || next.tag.Adverb || next.tag.Negative)) {\n        t.tagAs('Auxillary', 'corrections-auxillary');\n        continue;\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = corrections;\n\n},{\"../paths\":145}],157:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/negation';\n\n// 'not' is sometimes a verb, sometimes an adjective\nvar negation_step = function negation_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.length; i++) {\n    var t = ts.get(i);\n    if (t.normal === 'not' || t.silent_term === 'not') {\n      //find the next verb/adjective\n      for (var o = i + 1; o < ts.length; o++) {\n        if (ts.get(o).tag.Verb) {\n          t.tagAs('VerbPhrase', 'negate-verb');\n          break;\n        }\n        if (ts.get(o).tag.Adjective) {\n          t.tagAs('AdjectivePhrase', 'negate-adj');\n          break;\n        }\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = negation_step;\n\n},{\"../paths\":145}],158:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar phrasals = _dereq_('../paths').tries.utils.phrasals;\nvar toInfinitive = _dereq_('../../result/subset/verbs/methods/toInfinitive/index.js');\nvar path = 'tagger/phrasal';\n\n//words that could be particles\nvar particles = {\n  'aback': true,\n  'along': true,\n  'apart': true,\n  'at': true,\n  'away': true,\n  'back': true,\n  'by': true,\n  'do': true,\n  'down': true,\n  'forth': true,\n  'forward': true,\n  'in': true,\n  'into': true,\n  'it': true,\n  'off': true,\n  'on': true,\n  'out': true,\n  'over': true,\n  'round': true,\n  'through': true,\n  'together': true,\n  'under': true,\n  'up': true,\n  'upon': true,\n  'way': true\n};\n\n//phrasal verbs are compound verbs like 'beef up'\nvar phrasals_step = function phrasals_step(ts) {\n  log.here(path);\n  for (var i = 1; i < ts.length; i++) {\n    var t = ts.get(i);\n    //is it a particle, like 'up'\n    if (particles[t.normal]) {\n      //look backwards\n      var last = ts.get(i - 1);\n      if (last.tag.Verb) {\n        var inf = toInfinitive(last);\n        if (phrasals.has(inf + ' ' + t.normal)) {\n          t.tagAs('Particle', 'phrasalVerb-particle');\n          t.tagAs('PhrasalVerb', 'phrasalVerb-particle');\n          last.tagAs('PhrasalVerb', 'phrasalVerb-particle');\n        }\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = phrasals_step;\n\n},{\"../../result/subset/verbs/methods/toInfinitive/index.js\":126,\"../paths\":145}],159:[function(_dereq_,module,exports){\n'use strict';\n//-types of comma-use-\n// PlaceComma - Hollywood, California\n// List       - cool, fun, and great.\n// ClauseEnd  - if so, we do.\n\n//like Toronto, Canada\n\nvar isPlaceComma = function isPlaceComma(ts, i) {\n  var t = ts.terms[i];\n  var nextTerm = ts.terms[i + 1];\n  //'australia, canada' is a list\n  if (nextTerm && t.tag.Place && !t.tag.Country && nextTerm.tag.Country) {\n    return true;\n  }\n  return false;\n};\n\n//adj, noun, or verb\nvar mainTag = function mainTag(t) {\n  if (t.tag.Adjective) {\n    return 'Adjective';\n  }\n  if (t.tag.Noun) {\n    return 'Noun';\n  }\n  if (t.tag.Verb) {\n    return 'Verb';\n  }\n  return null;\n};\n\nvar tagAsList = function tagAsList(ts, start, end) {\n  for (var i = start; i <= end; i++) {\n    ts.terms[i].tag.List = true;\n  }\n};\n\n//take the first term with a comma, and test to the right.\n//the words with a comma must be the same pos.\nvar isList = function isList(ts, i) {\n  var start = i;\n  var tag = mainTag(ts.terms[i]);\n  //ensure there's a following comma, and its the same pos\n  //then a Conjunction\n  var sinceComma = 0;\n  var count = 0;\n  var hasConjunction = false;\n  for (i = i + 1; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //are we approaching the end\n    if (count > 0 && t.tag.Conjunction) {\n      hasConjunction = true;\n      continue;\n    }\n    //found one,\n    if (t.tag[tag]) {\n      //looks good. keep it going\n      if (t.tag.Comma) {\n        count += 1;\n        sinceComma = 0;\n        continue;\n      }\n      if (count > 0 && hasConjunction) {\n        //is this the end of the list?\n        tagAsList(ts, start, i);\n        return true;\n      }\n    }\n    sinceComma += 1;\n    //have we gone too far without a comma?\n    if (sinceComma > 5) {\n      return false;\n    }\n  }\n  return false;\n};\n\nvar commaStep = function commaStep(ts) {\n  //tag the correct punctuation forms\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    var punct = t.endPunctuation();\n    if (punct === ',') {\n      t.tagAs('Comma', 'comma-step');\n      continue;\n    }\n    if (punct === ';' || punct === ':') {\n      t.tagAs('ClauseEnd', 'clause-punt');\n      continue;\n    }\n    //support elipses\n    if (t.whitespace.after.match(/^\\.\\./)) {\n      t.tagAs('ClauseEnd', 'clause-elipses');\n      continue;\n    }\n    //support ' - ' clause\n    if (ts.terms[i + 1] && ts.terms[i + 1].whitespace.before.match(/ - /)) {\n      t.tagAs('ClauseEnd', 'hypen-clause');\n      continue;\n    }\n  }\n\n  //disambiguate the commas now\n  for (var _i = 0; _i < ts.terms.length; _i++) {\n    var _t = ts.terms[_i];\n    if (_t.tag.Comma) {\n      //if we already got it\n      if (_t.tag.List) {\n        continue;\n      }\n      //like 'Hollywood, California'\n      if (isPlaceComma(ts, _i)) {\n        continue;\n      }\n      //like 'cold, wet hands'\n      if (isList(ts, _i)) {\n        continue;\n      }\n      //otherwise, it's a phrasal comma, like 'you must, if you think so'\n      _t.tag.ClauseEnd = true;\n    }\n  }\n  return ts;\n};\n\nmodule.exports = commaStep;\n\n},{}],160:[function(_dereq_,module,exports){\n'use strict';\n//decide if an apostrophe s is a contraction or not\n// 'spencer's nice' -> 'spencer is nice'\n// 'spencer's house' -> 'spencer's house'\n\n//these are always contractions\n\nvar blacklist = {\n  'it\\'s': true,\n  'that\\'s': true\n};\n\n//a possessive means \"'s\" describes ownership, not a contraction, like 'is'\nvar is_possessive = function is_possessive(terms, x) {\n  var t = terms.get(x);\n  //these are always contractions, not possessive\n  if (blacklist[t.normal]) {\n    return false;\n  }\n  //\"spencers'\" - this is always possessive - eg \"flanders'\"\n  if (t.normal.match(/[a-z]s'$/)) {\n    return true;\n  }\n  //if no apostrophe s, return\n  if (!t.normal.match(/[a-z]'s$/)) {\n    return false;\n  }\n  //some parts-of-speech can't be possessive\n  if (t.tag['Pronoun']) {\n    return false;\n  }\n  var nextWord = terms.get(x + 1);\n  //last word is possessive  - \"better than spencer's\"\n  if (!nextWord) {\n    return true;\n  }\n  //next word is 'house'\n  if (nextWord.tag['Noun']) {\n    return true;\n  }\n  //rocket's red glare\n  if (nextWord.tag['Adjective'] && terms.get(x + 2) && terms.get(x + 2).tag['Noun']) {\n    return true;\n  }\n  //next word is an adjective\n  if (nextWord.tag['Adjective'] || nextWord.tag['Verb'] || nextWord.tag['Adverb']) {\n    return false;\n  }\n  return false;\n};\n\n//tag each term as possessive, if it should\nvar possessiveStep = function possessiveStep(terms) {\n  for (var i = 0; i < terms.length; i++) {\n    if (is_possessive(terms, i)) {\n      var t = terms.get(i);\n      //if it's not already a noun, co-erce it to one\n      if (!t.tag['Noun']) {\n        t.tagAs('Noun', 'possessive_pass');\n      }\n      t.tagAs('Possessive', 'possessive_pass');\n    }\n  }\n  return terms;\n};\nmodule.exports = possessiveStep;\n\n},{}],161:[function(_dereq_,module,exports){\n'use strict';\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/value';\n\nvar value_step = function value_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    if (t.tag.Value) {\n      //ordinal/cardinal\n      if (!t.tag.Ordinal && !t.tag.Cardinal) {\n        if (t.normal.match(/^[0-9]([0-9]+,)*?(\\.[0-9])$/)) {\n          t.tagAs('Cardinal', 'ordinal-regex');\n        } else {\n          t.tagAs('Cardinal', 'cardinal-regex');\n        }\n      }\n      //text/number\n      if (!t.tag.TextValue && !t.tag.NumericValue) {\n        if (t.normal.match(/^[a-z]/)) {\n          t.tagAs('TextValue', 'TextValue-regex');\n        } else {\n          t.tagAs('NumericValue', 'NumericValue-regex');\n        }\n      }\n    }\n  });\n  return ts;\n};\n\nmodule.exports = value_step;\n\n},{\"../paths\":145}],162:[function(_dereq_,module,exports){\n'use strict';\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/acronym_step';\n\nvar acronym_step = function acronym_step(ts) {\n  log.here(path);\n  ts.terms.forEach(function (t) {\n    if (t.isAcronym()) {\n      t.tagAs('Acronym', 'acronym-step');\n    }\n  });\n  return ts;\n};\n\nmodule.exports = acronym_step;\n\n},{\"../paths\":145}],163:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../paths').fns;\nvar emojiReg = _dereq_('./rules/emoji_regex');\nvar emoticon = _dereq_('./rules/emoticon_list');\n//test for forms like ':woman_tone2:‍:ear_of_rice:'\n//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\nvar isCommaEmoji = function isCommaEmoji(t) {\n  if (fns.startsWith(t.text, ':')) {\n    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n    if (!t.text.match(/:.?$/)) {\n      return false;\n    }\n    //ensure no spaces\n    if (t.text.match(' ')) {\n      return false;\n    }\n    //reasonably sized\n    if (t.text.length > 35) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n\n//check against emoticon whitelist\nvar isEmoticon = function isEmoticon(t) {\n  //normalize the 'eyes'\n  var str = t.text.replace(/^[:;]/, ':');\n  str = str.replace(/[:;]$/, ':');\n  return emoticon[str];\n};\n\n//\nvar emojiStep = function emojiStep(ts) {\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    //test for :keyword: emojis\n    if (isCommaEmoji(t)) {\n      t.tagAs('Emoji', 'comma-emoji');\n    }\n    //test for unicode emojis\n    if (t.text.match(emojiReg)) {\n      t.tagAs('Emoji', 'unicode-emoji');\n    }\n    //test for emoticon ':)' emojis\n    if (isEmoticon(t)) {\n      t.tagAs('Emoji', 'emoticon-emoji');\n    }\n  }\n  return ts;\n};\nmodule.exports = emojiStep;\n\n},{\"../paths\":145,\"./rules/emoji_regex\":168,\"./rules/emoticon_list\":169}],164:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/person_step';\n\nvar titles = _dereq_('../paths').data.titles;\ntitles = titles.reduce(function (h, str) {\n  h[str] = true;\n  return h;\n}, {});\n\nvar person_step = function person_step(ts) {\n  log.here(path);\n  var reason = 'person-step';\n  // x Lastname\n  ts.match('#Noun #LastName').firstTerm().canBe('#FirstName').tag('#FirstName', 'noun-lastname');\n\n  // Firstname x (dangerous)\n  var tmp = ts.match('#FirstName #Noun').ifNo('^#Possessive').ifNo('#ClauseEnd .');\n  tmp.lastTerm().canBe('#LastName').tag('#LastName', 'firstname-noun');\n\n  //j.k Rowling\n  ts.match('#Acronym #TitleCase').canBe('#Person').tag('#Person', 'acronym-titlecase');\n  ts.match('#Noun van der? #Noun').canBe('#Person').tag('#Person', 'von der noun');\n  ts.match('#FirstName de #Noun').canBe('#Person').tag('#Person', 'firstname-de-noun');\n  ts.match('(king|queen|prince|saint|lady) of? #Noun').canBe('#Person').tag('#Person', 'king-of-noun');\n  ts.match('#FirstName (bin|al) #Noun').canBe('#Person').tag('#Person', 'firstname-al-noun');\n\n  //ambiguous firstnames\n  var maybe = ['will', 'may', 'april', 'june', 'said', 'rob', 'wade', 'ray', 'rusty', 'drew', 'miles', 'jack', 'chuck', 'randy', 'jan', 'pat', 'cliff', 'bill'];\n  maybe = '(' + maybe.join('|') + ')';\n  ts.match(maybe + ' #LastName').firstTerm().tag('#FirstName', reason);\n\n  //ambiguous lastnames\n  maybe = ['green', 'white', 'brown', 'hall', 'young', 'king', 'hill', 'cook', 'gray', 'price'];\n  maybe = '(' + maybe.join('|') + ')';\n  ts.match('#FirstName ' + maybe).tag('#Person', reason);\n\n  //people chunks\n  //John L. Foo\n  ts.match('#FirstName #Acronym #TitleCase').tag('Person', 'firstname-acronym-titlecase');\n  //Andrew Lloyd Webber\n  ts.match('#FirstName #FirstName #TitleCase').tag('Person', 'firstname-firstname-titlecase');\n  //Mr Foo\n  ts.match('#Honorific #FirstName? #TitleCase').tag('Person', 'Honorific-TitleCase');\n  //mr X\n  ts.match('#Honorific #Acronym').tag('Person', 'Honorific-TitleCase');\n  //John Foo\n  ts.match('#FirstName #TitleCase').match('#FirstName #Noun').tag('Person', 'firstname-titlecase');\n  //ludwig van beethovan\n  ts.match('#TitleCase (van|al|bin) #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n  ts.match('#TitleCase (de|du) la? #TitleCase').tag('Person', 'correction-titlecase-van-titlecase');\n  //peter the great\n  ts.match('#FirstName the #Adjective').tag('Person', 'correction-determiner5');\n  //Morgan Shlkjsfne\n  ts.match('#Person #TitleCase').match('#TitleCase #Noun').tag('Person', 'correction-person-titlecase');\n\n  //last names\n  // let reason = 'person-correction';\n  //Joe K. Sombrero\n  ts.match('#FirstName #Acronym #Noun').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //Jani K. Smith\n  ts.match('#TitleCase #Acronym? #LastName').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //john bodego's\n  ts.match('#FirstName (#Singular|#Possessive)').ifNo('#Date').tag('#Person', reason).lastTerm().tag('#LastName', reason);\n  //pope francis\n  ts.match('(lady|queen|sister) #TitleCase').ifNo('#Date').tag('#FemaleName', reason);\n  ts.match('(king|pope|father) #TitleCase').ifNo('#Date').tag('#MaleName', 'correction-poe');\n\n  //peter II\n  ts.match('#Person #Person the? #RomanNumeral').tag('Person', 'correction-roman-numeral');\n\n  //'Professor Fink', 'General McCarthy'\n  for (var i = 0; i < ts.terms.length - 1; i++) {\n    var t = ts.terms[i];\n    if (titles[t.normal]) {\n      if (ts.terms[i + 1] && ts.terms[i + 1].tag.Person) {\n        t.tagAs('Person', 'title-person');\n      }\n    }\n  }\n\n  //remove single 'mr'\n  ts.match('#Person+').match('^#Honorific$').unTag('Person', 'single-honorific');\n  return ts;\n};\n\nmodule.exports = person_step;\n\n},{\"../paths\":145}],165:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/person_step';\n\nvar tagSlice = function tagSlice(ts, start, end) {\n  ts.terms.slice(start, end + 1).forEach(function (t) {\n    t.tagAs('Quotation', 'quotation_step');\n  });\n};\n\n//tag a inline quotation as such\nvar quotation_step = function quotation_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.text.match(/^[\"'\\u201B\\u201C\\u2033\\u201F\\u2018]/)) {\n      //look for the ending\n      for (var o = 0; o < ts.terms.length; o++) {\n        //max-length- don't go-on forever\n        if (!ts.terms[i + o] || o > 8) {\n          break;\n        }\n        if (ts.terms[i + o].text.match(/.[\"'\\u201D\\u2036\\u2019]([;:,.])?$/)) {\n          tagSlice(ts, i, o + i);\n          i += o;\n          break;\n        }\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = quotation_step;\n\n},{\"../paths\":145}],166:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar path = 'tagger/organization_step';\n\n//orgwords like 'bank' in 'Foo Bank'\nvar orgWords = _dereq_('../paths').tries.utils.orgWords;\n\n//could this word be an organization\nvar maybeOrg = function maybeOrg(t) {\n  //must be a noun\n  if (!t.tag.Noun) {\n    return false;\n  }\n  //can't be these things\n  if (t.tag.Pronoun || t.tag.Comma || t.tag.Possessive) {\n    return false;\n  }\n  //must be one of these\n  if (t.tag.TitleCase || t.tag.Organization || t.tag.Acronym) {\n    return true;\n  }\n  return false;\n};\n\nvar organization_step = function organization_step(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (orgWords.has(t.normal)) {\n      //eg. Toronto University\n      var lastTerm = ts.terms[i - 1];\n      if (lastTerm && maybeOrg(lastTerm)) {\n        lastTerm.tagAs('Organization', 'org-word-1');\n        t.tagAs('Organization', 'org-word-2');\n        continue;\n      }\n      //eg. University of Toronto\n      var nextTerm = ts.terms[i + 1];\n      if (nextTerm && nextTerm.normal === 'of') {\n        if (ts.terms[i + 2] && maybeOrg(ts.terms[i + 2])) {\n          t.tagAs('Organization', 'org-word-1');\n          nextTerm.tagAs('Organization', 'org-word-2');\n          ts.terms[i + 2].tagAs('Organization', 'org-word-3');\n          continue;\n        }\n      }\n    }\n  }\n  return ts;\n};\nmodule.exports = organization_step;\n\n},{\"../paths\":145}],167:[function(_dereq_,module,exports){\n'use strict';\n\nvar log = _dereq_('../paths').log;\nvar isPlural = _dereq_('../../result/subset/nouns/isPlural');\nvar path = 'tagger/plural';\n\nvar pluralStep = function pluralStep(ts) {\n  log.here(path);\n  for (var i = 0; i < ts.terms.length; i++) {\n    var t = ts.terms[i];\n    if (t.tag.Noun) {\n      //skip existing fast\n      if (t.tag.Singular || t.tag.Plural) {\n        continue;\n      }\n      //check if it's plural\n      var plural = isPlural(t); //can be null if unknown\n      if (plural) {\n        t.tagAs('Plural', 'pluralStep');\n      } else if (plural === false) {\n        // console.log(t.normal, plural);\n        t.tagAs('Singular', 'pluralStep');\n      }\n    }\n  }\n  return ts;\n};\n\nmodule.exports = pluralStep;\n\n},{\"../../result/subset/nouns/isPlural\":70,\"../paths\":145}],168:[function(_dereq_,module,exports){\n\"use strict\";\n\n//yep,\n//https://github.com/mathiasbynens/emoji-regex/blob/master/index.js\nmodule.exports = /(?:0\\u20E3\\n1\\u20E3|2\\u20E3|3\\u20E3|4\\u20E3|5\\u20E3|6\\u20E3|7\\u20E3|8\\u20E3|9\\u20E3|#\\u20E3|\\*\\u20E3|\\uD83C(?:\\uDDE6\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFD|\\uDDFF)|\\uDDE7\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDE8\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDE9\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDFF)|\\uDDEA\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDED|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA)|\\uDDEB\\uD83C(?:\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF2|\\uDDF4|\\uDDF7)|\\uDDEC\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFC|\\uDDFE)|\\uDDED\\uD83C(?:\\uDDF0|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF9|\\uDDFA)|\\uDDEE\\uD83C(?:\\uDDE8|\\uDDE9|\\uDDEA|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9)|\\uDDEF\\uD83C(?:\\uDDEA|\\uDDF2|\\uDDF4|\\uDDF5)|\\uDDF0\\uD83C(?:\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDF2|\\uDDF3|\\uDDF5|\\uDDF7|\\uDDFC|\\uDDFE|\\uDDFF)|\\uDDF1\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDEE|\\uDDF0|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFE)|\\uDDF2\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF5|\\uDDF6|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFA|\\uDDFB|\\uDDFC|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF3\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDEE|\\uDDF1|\\uDDF4|\\uDDF5|\\uDDF7|\\uDDFA|\\uDDFF)|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C(?:\\uDDE6|\\uDDEA|\\uDDEB|\\uDDEC|\\uDDED|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFC|\\uDDFE)|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C(?:\\uDDEA|\\uDDF4|\\uDDF8|\\uDDFA|\\uDDFC)|\\uDDF8\\uD83C(?:\\uDDE6|\\uDDE7|\\uDDE8|\\uDDE9|\\uDDEA|\\uDDEC|\\uDDED|\\uDDEE|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF8|\\uDDF9|\\uDDFB|\\uDDFD|\\uDDFE|\\uDDFF)|\\uDDF9\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDE9|\\uDDEB|\\uDDEC|\\uDDED|\\uDDEF|\\uDDF0|\\uDDF1|\\uDDF2|\\uDDF3|\\uDDF4|\\uDDF7|\\uDDF9|\\uDDFB|\\uDDFC|\\uDDFF)|\\uDDFA\\uD83C(?:\\uDDE6|\\uDDEC|\\uDDF2|\\uDDF8|\\uDDFE|\\uDDFF)|\\uDDFB\\uD83C(?:\\uDDE6|\\uDDE8|\\uDDEA|\\uDDEC|\\uDDEE|\\uDDF3|\\uDDFA)|\\uDDFC\\uD83C(?:\\uDDEB|\\uDDF8)|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C(?:\\uDDEA|\\uDDF9)|\\uDDFF\\uD83C(?:\\uDDE6|\\uDDF2|\\uDDFC)))|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]/g;\n\n},{}],169:[function(_dereq_,module,exports){\n'use strict';\n\n//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nmodule.exports = {\n  ':(': true,\n  ':)': true,\n  ':P': true,\n  ':p': true,\n  ':O': true,\n  ':3': true,\n  ':|': true,\n  ':/': true,\n  ':\\\\': true,\n  ':$': true,\n  ':*': true,\n  ':@': true,\n  ':-(': true,\n  ':-)': true,\n  ':-P': true,\n  ':-p': true,\n  ':-O': true,\n  ':-3': true,\n  ':-|': true,\n  ':-/': true,\n  ':-\\\\': true,\n  ':-$': true,\n  ':-*': true,\n  ':-@': true,\n  ':^(': true,\n  ':^)': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n  ':^|': true,\n  ':^/': true,\n  ':^\\\\': true,\n  ':^$': true,\n  ':^*': true,\n  ':^@': true,\n  '):': true,\n  '(:': true,\n  '$:': true,\n  '*:': true,\n  ')-:': true,\n  '(-:': true,\n  '$-:': true,\n  '*-:': true,\n  ')^:': true,\n  '(^:': true,\n  '$^:': true,\n  '*^:': true,\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true\n};\n\n},{}],170:[function(_dereq_,module,exports){\n'use strict';\n//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n\n//after this word, here's what happens usually\n\nvar afterThisWord = {\n  i: 'Verb', //44% //i walk..\n  first: 'Noun', //50% //first principles..\n  it: 'Verb', //33%\n  there: 'Verb', //35%\n  // to: 'Verb', //32%\n  not: 'Verb', //33%\n  because: 'Noun', //31%\n  'if': 'Noun', //32%\n  but: 'Noun', //26%\n  who: 'Verb', //40%\n  'this': 'Noun', //37%\n  his: 'Noun', //48%\n  when: 'Noun', //33%\n  you: 'Verb', //35%\n  very: 'Adjective', // 39%\n  old: 'Noun', //51%\n  never: 'Verb', //42%\n  before: 'Noun' };\n\n//in advance of this word, this is what happens usually\nvar beforeThisWord = {\n  there: 'Verb', //23% // be there\n  me: 'Verb', //31% //see me\n  man: 'Adjective', // 80% //quiet man\n  only: 'Verb', //27% //sees only\n  him: 'Verb', //32% //show him\n  were: 'Noun', //48% //we were\n  what: 'Verb', //25% //know what\n  took: 'Noun', //38% //he took\n  himself: 'Verb', //31% //see himself\n  went: 'Noun', //43% //he went\n  who: 'Noun', //47% //person who\n  jr: 'Person'\n};\n\n//following this POS, this is likely\nvar afterThisPos = {\n  Adjective: 'Noun', //36% //blue dress\n  Possessive: 'Noun', //41% //his song\n  Determiner: 'Noun', //47%\n  Adverb: 'Verb', //20%\n  // Person: 'Verb', //40%\n  Pronoun: 'Verb', //40%\n  Value: 'Noun', //47%\n  Ordinal: 'Noun', //53%\n  Modal: 'Verb', //35%\n  Superlative: 'Noun', //43%\n  Demonym: 'Noun', //38%\n  Organization: 'Verb', //33%\n  Honorific: 'Person' };\n\n//in advance of this POS, this is likely\nvar beforeThisPos = {\n  Copula: 'Noun', //44% //spencer is\n  PastTense: 'Noun', //33% //spencer walked\n  Conjunction: 'Noun', //36%\n  Modal: 'Noun', //38%\n  PluperfectTense: 'Noun', //40%\n  PerfectTense: 'Verb' };\nmodule.exports = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n\n  beforeThisPos: beforeThisPos,\n  afterThisPos: afterThisPos\n};\n\n},{}],171:[function(_dereq_,module,exports){\n'use strict';\n\n//these are regexes applied to t.text, instead of t.normal\nmodule.exports = [\n//#funtime\n['^#[a-z]+', 'HashTag'],\n//chillin'\n['[a-z]+n\\'', 'Gerund'],\n//spencers'\n['[a-z]+s\\'', 'Possessive'],\n//589-3809\n['[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n//632-589-3809\n['\\\\(?[0-9]{3}\\\\)?[ -]?[0-9]{3}-[0-9]{4}', 'PhoneNumber'],\n\n//dates/times\n['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])', 'Time'], //4:32:32\n['[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)', 'Time'], //4pm\n['[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?', 'Time'], //4:00pm\n['[PMCE]ST', 'Time'], //PST, time zone abbrevs\n['utc ?[\\+\\-]?[0-9]\\+?', 'Time'], //UTC 8+\n['[a-z0-9]*? o\\'?clock', 'Time'], //3 oclock\n['[0-9]{1,4}[/\\\\-\\\\.][0-9]{1,2}[/\\\\-\\\\.][0-9]{1,4}', 'Date'], //03/02/89, 03-02-89\n\n//money\n['^[\\-\\+]?[$€¥£][0-9]+(\\.[0-9]{1,2})?$', 'Money'], //like $5.30\n['^[\\-\\+]?[$€¥£][0-9]{1,3}(,[0-9]{3})+(\\.[0-9]{1,2})?$', 'Money'], //like $5,231.30\n\n//values\n['[0-9]{1,4}(st|nd|rd|th)?-[0-9]{1,4}(st|nd|rd|th)?', 'NumberRange'], //5-7\n['^[\\-\\+]?[0-9]{1,3}(,[0-9]{3})+(\\.[0-9]+)?$', 'NiceNumber'], //like 5,999.0\n['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], //like +5.0\n\n['[0-9]{1,4}/[0-9]{1,4}', 'Fraction'], //3/2ths\n['[0-9]{1,2}-[0-9]{1,2}', 'Value'], //7-8\n\n//mc'adams\n['ma?c\\'.*', 'LastName'],\n//o'douggan\n['o\\'[drlkn].*', 'LastName']].map(function (a) {\n  return {\n    reg: new RegExp('^' + a[0] + '$', 'i'),\n    tag: a[1],\n    str: a[0]\n  };\n});\n\n},{}],172:[function(_dereq_,module,exports){\n'use strict';\n//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\n\nvar Adjective = 'Adjective',\n    Infinitive = 'Infinitive',\n    PresentTense = 'PresentTense',\n    Singular = 'Singular',\n    PastTense = 'PastTense',\n    Adverb = 'Adverb',\n    Expression = 'Expression',\n    Plural = 'Plural',\n    Actor = 'Actor',\n    Verb = 'Verb',\n    Noun = 'Noun',\n    LastName = 'LastName';\n//the order here matters.\nmodule.exports = [['^[0-9]+ ?(am|pm)$', 'Date'], ['[0-9](st|nd|rd|r?th)$', 'Ordinal'], //like 5th\n['([0-9])([a-z]{1,2})$', 'Cardinal'], //like 5kg\n['^[0-9,\\.]+$', 'Cardinal'], //like 5\n['^[a-z]et$', Verb], ['cede$', Infinitive], ['.[cts]hy$', Adjective], ['.[st]ty$', Adjective], ['.[lnr]ize$', Infinitive], ['.[gk]y$', Adjective], ['.fies$', PresentTense], ['ities$', Plural], ['.some$', Adjective], ['.[nrtumcd]al$', Adjective], ['.que$', Adjective], ['.[tnl]ary$', Adjective], ['.[di]est$', 'Superlative'], ['^(un|de|re)\\\\-[a-z]..', Verb], ['.lar$', Adjective], ['[bszmp]{2}y', Adjective], ['.zes$', PresentTense], ['.[icldtgrv]ent$', Adjective], ['.[rln]ates$', PresentTense], ['.[oe]ry$', Singular], ['[rdntkbhs]ly$', Adverb], ['.[lsrnpb]ian$', Adjective], ['.[^aeiou]ial$', Adjective], ['.[^aeiou]eal$', Adjective], ['.[vrl]id$', Adjective], ['.[ilk]er$', 'Comparative'], ['.ike$', Adjective], ['.ends?$', Verb], ['.wards$', Adverb], ['.rmy$', Adjective], ['.rol$', Singular], ['.tors$', Noun], ['.azy$', Adjective], ['.where$', Adverb], ['.ify$', Infinitive], ['.bound$', Adjective], ['.[^z]ens$', Verb], ['.oid$', Adjective], ['.vice$', Singular], ['.rough$', Adjective], ['.mum$', Adjective], ['.teen(th)?$', 'Value'], ['.oses$', PresentTense], ['.ishes$', PresentTense], ['.ects$', PresentTense], ['.tieth$', 'Ordinal'], ['.ices$', Plural], ['.tage$', Infinitive], ['.ions$', Plural], ['.tion$', Singular], ['.ean$', Adjective], ['.[ia]sed$', Adjective], ['.urned', PastTense], ['.tized$', PastTense], ['.[aeiou][td]ed', PastTense], ['.llen$', Adjective], ['.fore$', Adverb], ['.ances$', Plural], ['.gate$', Infinitive], ['.nes$', PresentTense], ['.less$', Adverb], ['.ried$', Adjective], ['.gone$', Adjective], ['.made$', Adjective], ['.ing$', 'Gerund'], //likely to be converted to adjective after lexicon pass\n['.tures$', Plural], ['.ous$', Adjective], ['.ports$', Plural], ['. so$', Adverb], ['.ints$', Plural], ['.[gt]led$', Adjective], ['.lked$', PastTense], ['.fully$', Adverb], ['.*ould$', 'Modal'], ['^[\\-\\+]?[0-9]+(\\.[0-9]+)?$', 'NumericValue'], ['[a-z]*\\\\-[a-z]*\\\\-', Adjective], ['[a-z]\\'s$', Noun], ['.\\'n$', Verb], ['.\\'re$', 'Copula'], ['.\\'ll$', 'Modal'], ['.\\'t$', Verb], ['.tches$', PresentTense], ['^https?\\:?\\/\\/[a-z0-9]', 'Url'], //the colon is removed in normalisation\n['^www\\.[a-z0-9]', 'Url'], ['.ize$', Infinitive], ['.[^aeiou]ise$', Infinitive], ['.[aeiou]te$', Infinitive], ['.ea$', Singular], ['[aeiou][pns]er$', Singular], ['.ia$', Noun], ['.sis$', Singular], ['.[aeiou]na$', Noun], ['.[^aeiou]ity$', Singular], ['.[^aeiou]ium$', Singular], ['.[^aeiou][ei]al$', Adjective], ['.ffy$', Adjective], ['.[^aeiou]ic$', Adjective], ['.(gg|bb|zz)ly$', Adjective], ['.[aeiou]my$', Adjective], ['.[^aeiou][ai]ble$', Adjective], ['.[^aeiou]eable$', Adjective], ['.[^aeiou]ful$', Adjective], ['.[^aeiouf]ish$', Adjective], ['.[^aeiou]ica$', Singular], ['[aeiou][^aeiou]is$', Singular], ['[^aeiou]ard$', Singular], ['[^aeiou]ism$', Singular], ['.[^aeiou]ity$', Singular], ['.[^aeiou]ium$', Singular], ['.[lstrn]us$', Singular], ['..ic$', Adjective], ['[aeiou][^aeiou]id$', Adjective], ['.[^aeiou]ive$', Adjective], ['[ea]{2}zy$', Adjective], ['[^aeiou]ician$', Actor], ['.keeper$', Actor], ['.logist$', Actor], ['..ier$', Actor], ['.ettes$', Plural], ['.ette$', Singular], ['.[^aeiou][ao]pher$', Actor], ['.tive$', Actor], ['[aeiou].*ist$', Adjective], ['(over|under)[a-z]{2,}$', Adjective], ['[^i]fer$', Infinitive], ['[aeiou]c?ked$', PastTense], //hooked\n['(eastern|central|mountain|pacific)( standard)? time', 'Time'], //PST, eastern time.  Todo:(only American right now)\n//slang things\n['^um+$', Expression], //ummmm\n['^([hyj]a)+$', Expression], //hahah\n['^(k)+$', Expression], //kkkk\n['^(yo)+$', Expression], //yoyo\n['^yes+$', Expression], //yessss\n['^no+$', Expression], //noooo\n['^lol[sz]$', Expression], //lol\n['^woo+[pt]?$', Expression], //woo\n['^ug?h+$', Expression], //uhh\n['^uh[ -]?oh$', Expression], //uhoh\n\n//lastname patterns\n//https://en.wikipedia.org/wiki/List_of_family_name_affixes\n//macdonell\n['^ma?cd[aeiou]', LastName],\n//icelandic/swedish\n['.sdottir$', LastName], //female\n['.sson$', LastName], //male\n//polish\n['.[oau][wvl]ski$', LastName], //male\n['.[oau][wvl]ska$', LastName], //female\n['.czyk$', LastName], //male\n['.marek$', LastName], //male\n//east-europe Hasanov, etc\n['.[^aeiou][ai][kln]ov$', LastName], //\n['..chuk$', LastName], //\n['..enko$', LastName], //\n['.v[iy]ch$', LastName], //\n//greek\n['.opoulos$', LastName], //\n['.akis$', LastName], //\n//lithuania\n['.auskas$', LastName],\n//norway\n['.nss?en$', LastName]].map(function (a) {\n  return {\n    reg: new RegExp(a[0]),\n    tag: a[1],\n    str: a[0]\n  };\n});\n\n},{}],173:[function(_dereq_,module,exports){\n'use strict';\n\n//used for pretty-printing on the server-side\nvar colors = {\n  blue: ['Noun', 'Plural', 'Singular', 'Pronoun', 'Possessive', 'Place', 'Person', 'City'],\n  red: ['Value', 'Ordinal', 'Cardinal', 'TextValue', 'NumericValue'],\n  green: ['Verb', 'Auxillary', 'Negative', 'PastTense', 'PresentTense', 'FutureTense', 'Modal', 'Infinitive', 'Gerund', 'Copula', 'Participle'],\n  cyan: ['Preposition', 'Conjunction', 'Determiner'],\n  black: ['Adjective', 'Adverb']\n};\nmodule.exports = Object.keys(colors).reduce(function (h, c) {\n  colors[c].forEach(function (str) {\n    h[str] = c;\n  });\n  return h;\n}, {});\n\n},{}],174:[function(_dereq_,module,exports){\n'use strict';\n\n//list of inconsistent parts-of-speech\n\nvar conflicts = [\n//top-level pos are all inconsistent\n['Noun', 'Verb', 'Adjective', 'Adverb', 'Determiner', 'Conjunction', 'Preposition', 'QuestionWord', 'Expression', 'Url', 'PhoneNumber', 'Email', 'Emoji'],\n//exlusive-nouns\n['Person', 'Organization', 'Value', 'Place', 'Actor', 'Demonym', 'Pronoun'],\n//things that can't be plural\n['Plural', 'Singular'],\n// ['Plural', 'Pronoun'],\n['Plural', 'Person'], ['Plural', 'Organization'], ['Plural', 'Currency'], ['Plural', 'Ordinal'],\n//exlusive-people\n['MaleName', 'FemaleName'], ['FirstName', 'LastName', 'Honorific'],\n//adjectives\n['Comparative', 'Superlative'],\n//values\n['Value', 'Verb', 'Adjective'],\n// ['Value', 'Year'],\n['Ordinal', 'Cardinal'], ['TextValue', 'NumericValue'], ['NiceNumber', 'TextValue'], ['Ordinal', 'Currency'], //$5.50th\n//verbs\n['PastTense', 'PerfectTense', 'Pluperfect', 'FuturePerfect', 'Copula', 'Modal', 'Participle', 'Infinitive', 'Gerund'],\n//date\n['Month', 'WeekDay', 'Year', 'Duration'], ['Particle', 'Conjunction', 'Adverb', 'Preposition'], ['Date', 'Verb', 'Adjective', 'Person'],\n//phrases\n['NounPhrase', 'VerbPhrase', 'AdjectivePhrase', 'ConditionalPhrase'],\n//a/an -> 1\n['Value', 'Determiner'], ['Verb', 'NounPhrase'], ['Noun', 'VerbPhrase'],\n//roman numerals\n['RomanNumeral', 'Fraction', 'NiceNumber'], ['RomanNumeral', 'Money'],\n//cases\n['UpperCase', 'TitleCase', 'CamelCase']];\n\nvar find = function find(tag) {\n  var arr = [];\n  for (var i = 0; i < conflicts.length; i++) {\n    if (conflicts[i].indexOf(tag) !== -1) {\n      arr = arr.concat(conflicts[i]);\n    }\n  }\n  return arr.filter(function (t) {\n    return t !== tag;\n  });\n};\n\nmodule.exports = find;\n\n// console.log(find('Person'));\n\n},{}],175:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar conflicts = _dereq_('./conflicts');\nvar tree = _dereq_('./tree');\n\nvar extra = {\n  Month: 'Singular',\n  // Year: 'Noun',\n  Time: 'Noun',\n  WeekDay: 'Noun',\n  Duration: 'Noun',\n  NumberRange: 'Contraction'\n};\n\nvar all_children = function all_children(obj) {\n  if (obj === true) {\n    return [];\n  }\n  var children = Object.keys(obj || {});\n  //two levels deep\n  children.forEach(function (str) {\n    if (_typeof(obj[str]) === 'object') {\n      var kids = Object.keys(obj[str]);\n      kids.forEach(function (gc) {\n        if (_typeof(obj[str][gc]) === 'object') {\n          var grandkids = Object.keys(obj[str][gc]);\n          children = children.concat(grandkids);\n        }\n      });\n      children = children.concat(kids);\n    }\n  });\n  return children;\n};\n\nvar build = function build() {\n  //make tags\n  var all = {};\n  //recursively add them\n  var add_tags = function add_tags(obj, is) {\n    Object.keys(obj).forEach(function (k) {\n      is = is.slice(0); //clone it\n      all[k] = {\n        parents: is,\n        children: all_children(obj[k])\n      };\n      if (obj[k] !== true) {\n        add_tags(obj[k], is.concat([k])); //recursive\n      }\n    });\n  };\n  add_tags(tree, []);\n\n  //add extras\n  Object.keys(all).forEach(function (tag) {\n    if (extra[tag]) {\n      all[tag].parents.push(extra[tag]);\n    }\n  });\n\n  //add conflicts\n  Object.keys(all).forEach(function (tag) {\n    all[tag].not = conflicts(tag);\n    var parents = all[tag].parents;\n    for (var i = 0; i < parents.length; i++) {\n      var alsoNot = conflicts(parents[i]);\n      all[tag].not = all[tag].not.concat(alsoNot);\n    }\n  });\n\n  return all;\n};\n\nmodule.exports = build();\n\n},{\"./conflicts\":174,\"./tree\":176}],176:[function(_dereq_,module,exports){\n\"use strict\";\n\n//the POS tags we use, according to their dependencies\n//(dont make it too deep, cause fns aren't properly clever-enough)\nmodule.exports = {\n  Noun: {\n    Singular: {\n      Person: {\n        FirstName: {\n          MaleName: true,\n          FemaleName: true\n        },\n        LastName: true,\n        Honorific: true\n      },\n      Place: {\n        Country: true,\n        City: true,\n        Address: true\n      },\n      Organization: {\n        SportsTeam: true,\n        Company: true,\n        School: true\n      }\n    },\n    Plural: true,\n    Pronoun: true,\n    Actor: true,\n    Unit: true,\n    Demonym: true,\n    Possessive: true\n  },\n  Date: { //not a noun, but usually is\n    Month: true,\n    WeekDay: true,\n    RelativeDay: true,\n    Year: true,\n    Duration: true,\n    Time: true,\n    Holiday: true\n  },\n  Verb: {\n    PresentTense: {\n      Infinitive: true,\n      Gerund: true\n    },\n    PastTense: true,\n    PerfectTense: true,\n    FuturePerfect: true,\n    Pluperfect: true,\n    Copula: true,\n    Modal: true,\n    Participle: true,\n    Particle: true,\n    PhrasalVerb: true\n  },\n  Adjective: {\n    Comparative: true,\n    Superlative: true\n  },\n  Adverb: true,\n  Value: {\n    Ordinal: true,\n    Cardinal: {\n      RomanNumeral: true\n    },\n    Fraction: true,\n    TextValue: true,\n    NumericValue: true,\n    NiceNumber: true,\n    Money: true,\n    NumberRange: true\n  },\n  Currency: true,\n  //glue\n  Determiner: true,\n  Conjunction: true,\n  Preposition: true,\n  QuestionWord: true,\n  Expression: true,\n  Url: true,\n  PhoneNumber: true,\n  HashTag: true,\n  Emoji: true,\n  Email: true,\n\n  //non-exclusive\n  Condition: true,\n  Auxillary: true,\n  Negative: true,\n  Contraction: true,\n\n  TitleCase: true,\n  CamelCase: true,\n  UpperCase: true,\n  Hyphenated: true,\n  Acronym: true,\n  ClauseEnd: true,\n  //phrases\n  Quotation: true\n};\n\n},{}],177:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar fns = _dereq_('./paths').fns;\nvar build_whitespace = _dereq_('./whitespace');\nvar makeUID = _dereq_('./makeUID');\n\nvar Term = function () {\n  function Term(str) {\n    _classCallCheck(this, Term);\n\n    this._text = fns.ensureString(str);\n    this.tag = {};\n    //seperate whitespace from the text\n    var parsed = build_whitespace(this._text);\n    this.whitespace = parsed.whitespace;\n    this._text = parsed.text;\n    // console.log(this.whitespace, this._text);\n    this.parent = null;\n    this.silent_term = '';\n    //has this term been modified\n    this.dirty = false;\n    this.normalize();\n    //make a unique id for this term\n    this.uid = makeUID(this.normal);\n  }\n\n  _createClass(Term, [{\n    key: 'index',\n\n    /** where in the sentence is it? zero-based. */\n    value: function index() {\n      var ts = this.parentTerms;\n      if (!ts) {\n        return null;\n      }\n      return ts.terms.indexOf(this);\n    }\n    /** make a copy with no references to the original  */\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var term = new Term(this._text, null);\n      term.tag = fns.copy(this.tag);\n      term.whitespace = fns.copy(this.whitespace);\n      term.silent_term = this.silent_term;\n      return term;\n    }\n  }, {\n    key: 'text',\n    set: function set(str) {\n      str = str || '';\n      this._text = str.trim();\n      this.dirty = true;\n      if (this._text !== str) {\n        this.whitespace = build_whitespace(str);\n      }\n      this.normalize();\n    },\n    get: function get() {\n      return this._text;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Term';\n    }\n  }]);\n\n  return Term;\n}();\n\nTerm = _dereq_('./methods/normalize')(Term);\nTerm = _dereq_('./methods/isA')(Term);\nTerm = _dereq_('./methods/out')(Term);\nTerm = _dereq_('./methods/tag')(Term);\nTerm = _dereq_('./methods/case')(Term);\nTerm = _dereq_('./methods/punctuation')(Term);\n\nmodule.exports = Term;\n\n},{\"./makeUID\":178,\"./methods/case\":179,\"./methods/isA\":180,\"./methods/normalize\":181,\"./methods/out\":185,\"./methods/punctuation\":187,\"./methods/tag\":188,\"./paths\":192,\"./whitespace\":193}],178:[function(_dereq_,module,exports){\n'use strict';\n//this is a not-well-thought-out way to reduce our dependence on `object===object` reference stuff\n//generates a unique id for this term\n//may need to change when the term really-transforms? not sure.\n\nvar uid = function uid(str) {\n  var nums = '';\n  for (var i = 0; i < 5; i++) {\n    nums += parseInt(Math.random() * 9, 10);\n  }\n  return str + '-' + nums;\n};\nmodule.exports = uid;\n\n},{}],179:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    toUpperCase: function toUpperCase() {\n      this.text = this.text.toUpperCase();\n      this.tagAs('#UpperCase', 'toUpperCase');\n      return this;\n    },\n    toLowerCase: function toLowerCase() {\n      this.text = this.text.toLowerCase();\n      this.unTag('#TitleCase');\n      this.unTag('#UpperCase');\n      return this;\n    },\n    toTitleCase: function toTitleCase() {\n      this.text = this.text.replace(/^[a-z]/, function (x) {\n        return x.toUpperCase();\n      });\n      this.tagAs('#TitleCase', 'toTitleCase');\n      return this;\n    },\n    //(camelCase() is handled in `./terms` )\n\n    /** is it titlecased because it deserves it? Like a person's name? */\n    needsTitleCase: function needsTitleCase() {\n      var titleCases = ['Person', 'Place', 'Organization', 'Acronym', 'UpperCase', 'Currency', 'RomanNumeral', 'Month', 'WeekDay', 'Holiday', 'Demonym'];\n      for (var i = 0; i < titleCases.length; i++) {\n        if (this.tag[titleCases[i]]) {\n          return true;\n        }\n      }\n      //specific words that keep their titlecase\n      //https://en.wikipedia.org/wiki/Capitonym\n      var irregulars = ['i', 'god', 'allah'];\n      for (var _i = 0; _i < irregulars.length; _i++) {\n        if (this.normal === irregulars[_i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],180:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** does it appear to be an acronym, like FBI or M.L.B. */\n    isAcronym: function isAcronym() {\n      //like N.D.A\n      if (this.text.match(/([A-Z]\\.)+[A-Z]?$/)) {\n        return true;\n      }\n      //like 'F.'\n      if (this.text.match(/^[A-Z]\\.$/)) {\n        return true;\n      }\n      //like NDA\n      if (this.text.match(/[A-Z]{3}$/)) {\n        return true;\n      }\n      return false;\n    },\n\n    /** check if it is word-like in english */\n    isWord: function isWord() {\n      var t = this;\n      //assume a contraction produces a word-word\n      if (t.silent_term) {\n        return true;\n      }\n      //no letters or numbers\n      if (!t.text.match(/[a-z|0-9]/i)) {\n        return false;\n      }\n      //has letters, but with no vowels\n      if (t.normal.match(/[a-z]/) && t.normal.length > 1 && !t.normal.match(/[aeiouy]/i)) {\n        return false;\n      }\n      //has numbers but not a 'value'\n      if (t.normal.match(/[0-9]/)) {\n        //s4e\n        if (t.normal.match(/[a-z][0-9][a-z]/)) {\n          return false;\n        }\n        //ensure it looks like a 'value' eg '-$4,231.00'\n        if (!t.normal.match(/^([$-])*?([0-9,\\.])*?([s\\$%])*?$/)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],181:[function(_dereq_,module,exports){\n'use strict';\n\nvar addNormal = _dereq_('./normalize').addNormal;\nvar addRoot = _dereq_('./root');\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    normalize: function normalize() {\n      addNormal(this);\n      addRoot(this);\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"./normalize\":182,\"./root\":183}],182:[function(_dereq_,module,exports){\n'use strict';\n\nvar killUnicode = _dereq_('./unicode');\n\n//some basic operations on a string to reduce noise\nexports.normalize = function (str) {\n  str = str || '';\n  str = str.toLowerCase();\n  str = str.trim();\n  //(very) rough asci transliteration -  bjŏrk -> bjork\n  str = killUnicode(str);\n  //hashtags, atmentions\n  str = str.replace(/^[#@]/, '');\n  // coerce single curly quotes\n  str = str.replace(/[\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035]+/g, '\\'');\n  // coerce double curly quotes\n  str = str.replace(/[\\u201C\\u201D\\u201E\\u201F\\u2033\\u2036\"]+/g, '');\n  //coerce unicode elipses\n  str = str.replace(/\\u2026/g, '...');\n\n  //strip leading & trailing grammatical punctuation\n  if (!str.match(/^[:;]/)) {\n    str = str.replace(/\\.{3,}$/g, '');\n    str = str.replace(/['\",\\.!:;\\?\\)]$/g, '');\n    str = str.replace(/^['\"\\(]/g, '');\n  }\n  return str;\n};\n\nexports.addNormal = function (term) {\n  var str = term._text || '';\n  str = exports.normalize(str);\n  //compact acronyms\n  if (term.isAcronym()) {\n    str = str.replace(/\\./g, '');\n  }\n  //nice-numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2');\n  term.normal = str;\n};\n\n// console.log(normalize('Dr. V Cooper'));\n\n},{\"./unicode\":184}],183:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar rootForm = function rootForm(term) {\n  var str = term.normal || term.silent_term || '';\n  //plural\n  // if (term.tag.Plural) {\n  // str = term.nouns().toSingular().normal || str;\n  // }\n  str = str.replace(/'s\\b/, '');\n  str = str.replace(/'\\b/, '');\n  term.root = str;\n};\n\nmodule.exports = rootForm;\n\n},{}],184:[function(_dereq_,module,exports){\n'use strict';\n//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\n\nvar compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  'a': 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАДадѦѧӐӑӒӓƛɅæ',\n  'b': 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬбвъьѢѣҌҍҔҕƥƾ',\n  'c': '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾϿЄСсєҀҁҪҫ',\n  'd': 'ÐĎďĐđƉƊȡƋƌǷ',\n  'e': 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  'f': 'ƑƒϜϝӺӻҒғӶӷſ',\n  'g': 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  'h': 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  'I': 'ÌÍÎÏ',\n  'i': 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  'j': 'ĴĵǰȷɈɉϳЈј',\n  'k': 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  'l': 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  'm': 'ΜϺϻМмӍӎ',\n  'n': 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  'o': 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ¤ƍΏ',\n  'p': 'ƤƿΡρϷϸϼРрҎҏÞ',\n  'q': 'Ɋɋ',\n  'r': 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  's': 'ŚśŜŝŞşŠšƧƨȘșȿςϚϛϟϨϩЅѕ',\n  't': 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮϯТт҂Ҭҭ',\n  'u': 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύϑЏЦЧцџҴҵҶҷӋӌӇӈ',\n  'v': 'νѴѵѶѷ',\n  'w': 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  'x': '×ΧχϗϰХхҲҳӼӽӾӿ',\n  'y': 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  'z': 'ŹźŻżŽžƩƵƶȤȥɀΖζ'\n};\n//decompress data into two hashes\nvar unicode = {};\nObject.keys(compact).forEach(function (k) {\n  compact[k].split('').forEach(function (s) {\n    unicode[s] = k;\n  });\n});\n\nvar killUnicode = function killUnicode(str) {\n  var chars = str.split('');\n  chars.forEach(function (s, i) {\n    if (unicode[s]) {\n      chars[i] = unicode[s];\n    }\n  });\n  return chars.join('');\n};\nmodule.exports = killUnicode;\n// console.log(fixUnicode('bjŏȒk'));\n\n},{}],185:[function(_dereq_,module,exports){\n'use strict';\n\nvar renderHtml = _dereq_('./renderHtml');\nvar fns = _dereq_('../../paths').fns;\n\nvar methods = {\n  /** a pixel-perfect reproduction of the input, with whitespace preserved */\n  text: function text(r) {\n    return r.whitespace.before + r._text + r.whitespace.after;\n  },\n  /** a lowercased, punctuation-cleaned, whitespace-trimmed version of the word */\n  normal: function normal(r) {\n    return r.normal;\n  },\n  /** even-more normalized than normal */\n  root: function root(r) {\n    return r.root || r.normal;\n  },\n  /** the &encoded term in a span element, with POS as classNames */\n  html: function html(r) {\n    return renderHtml(r);\n  },\n  /** a simplified response for Part-of-Speech tagging*/\n  tags: function tags(r) {\n    return {\n      text: r.text,\n      normal: r.normal,\n      tags: Object.keys(r.tag)\n    };\n  },\n  /** check-print information for the console */\n  debug: function debug(r) {\n    var tags = Object.keys(r.tag).map(function (tag) {\n      return fns.printTag(tag);\n    }).join(', ');\n    var word = r.text;\n    // word = r.whitespace.before + word + r.whitespace.after;\n    word = '\\'' + fns.yellow(word || '-') + '\\'';\n    if (r.dirty) {\n      // word += fns.red('*');\n    }\n    var silent = '';\n    if (r.silent_term) {\n      silent = '[' + r.silent_term + ']';\n    }\n    word = fns.leftPad(word, 25);\n    word += fns.leftPad(silent, 5);\n    console.log('   ' + word + '   ' + '     - ' + tags);\n  }\n};\n\nvar addMethods = function addMethods(Term) {\n  //hook them into result.proto\n  Term.prototype.out = function (fn) {\n    if (!methods[fn]) {\n      fn = 'text';\n    }\n    return methods[fn](this);\n  };\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"../../paths\":192,\"./renderHtml\":186}],186:[function(_dereq_,module,exports){\n'use strict';\n//turn xml special characters into apersand-encoding.\n//i'm not sure this is perfectly safe.\n\nvar escapeHtml = function escapeHtml(s) {\n  var HTML_CHAR_MAP = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;',\n    '\\'': '&#39;',\n    ' ': '&nbsp;'\n  };\n  return s.replace(/[<>&\"' ]/g, function (ch) {\n    return HTML_CHAR_MAP[ch];\n  });\n};\n\n//remove html elements already in the text\n//not tested!\n//http://stackoverflow.com/questions/295566/sanitize-rewrite-html-on-the-client-side\nvar sanitize = function sanitize(html) {\n  var tagBody = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\n  var tagOrComment = new RegExp('<(?:'\n  // Comment body.\n  + '!--(?:(?:-*[^->])*--+|-?)'\n  // Special \"raw text\" elements whose content should be elided.\n  + '|script\\\\b' + tagBody + '>[\\\\s\\\\S]*?</script\\\\s*' + '|style\\\\b' + tagBody + '>[\\\\s\\\\S]*?</style\\\\s*'\n  // Regular name\n  + '|/?[a-z]' + tagBody + ')>', 'gi');\n  var oldHtml = void 0;\n  do {\n    oldHtml = html;\n    html = html.replace(tagOrComment, '');\n  } while (html !== oldHtml);\n  return html.replace(/</g, '&lt;');\n};\n\n//turn the term into ~properly~ formatted html\nvar renderHtml = function renderHtml(t) {\n  var classes = Object.keys(t.tag).filter(function (tag) {\n    return tag !== 'Term';\n  });\n  classes = classes.map(function (c) {\n    return 'nl-' + c;\n  });\n  classes = classes.join(' ');\n  var text = sanitize(t.text);\n  text = escapeHtml(text);\n  var el = '<span class=\"' + classes + '\">' + text + '</span>';\n  return escapeHtml(t.whitespace.before) + el + escapeHtml(t.whitespace.after);\n};\n\nmodule.exports = renderHtml;\n\n},{}],187:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** the punctuation at the end of this term*/\n    endPunctuation: function endPunctuation() {\n      var m = this.text.match(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i);\n      if (m) {\n        var allowed = {\n          ',': 'comma',\n          ':': 'colon',\n          ';': 'semicolon',\n          '.': 'period',\n          '...': 'elipses',\n          '!': 'exclamation',\n          '?': 'question'\n        };\n        if (allowed[m[1]]) {\n          return m[1];\n        }\n      }\n      return null;\n    },\n    setPunctuation: function setPunctuation(punct) {\n      this.text = this.text.replace(/[a-z]([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/i, '');\n      this.text += punct;\n      return this;\n    },\n\n    /** check if the term ends with a comma */\n    hasComma: function hasComma() {\n      if (this.endPunctuation() === 'comma') {\n        return true;\n      }\n      return false;\n    },\n\n    killPunctuation: function killPunctuation() {\n      this.text = this._text.replace(/([,:;\\/.(\\.\\.\\.)\\!\\?]+)$/, '');\n      return this;\n    }\n  };\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{}],188:[function(_dereq_,module,exports){\n'use strict';\n\nvar setTag = _dereq_('./setTag');\nvar _unTag = _dereq_('./unTag');\nvar tagset = _dereq_('./paths').tags;\n\nvar addMethods = function addMethods(Term) {\n\n  var methods = {\n    /** set the term as this part-of-speech */\n    tagAs: function tagAs(tag, reason) {\n      setTag(this, tag, reason);\n    },\n    /** remove this part-of-speech from the term*/\n    unTag: function unTag(tag, reason) {\n      _unTag(this, tag, reason);\n    },\n\n    /** is this tag compatible with this word */\n    canBe: function canBe(tag) {\n      tag = tag || '';\n      tag = tag.replace(/^#/, '');\n      var not = tagset[tag].not || [];\n      for (var i = 0; i < not.length; i++) {\n        if (this.tag[not[i]]) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n  };\n\n  //hook them into term.prototype\n  Object.keys(methods).forEach(function (k) {\n    Term.prototype[k] = methods[k];\n  });\n  return Term;\n};\n\nmodule.exports = addMethods;\n\n},{\"./paths\":189,\"./setTag\":190,\"./unTag\":191}],189:[function(_dereq_,module,exports){\narguments[4][99][0].apply(exports,arguments)\n},{\"../../paths\":192,\"dup\":99}],190:[function(_dereq_,module,exports){\n'use strict';\n//set a term as a particular Part-of-speech\n\nvar path = _dereq_('./paths');\nvar log = path.log;\nvar tagset = path.tags;\nvar unTag = _dereq_('./unTag');\n\nvar makeCompatible = function makeCompatible(term, tag, reason) {\n  if (!tagset[tag]) {\n    return;\n  }\n  //find incompatible tags\n  var not = tagset[tag].not || [];\n  for (var i = 0; i < not.length; i++) {\n    unTag(term, not[i], reason);\n  }\n};\n\nvar tag_one = function tag_one(term, tag, reason) {\n  //ignore if already tagged\n  if (term.tag[tag]) {\n    return;\n  }\n  reason = reason || '';\n  //clean first\n  makeCompatible(term, tag, reason);\n  // unTag(term, tag, reason);\n  log.tagAs(term, tag, reason);\n  term.tag[tag] = true;\n};\n\nvar tagAll = function tagAll(term, tag, reason) {\n  if (!term || !tag || typeof tag !== 'string') {\n    // console.log(tag)\n    return;\n  }\n  tag = tag || '';\n  tag = tag.replace(/^#/, '');\n  tag_one(term, tag, reason);\n  //find assumed-tags\n  if (tagset[tag]) {\n    var tags = tagset[tag].parents || [];\n    for (var i = 0; i < tags.length; i++) {\n      tag_one(term, tags[i], '-');\n    }\n  }\n};\n\nmodule.exports = tagAll;\n// console.log(tagset['Person']);\n\n},{\"./paths\":189,\"./unTag\":191}],191:[function(_dereq_,module,exports){\n'use strict';\n//set a term as a particular Part-of-speech\n\nvar path = _dereq_('./paths');\nvar log = path.log;\nvar tagset = path.tags;\n\n//remove a tag from a term\nvar unTagOne = function unTagOne(term, tag, reason) {\n  if (term.tag[tag]) {\n    log.tell('   --' + tag + ' ' + (reason || ''));\n    delete term.tag[tag];\n  }\n};\n\nvar unTagAll = function unTagAll(term, tag, reason) {\n  if (!term || !tag) {\n    return;\n  }\n  unTagOne(term, tag, reason);\n  if (tagset[tag]) {\n    //pull-out their children (dependants) too\n    //this should probably be recursive, instead of just 2-deep\n    var killAlso = tagset[tag].children || [];\n    for (var o = 0; o < killAlso.length; o++) {\n      //kill its child\n      unTagOne(term, killAlso[o], reason);\n      //kill grandchildren too\n      var kill2 = tagset[killAlso[o]].children || [];\n      for (var i2 = 0; i2 < kill2.length; i2++) {\n        unTagOne(term, kill2[i2], reason);\n      }\n    }\n  }\n  return;\n};\nmodule.exports = unTagAll;\n\n},{\"./paths\":189}],192:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  data: _dereq_('../data'),\n  tags: _dereq_('../tags')\n};\n\n},{\"../data\":6,\"../fns\":21,\"../log\":23,\"../tags\":175}],193:[function(_dereq_,module,exports){\n'use strict';\n//seperate the 'meat' from the trailing/leading whitespace.\n//works in concert with ./src/result/tokenize.js\n\nvar build_whitespace = function build_whitespace(str) {\n  var whitespace = {\n    before: '',\n    after: ''\n  };\n  //get before punctuation/whitespace\n  var m = str.match(/^(\\s|-+|\\.\\.+)+/);\n  if (m) {\n    whitespace.before = m[0];\n    str = str.replace(/^(\\s|-+|\\.\\.+)+/, '');\n  }\n  //get after punctuation/whitespace\n  m = str.match(/(\\s+|-+|\\.\\.+)$/);\n  if (m) {\n    str = str.replace(/(\\s+|-+|\\.\\.+)$/, '');\n    whitespace.after = m[0];\n  }\n  return {\n    whitespace: whitespace,\n    text: str\n  };\n};\nmodule.exports = build_whitespace;\n\n},{}],194:[function(_dereq_,module,exports){\n'use strict';\n\nvar Term = _dereq_('../term');\n\nvar notWord = {\n  '-': true,\n  '--': true,\n  '...': true\n};\n\n//turn a string into an array of terms (naiive for now, lumped later)\nvar fromString = function fromString(str) {\n  var all = [];\n  //start with a naiive split\n  str = str || '';\n  if (typeof str === 'number') {\n    str = '' + str;\n  }\n  var firstSplit = str.split(/(\\S+)/);\n  var arr = [];\n  for (var i = 0; i < firstSplit.length; i++) {\n    var word = firstSplit[i];\n    var hasHyphen = word.match(/^([a-z]+)(-)([a-z0-9].*)/i);\n    if (hasHyphen) {\n      //support multiple-hyphenated-terms\n      var hyphens = word.split('-');\n      for (var o = 0; o < hyphens.length; o++) {\n        if (o === hyphens.length - 1) {\n          arr.push(hyphens[o]);\n        } else {\n          arr.push(hyphens[o] + '-');\n        }\n      }\n    } else {\n      arr.push(word);\n    }\n  }\n  //greedy merge whitespace+arr to the right\n  var carry = '';\n  for (var _i = 0; _i < arr.length; _i++) {\n    //if it's more than a whitespace\n    if (arr[_i].match(/\\S/) && !notWord[arr[_i]]) {\n      all.push(carry + arr[_i]);\n      carry = '';\n    } else {\n      carry += arr[_i];\n    }\n  }\n  //handle last one\n  if (carry && all.length > 0) {\n    all[all.length - 1] += carry; //put it on the end\n  }\n  return all.map(function (t) {\n    return new Term(t);\n  });\n};\nmodule.exports = fromString;\n\n},{\"../term\":177}],195:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar tagger = _dereq_('../tagger');\nvar build = _dereq_('./build');\n\nvar Terms = function () {\n  function Terms(arr, lexicon, refText, refTerms) {\n    var _this = this;\n\n    _classCallCheck(this, Terms);\n\n    this.terms = arr;\n    this.lexicon = lexicon;\n    this.refText = refText;\n    this._refTerms = refTerms;\n    this.count = undefined;\n    this.get = function (n) {\n      return _this.terms[n];\n    };\n  }\n\n  _createClass(Terms, [{\n    key: 'posTag',\n    value: function posTag() {\n      tagger(this);\n      return this;\n    }\n  }, {\n    key: 'firstTerm',\n    value: function firstTerm() {\n      return this.terms[0];\n    }\n  }, {\n    key: 'lastTerm',\n    value: function lastTerm() {\n      return this.terms[this.terms.length - 1];\n    }\n  }, {\n    key: 'all',\n    value: function all() {\n      return this.parent;\n    }\n  }, {\n    key: 'data',\n    value: function data() {\n      return {\n        text: this.out('text'),\n        normal: this.out('normal')\n      };\n    }\n  }, {\n    key: 'found',\n    get: function get() {\n      return this.terms.length > 0;\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.terms.length;\n    }\n  }, {\n    key: 'isA',\n    get: function get() {\n      return 'Terms';\n    }\n  }, {\n    key: 'refTerms',\n    get: function get() {\n      return this._refTerms || this;\n    },\n    set: function set(ts) {\n      this._refTerms = ts;\n      return this;\n    }\n  }, {\n    key: 'dirty',\n    set: function set(dirt) {\n      this.terms.forEach(function (t) {\n        t.dirty = dirt;\n      });\n    }\n  }, {\n    key: 'parent',\n    get: function get() {\n      return this.refText || this;\n    },\n    set: function set(r) {\n      this.refText = r;\n      return this;\n    }\n  }, {\n    key: 'parentTerms',\n    get: function get() {\n      return this.refTerms || this;\n    },\n    set: function set(r) {\n      this.refTerms = r;\n      return this;\n    }\n  }, {\n    key: 'whitespace',\n    get: function get() {\n      var _this2 = this;\n\n      return {\n        before: function before(str) {\n          _this2.firstTerm().whitespace.before = str;\n          return _this2;\n        },\n        after: function after(str) {\n          _this2.lastTerm().whitespace.after = str;\n          return _this2;\n        }\n      };\n    }\n  }], [{\n    key: 'fromString',\n    value: function fromString(str, lexicon) {\n      var termArr = build(str);\n      var ts = new Terms(termArr, lexicon, null);\n      //give each term a reference to this ts\n      ts.terms.forEach(function (t) {\n        t.parentTerms = ts;\n      });\n      ts.posTag();\n      return ts;\n    }\n  }]);\n\n  return Terms;\n}();\n\nTerms = _dereq_('./match')(Terms);\nTerms = _dereq_('./match/not')(Terms);\nTerms = _dereq_('./methods/tag')(Terms);\nTerms = _dereq_('./methods/loops')(Terms);\nTerms = _dereq_('./methods/delete')(Terms);\nTerms = _dereq_('./methods/insert')(Terms);\nTerms = _dereq_('./methods/misc')(Terms);\nTerms = _dereq_('./methods/out')(Terms);\nTerms = _dereq_('./methods/replace')(Terms);\nTerms = _dereq_('./methods/split')(Terms);\nTerms = _dereq_('./methods/transform')(Terms);\nmodule.exports = Terms;\n\n},{\"../tagger\":140,\"./build\":194,\"./match\":196,\"./match/not\":202,\"./methods/delete\":203,\"./methods/insert\":204,\"./methods/loops\":205,\"./methods/misc\":206,\"./methods/out\":207,\"./methods/replace\":208,\"./methods/split\":209,\"./methods/tag\":210,\"./methods/transform\":211}],196:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar syntax = _dereq_('./lib/syntax');\nvar startHere = _dereq_('./lib/startHere');\nvar Text = _dereq_('../../result/index');\n// const diff = require('./diff');\n\n\nvar matchMethods = function matchMethods(Terms) {\n\n  //support {word:true} whitelist\n  var matchObj = function matchObj(ts, obj) {\n    var matches = ts.terms.filter(function (t) {\n      return obj[t.normal];\n    });\n    matches = matches.map(function (a) {\n      return new Terms([a], ts.lexicon, ts.refText, ts.refTerms);\n    });\n    return new Text(matches, ts.lexicon, ts.parent);\n  };\n\n  //support [word, word] whitelist\n  var matchArr = function matchArr(r, arr) {\n    //its faster this way\n    var obj = arr.reduce(function (h, a) {\n      h[a] = true;\n      return h;\n    }, {});\n    return matchObj(r, obj);\n  };\n\n  //support regex-like whitelist-match\n  var matchString = function matchString(r, str, verbose) {\n    var matches = [];\n    var regs = syntax(str);\n    for (var t = 0; t < r.terms.length; t++) {\n      //don't loop through if '^'\n      if (regs[0] && regs[0].starting && t > 0) {\n        break;\n      }\n      var m = startHere(r, t, regs, verbose);\n      if (m) {\n        matches.push(m);\n        //ok, don't try to match these again.\n        var skip = m.length - 1;\n        t += skip; //this could use some work\n      }\n    }\n    matches = matches.map(function (a) {\n      return new Terms(a, r.lexicon, r.refText, r.refTerms);\n    });\n    return new Text(matches, r.lexicon, r.parent);\n  };\n\n  var methods = {\n\n    /**match all */\n    match: function match(want, verbose) {\n      //support regex-like whitelist-match\n      if (typeof want === 'string') {\n        return matchString(this, want, verbose);\n      }\n      if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n        var type = Object.prototype.toString.call(want);\n        //support [word, word] whitelist\n        if (type === '[object Array]') {\n          return matchArr(this, want, verbose);\n        }\n        //support {word:true} whitelist\n        if (type === '[object Object]') {\n          return matchObj(this, want, verbose);\n        }\n      }\n      return this;\n    },\n\n    /**return first match */\n    matchOne: function matchOne(str) {\n      var regs = syntax(str);\n      for (var t = 0; t < this.terms.length; t++) {\n        //don't loop through if '^'\n        if (regs[0] && regs[0].starting && t > 0) {\n          break;\n        }\n        var m = startHere(this, t, regs);\n        if (m) {\n          return m;\n        }\n      }\n      return null;\n    },\n\n    /**return first match */\n    has: function has(str) {\n      var m = this.matchOne(str);\n      return !!m;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = matchMethods;\n\n},{\"../../result/index\":25,\"./lib/startHere\":200,\"./lib/syntax\":201}],197:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\n\n//compare 1 term to one reg\nvar perfectMatch = function perfectMatch(term, reg) {\n  if (!term || !reg) {\n    return false;\n  }\n  //support '.' - any\n  if (reg.anyOne) {\n    return true;\n  }\n  //pos-match\n  if (reg.tag) {\n    for (var i = 0; i < reg.tag.length; i++) {\n      var tag = reg.tag[i];\n      if (term.tag[tag]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //one-of term-match\n  if (reg.oneOf) {\n    for (var _i = 0; _i < reg.oneOf.length; _i++) {\n      var str = reg.oneOf[_i];\n      //try a tag match\n      if (str.match(/^#/)) {\n        var _tag = str.replace(/^#/, '');\n        _tag = fns.titleCase(_tag);\n        if (term.tag[_tag]) {\n          return true;\n        }\n        //try a string-match\n      } else if (term.normal === str || term.text === str) {\n        return true;\n      }\n    }\n    return false;\n  }\n  //text-match\n  if (reg.normal) {\n    if (term.normal === reg.normal || term.text === reg.normal || term.root === reg.normal) {\n      return true;\n    }\n    //try contraction match too\n    if (term.silent_term === reg.normal) {\n      return true;\n    }\n  }\n  return false;\n};\n\n//wrap above method, to support '!' negation\nvar isMatch = function isMatch(term, reg, verbose) {\n  var found = perfectMatch(term, reg, verbose);\n  if (reg.negative) {\n    found = !!!found;\n  }\n  return found;\n};\nmodule.exports = isMatch;\n\n},{\"./paths\":199}],198:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('./paths').fns;\n\nvar almostMatch = function almostMatch(reg_str, term) {\n  return fns.startsWith(term.normal, reg_str);\n};\n\n// match ['john', 'smith'] regs, when the term is lumped\nvar lumpMatch = function lumpMatch(term, regs, reg_i) {\n  var reg_str = regs[reg_i].normal;\n  //is this a partial match? 'tony'& 'tony hawk'\n  if (almostMatch(reg_str, term)) {\n    //try to grow it\n    for (reg_i = reg_i + 1; reg_i < regs.length; reg_i++) {\n      reg_str += ' ' + regs[reg_i].normal;\n      //is it now perfect?\n      if (reg_str === term.normal) {\n        return reg_i;\n      }\n      //is it still almost?\n      if (almostMatch(reg_str, term)) {\n        continue;\n      }\n      return null;\n    }\n  }\n  return null;\n};\n\nmodule.exports = lumpMatch;\n\n},{\"./paths\":199}],199:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  fns: _dereq_('../../../fns'),\n  log: _dereq_('../../../log')\n};\n\n},{\"../../../fns\":21,\"../../../log\":23}],200:[function(_dereq_,module,exports){\n'use strict';\n\nvar lumpMatch = _dereq_('./lumpMatch');\nvar isMatch = _dereq_('./isMatch');\n\n// match everything until this point - '*'\nvar greedyUntil = function greedyUntil(ts, i, reg) {\n  for (i = i; i < ts.length; i++) {\n    var t = ts.terms[i];\n    if (isMatch(t, reg)) {\n      return i;\n    }\n  }\n  return null;\n};\n\n//keep matching this reg as long as possible\nvar greedyOf = function greedyOf(ts, i, reg, until) {\n  for (i = i; i < ts.length; i++) {\n    var t = ts.terms[i];\n    //found next reg ('until')\n    if (until && isMatch(t, until)) {\n      return i;\n    }\n    //die here\n    if (!isMatch(t, reg)) {\n      return i;\n    }\n  }\n  return i;\n};\n\n//try and match all regs, starting at this term\nvar startHere = function startHere(ts, startAt, regs, verbose) {\n  var term_i = startAt;\n  //check each regex-thing\n  for (var reg_i = 0; reg_i < regs.length; reg_i++) {\n    var term = ts.terms[term_i];\n    var reg = regs[reg_i];\n    var next_reg = regs[reg_i + 1];\n\n    if (!term) {\n      //we didn't need it anyways\n      if (reg.optional) {\n        continue;\n      }\n      return null;\n    }\n\n    //catch '^' errors\n    if (reg.starting && term_i > 0) {\n      return null;\n    }\n\n    //catch '$' errors\n    if (reg.ending && term_i !== ts.length - 1 && !reg.minMax) {\n      return null;\n    }\n\n    //support '*'\n    if (regs[reg_i].astrix) {\n      //just grab until the end..\n      if (!next_reg) {\n        return ts.terms.slice(startAt, ts.length);\n      }\n      var foundAt = greedyUntil(ts, term_i, regs[reg_i + 1]);\n      if (!foundAt) {\n        return null;\n      }\n      term_i = foundAt + 1;\n      reg_i += 1;\n      continue;\n    }\n\n    //support '{x,y}'\n    if (regs[reg_i].minMax) {\n      //on last reg?\n      if (!next_reg) {\n        var len = ts.length;\n        var max = regs[reg_i].minMax.max + startAt;\n        //if it must go to the end, but can't\n        if (regs[reg_i].ending && max < len) {\n          return null;\n        }\n        //dont grab past the end\n        if (max < len) {\n          len = max;\n        }\n        return ts.terms.slice(startAt, len);\n      }\n      //otherwise, match until this next thing\n      var _foundAt = greedyUntil(ts, term_i, next_reg);\n      if (!_foundAt) {\n        return null;\n      }\n      //if it's too close/far..\n      var minMax = regs[reg_i].minMax;\n      if (_foundAt < minMax.min || _foundAt > minMax.max) {\n        return null;\n      }\n      term_i = _foundAt + 1;\n      reg_i += 1;\n      continue;\n    }\n\n    //if optional, check next one\n    if (reg.optional) {\n      var until = regs[reg_i + 1];\n      term_i = greedyOf(ts, term_i, reg, until);\n      continue;\n    }\n\n    //check a perfect match\n    if (isMatch(term, reg, verbose)) {\n      term_i += 1;\n      //try to greedy-match '+'\n      if (reg.consecutive) {\n        var _until = regs[reg_i + 1];\n        term_i = greedyOf(ts, term_i, reg, _until);\n      }\n      continue;\n    }\n\n    if (term.silent_term && !term.normal) {\n      //skip over silent contraction terms\n      //we will continue on it, but not start on it\n      if (reg_i === 0) {\n        return null;\n      }\n      //try the next term, but with this regex again\n      term_i += 1;\n      reg_i -= 1;\n      continue;\n    }\n\n    //handle partial-matches of lumped terms\n    var lumpUntil = lumpMatch(term, regs, reg_i);\n    if (lumpUntil) {\n      reg_i = lumpUntil;\n      term_i += 1;\n      continue;\n    }\n\n    //was it optional anways?\n    if (reg.optional) {\n      continue;\n    }\n    return null;\n  }\n  return ts.terms.slice(startAt, term_i);\n};\n\nmodule.exports = startHere;\n\n},{\"./isMatch\":197,\"./lumpMatch\":198}],201:[function(_dereq_,module,exports){\n'use strict';\n// parse a search lookup term find the regex-like syntax in this term\n\nvar fns = _dereq_('./paths').fns;\n\n//turn 'regex-like' search string into parsed json\nvar parse_term = function parse_term(term) {\n  term = term || '';\n  term = term.trim();\n  var reg = {\n    optional: false\n  };\n  //order matters..\n\n  //negation ! flag\n  if (fns.startsWith(term, '!')) {\n    term = term.substr(1, term.length);\n    reg.negative = true;\n  }\n  //leading ^ flag\n  if (fns.startsWith(term, '^')) {\n    term = term.substr(1, term.length);\n    reg.starting = true;\n  }\n  //trailing $ flag means ending\n  if (fns.endsWith(term, '$')) {\n    term = term.replace(/\\$$/, '');\n    reg.ending = true;\n  }\n  //optional flag\n  if (fns.endsWith(term, '?')) {\n    term = term.replace(/\\?$/, '');\n    reg.optional = true;\n  }\n  //atleast-one-but-greedy flag\n  if (fns.endsWith(term, '+')) {\n    term = term.replace(/\\+$/, '');\n    reg.consecutive = true;\n  }\n  //pos flag\n  if (fns.startsWith(term, '#')) {\n    term = term.replace(/^\\#/, '');\n    reg.tag = [fns.titleCase(term)];\n    term = null;\n  }\n  //one_of options flag\n  if (fns.startsWith(term, '(') && fns.endsWith(term, ')')) {\n    term = term.replace(/\\)$/, '');\n    term = term.replace(/^\\(/, '');\n    reg.oneOf = term.split(/\\|/g);\n    term = null;\n  }\n  //min/max any '{1,3}'\n  if (fns.startsWith(term, '{') && fns.endsWith(term, '}')) {\n    var m = term.match(/\\{([0-9]+), ?([0-9]+)\\}/);\n    reg.minMax = {\n      min: parseInt(m[1], 10),\n      max: parseInt(m[2], 10)\n    };\n    term = null;\n  }\n  //a period means any one term\n  if (term === '.') {\n    reg.anyOne = true;\n    term = null;\n  }\n  //a * means anything until sentence end\n  if (term === '*') {\n    reg.astrix = true;\n    term = null;\n  }\n  reg.normal = term;\n  if (reg.normal) {\n    reg.normal = reg.normal.toLowerCase();\n  }\n  return reg;\n};\n\n//turn a match string into an array of objects\nvar parse_all = function parse_all(reg) {\n  reg = reg || '';\n  reg = reg.split(/ +/);\n  return reg.map(parse_term);\n};\n// console.log(parse_all(''));\n\nmodule.exports = parse_all;\n\n},{\"./paths\":199}],202:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar syntax = _dereq_('./lib/syntax');\nvar startHere = _dereq_('./lib/startHere');\nvar Text = _dereq_('../../result/index');\n// const diff = require('./diff');\n\nvar addfns = function addfns(Terms) {\n\n  var fns = {\n    //blacklist from a {word:true} object\n    notObj: function notObj(r, obj) {\n      var matches = [];\n      var current = [];\n      r.terms.forEach(function (t) {\n        //TODO: support multi-word blacklists\n        //we should blacklist this term\n        if (obj.hasOwnProperty(t.normal)) {\n          if (current.length) {\n            matches.push(current);\n          }\n          current = [];\n        } else {\n          current.push(t);\n        }\n      });\n      //add remainder\n      if (current.length) {\n        matches.push(current);\n      }\n      matches = matches.map(function (a) {\n        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n      });\n      return new Text(matches, r.lexicon, r.parent);\n    },\n\n    //blacklist from a match string\n    notString: function notString(r, want, verbose) {\n      var matches = [];\n      var regs = syntax(want);\n      var terms = [];\n      //try the match starting from each term\n      for (var i = 0; i < r.terms.length; i++) {\n        var bad = startHere(r, i, regs, verbose);\n        if (bad) {\n          //reset matches\n          if (terms.length > 0) {\n            matches.push(terms);\n            terms = [];\n          }\n          //skip these terms now\n          i += bad.length - 1;\n          continue;\n        }\n        terms.push(r.terms[i]);\n      }\n      //remaining ones\n      if (terms.length > 0) {\n        matches.push(terms);\n      }\n      matches = matches.map(function (a) {\n        return new Terms(a, r.lexicon, r.refText, r.refTerms);\n      });\n      // return matches\n      return new Text(matches, r.lexicon, r.parent);\n    }\n  };\n  //blacklist from a [word, word] array\n  fns.notArray = function (r, arr) {\n    var obj = arr.reduce(function (h, a) {\n      h[a] = true;\n      return h;\n    }, {});\n    return fns.notObj(r, obj);\n  };\n\n  /**return everything but these matches*/\n  Terms.prototype.not = function (want, verbose) {\n    //support [word, word] blacklist\n    if ((typeof want === 'undefined' ? 'undefined' : _typeof(want)) === 'object') {\n      var type = Object.prototype.toString.call(want);\n      if (type === '[object Array]') {\n        return fns.notArray(this, want, verbose);\n      }\n      if (type === '[object Object]') {\n        return fns.notObj(this, want, verbose);\n      }\n    }\n    if (typeof want === 'string') {\n      return fns.notString(this, want, verbose);\n    }\n    return this;\n  };\n  return Terms;\n};\n\nmodule.exports = addfns;\n\n},{\"../../result/index\":25,\"./lib/startHere\":200,\"./lib/syntax\":201}],203:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\nvar deleteMethods = function deleteMethods(Terms) {\n\n  var methods = {\n\n    'delete': function _delete(reg) {\n      //don't touch parent if empty\n      if (!this.found) {\n        return this;\n      }\n      //remove all selected\n      if (!reg) {\n        this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n        return this;\n      }\n      //only remove a portion of this\n      var found = this.match(reg);\n      if (found.found) {\n        var r = mutate.deleteThese(this, found);\n        return r;\n      }\n      return this.parentTerms;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = deleteMethods;\n\n},{\"../mutate\":212}],204:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\n//whitespace\nvar addSpaceAt = function addSpaceAt(ts, i) {\n  if (!ts.terms.length || !ts.terms[i]) {\n    return ts;\n  }\n  ts.terms[i].whitespace.before = ' ';\n  return ts;\n};\n\nvar insertMethods = function insertMethods(Terms) {\n\n  //accept any sorta thing\n  var ensureTerms = function ensureTerms(input) {\n    if (input.isA === 'Terms') {\n      return input;\n    }\n    if (input.isA === 'Term') {\n      return new Terms([input]);\n    }\n    return Terms.fromString(input);\n  };\n\n  var methods = {\n\n    insertBefore: function insertBefore(input, tag) {\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      var index = this.index();\n      //pad a space on parent\n      addSpaceAt(this.parentTerms, index);\n      if (index > 0) {\n        addSpaceAt(ts, 0); //if in middle of sentence\n      }\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        this.terms = ts.terms.concat(this.terms);\n      }\n      return this;\n    },\n\n    insertAfter: function insertAfter(input, tag) {\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      var index = this.terms[this.terms.length - 1].index();\n      //beginning whitespace to ts\n      addSpaceAt(ts, 0);\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index + 1, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        this.terms = this.terms.concat(ts.terms);\n      }\n      return this;\n    },\n\n    insertAt: function insertAt(index, input, tag) {\n      if (index < 0) {\n        index = 0;\n      }\n      var original_l = this.terms.length;\n      var ts = ensureTerms(input);\n      //tag that thing too\n      if (tag) {\n        ts.tagAs(tag);\n      }\n      if (index > 0) {\n        addSpaceAt(ts, 0); //if in middle of sentence\n      }\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, ts);\n      //also copy them to current selection\n      if (this.terms.length === original_l) {\n        //splice the new terms into this (yikes!)\n        Array.prototype.splice.apply(this.terms, [index, 0].concat(ts.terms));\n      }\n      //beginning whitespace to ts\n      if (index === 0) {\n        this.terms[0].whitespace.before = '';\n        ts.terms[ts.terms.length - 1].whitespace.after = ' ';\n      }\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = insertMethods;\n\n},{\"../mutate\":212}],205:[function(_dereq_,module,exports){\n'use strict';\n//these methods are simply term-methods called in a loop\n\nvar addMethods = function addMethods(Terms) {\n\n  var foreach = [\n  // ['tagAs'],\n  // ['unTag'],\n  // ['canBe'],\n  ['toUpperCase', 'UpperCase'], ['toLowerCase'], ['toTitleCase', 'TitleCase']];\n\n  foreach.forEach(function (arr) {\n    var k = arr[0];\n    var tag = arr[1];\n    var myFn = function myFn() {\n      var args = arguments;\n      this.terms.forEach(function (t) {\n        t[k].apply(t, args);\n      });\n      if (tag) {\n        this.tagAs(tag, k);\n      }\n      return this;\n    };\n    Terms.prototype[k] = myFn;\n  });\n  return Terms;\n};\n\nmodule.exports = addMethods;\n\n},{}],206:[function(_dereq_,module,exports){\n'use strict';\n\nvar miscMethods = function miscMethods(Terms) {\n\n  var methods = {\n    term: function term(n) {\n      return this.terms[n];\n    },\n    first: function first() {\n      var t = this.terms[0];\n      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n    },\n    last: function last() {\n      var t = this.terms[this.terms.length - 1];\n      return new Terms([t], this.lexicon, this.refText, this.refTerms);\n    },\n    slice: function slice(start, end) {\n      var terms = this.terms.slice(start, end);\n      return new Terms(terms, this.lexicon, this.refText, this.refTerms);\n    },\n    endPunctuation: function endPunctuation() {\n      return this.last().terms[0].endPunctuation();\n    },\n    canBe: function canBe(tag) {\n      tag = tag || '';\n      tag = tag.replace(/^#/, '');\n      //atleast one of these\n      for (var i = 0; i < this.terms.length; i++) {\n        if (!this.terms[i].canBe(tag)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    index: function index() {\n      var parent = this.parentTerms;\n      var first = this.terms[0];\n      if (!parent || !first) {\n        return null; //maybe..\n      }\n      for (var i = 0; i < parent.terms.length; i++) {\n        if (first === parent.terms[i]) {\n          return i;\n        }\n      }\n      return null;\n    },\n    termIndex: function termIndex() {\n      var first = this.terms[0];\n      var ref = this.refText || this;\n      if (!ref || !first) {\n        return null; //maybe..\n      }\n      // console.log(ref);\n      var n = 0;\n      for (var i = 0; i < ref.list.length; i++) {\n        var ts = ref.list[i];\n        for (var o = 0; o < ts.terms.length; o++) {\n          if (ts.terms[o] === first) {\n            return n;\n          }\n          n += 1;\n        }\n      }\n      return n;\n    },\n    //number of characters in this match\n    chars: function chars() {\n      return this.terms.reduce(function (i, t) {\n        i += t.whitespace.before.length;\n        i += t.text.length;\n        i += t.whitespace.after.length;\n        return i;\n      }, 0);\n    },\n\n    //just .length\n    wordCount: function wordCount() {\n      return this.terms.length;\n    },\n\n\n    //this has term-order logic, so has to be here\n    toCamelCase: function toCamelCase() {\n      this.toTitleCase();\n      this.terms.forEach(function (t, i) {\n        if (i !== 0) {\n          t.whitespace.before = '';\n        }\n        t.whitespace.after = '';\n      });\n      this.tagAs('#CamelCase', 'toCamelCase');\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = miscMethods;\n\n},{}],207:[function(_dereq_,module,exports){\n'use strict';\n\nvar fns = _dereq_('../paths').fns;\n\nvar methods = {\n  text: function text(ts) {\n    return ts.terms.reduce(function (str, t) {\n      str += t.out('text');\n      return str;\n    }, '');\n  },\n\n  normal: function normal(ts) {\n    var terms = ts.terms.filter(function (t) {\n      return t.text;\n    });\n    terms = terms.map(function (t) {\n      return t.normal; //+ punct;\n    });\n    return terms.join(' ');\n  },\n\n  grid: function grid(ts) {\n    var str = '  ';\n    str += ts.terms.reduce(function (s, t) {\n      s += fns.leftPad(t.text, 11);\n      return s;\n    }, '');\n    return str + '\\n\\n';\n  },\n\n  color: function color(ts) {\n    return ts.terms.reduce(function (s, t) {\n      s += fns.printTerm(t);\n      return s;\n    }, '');\n  },\n  /** no punctuation, fancy business **/\n  root: function root(ts) {\n    return ts.terms.filter(function (t) {\n      return t.text;\n    }).map(function (t) {\n      return t.root;\n    }).join(' ').toLowerCase();\n  },\n\n  html: function html(ts) {\n    return ts.terms.map(function (t) {\n      return t.render.html();\n    }).join(' ');\n  },\n  debug: function debug(ts) {\n    ts.terms.forEach(function (t) {\n      t.out('debug');\n    });\n  }\n};\nmethods.plaintext = methods.text;\nmethods.normalize = methods.normal;\nmethods.normalized = methods.normal;\nmethods.colors = methods.color;\nmethods.tags = methods.terms;\n\nvar renderMethods = function renderMethods(Terms) {\n  Terms.prototype.out = function (str) {\n    if (methods[str]) {\n      return methods[str](this);\n    }\n    return methods.text(this);\n  };\n  //check method\n  Terms.prototype.debug = function () {\n    return methods.debug(this);\n  };\n  return Terms;\n};\n\nmodule.exports = renderMethods;\n\n},{\"../paths\":213}],208:[function(_dereq_,module,exports){\n'use strict';\n\nvar mutate = _dereq_('../mutate');\n\nvar replaceMethods = function replaceMethods(Terms) {\n  var methods = {\n\n    /**swap this for that */\n    replace: function replace(str1, str2) {\n      //in this form, we 'replaceWith'\n      if (str2 === undefined) {\n        return this.replaceWith(str1);\n      }\n      this.match(str1).replaceWith(str2);\n      return this;\n    },\n\n    /**swap this for that */\n    replaceWith: function replaceWith(str, tag) {\n      var toAdd = Terms.fromString(str);\n      if (tag) {\n        toAdd.tagAs(tag, 'user-given');\n      }\n      var index = this.index();\n      this.parentTerms = mutate.deleteThese(this.parentTerms, this);\n      this.parentTerms.terms = mutate.insertAt(this.parentTerms.terms, index, toAdd);\n      this.terms = toAdd.terms;\n      return this;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = replaceMethods;\n\n},{\"../mutate\":212}],209:[function(_dereq_,module,exports){\n'use strict';\n\n//break apart a termlist into (before, match after)\n\nvar breakUpHere = function breakUpHere(terms, ts) {\n  var firstTerm = ts.terms[0];\n  var len = ts.terms.length;\n  for (var i = 0; i < terms.length; i++) {\n    if (terms[i] === firstTerm) {\n      return {\n        before: terms.slice(0, i),\n        match: terms.slice(i, i + len),\n        after: terms.slice(i + len, terms.length)\n      };\n    }\n  }\n  return {\n    after: terms\n  };\n};\n\nvar splitMethods = function splitMethods(Terms) {\n\n  var methods = {\n\n    /** at the end of the match, split the terms **/\n    splitAfter: function splitAfter(reg, verbose) {\n      var _this = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before && section.match) {\n          all.push(section.before.concat(section.match));\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //make them termlists\n      all = all.map(function (ts) {\n        var parent = _this.refText; //|| this;\n        return new Terms(ts, _this.lexicon, parent, _this.refTerms);\n      });\n      return all;\n    },\n\n    /** return only before & after  the match**/\n    splitOn: function splitOn(reg, verbose) {\n      var _this2 = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before) {\n          all.push(section.before);\n        }\n        if (section.match) {\n          all.push(section.match);\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //make them termlists\n      all = all.filter(function (a) {\n        return a && a.length;\n      });\n      all = all.map(function (ts) {\n        return new Terms(ts, ts.lexicon, ts.refText, _this2.refTerms);\n      });\n      return all;\n    },\n\n    /** at the start of the match, split the terms**/\n    splitBefore: function splitBefore(reg, verbose) {\n      var _this3 = this;\n\n      var ms = this.match(reg, verbose); //Array[ts]\n      var termArr = this.terms;\n      var all = [];\n      ms.list.forEach(function (lookFor) {\n        var section = breakUpHere(termArr, lookFor);\n        if (section.before) {\n          all.push(section.before);\n        }\n        if (section.match) {\n          all.push(section.match);\n        }\n        termArr = section.after;\n      });\n      //add the remaining\n      if (termArr.length) {\n        all.push(termArr);\n      }\n      //cleanup-step: merge all (middle) matches with the next one\n      for (var i = 0; i < all.length; i++) {\n        for (var o = 0; o < ms.length; o++) {\n          if (ms.list[o].terms[0] === all[i][0]) {\n            if (all[i + 1]) {\n              all[i] = all[i].concat(all[i + 1]);\n              all[i + 1] = [];\n            }\n          }\n        }\n      }\n      //make them termlists\n      all = all.filter(function (a) {\n        return a && a.length;\n      });\n      all = all.map(function (ts) {\n        return new Terms(ts, ts.lexicon, ts.refText, _this3.refTerms);\n      });\n      return all;\n    }\n\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = splitMethods;\nexports = splitMethods;\n\n},{}],210:[function(_dereq_,module,exports){\n'use strict';\n\nvar addMethods = function addMethods(Terms) {\n\n  var methods = {\n    tagAs: function tagAs(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.tagAs(tag, reason);\n      });\n    },\n    unTag: function unTag(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.unTag(tag, reason);\n      });\n    },\n    canBe: function canBe(tag, reason) {\n      this.terms.forEach(function (t) {\n        t.canBe(tag, reason);\n      });\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = addMethods;\n\n},{}],211:[function(_dereq_,module,exports){\n'use strict';\n\nvar transforms = function transforms(Terms) {\n\n  var methods = {\n\n    clone: function clone() {\n      var terms = this.terms.map(function (t) {\n        return t.clone();\n      });\n      return new Terms(terms, this.lexicon, this.refText, null); //, this.refTerms\n    },\n    hyphenate: function hyphenate() {\n      var _this = this;\n\n      this.terms.forEach(function (t, i) {\n        if (i !== _this.terms.length - 1) {\n          t.whitespace.after = '-';\n        }\n        if (i !== 0) {\n          t.whitespace.before = '';\n        }\n      });\n      return this;\n    },\n    dehyphenate: function dehyphenate() {\n      this.terms.forEach(function (t) {\n        if (t.whitespace.after === '-') {\n          t.whitespace.after = ' ';\n        }\n      });\n      return this;\n    }\n  };\n\n  //hook them into result.proto\n  Object.keys(methods).forEach(function (k) {\n    Terms.prototype[k] = methods[k];\n  });\n  return Terms;\n};\n\nmodule.exports = transforms;\n\n},{}],212:[function(_dereq_,module,exports){\n'use strict';\n//\n\nvar getTerms = function getTerms(needle) {\n  var arr = [];\n  if (needle.isA === 'Terms') {\n    arr = needle.terms;\n  } else if (needle.isA === 'Text') {\n    arr = needle.flatten().list[0].terms;\n  } else if (needle.isA === 'Term') {\n    arr = [needle];\n  }\n  return arr;\n};\n\n//remove them\nexports.deleteThese = function (source, needle) {\n  var arr = getTerms(needle);\n  source.terms = source.terms.filter(function (t) {\n    for (var i = 0; i < arr.length; i++) {\n      if (t === arr[i]) {\n        return false;\n      }\n    }\n    return true;\n  });\n  return source;\n};\n\n//add them\nexports.insertAt = function (terms, i, needle) {\n  needle.dirty = true;\n  var arr = getTerms(needle);\n  //handle whitespace\n  if (i > 0 && arr[0]) {\n    arr[0].whitespace.before = ' ';\n  }\n  //gnarly splice\n  //-( basically  - terms.splice(i+1, 0, arr) )\n  Array.prototype.splice.apply(terms, [i, 0].concat(arr));\n  return terms;\n};\n\n},{}],213:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = {\n  data: _dereq_('../data/index'),\n  lexicon: _dereq_('../data/lexicon'),\n  fns: _dereq_('../fns'),\n  log: _dereq_('../log'),\n  Term: _dereq_('../term')\n};\n\n},{\"../data/index\":6,\"../data/lexicon\":7,\"../fns\":21,\"../log\":23,\"../term\":177}],214:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:68;1:5A;2:6A;3:4I;4:5K;5:5N;6:62;7:66;a5Yb5Fc51d4Le49f3Vg3Ih35i2Tj2Rk2Ql2Fm27n1Zo1Kp13qu11r0Vs05tYuJvGw8year1za1D;arEeDholeCiBo9r8;o4Hy;man1o8u5P;d5Rzy;ck0despr63ly,ry;!sa3;a4Gek1lco1C;p0y;a9i8ola3W;b6Fol4K;gabo5Hin,nilla,rio5B;g1lt3ZnDpArb4Ms9tter8;!mo6;ed,u2;b1Hp9s8t19;ca3et,tairs;er,i3R;authorFdeDeCfair,ivers2known,like1precedMrAs9ti5w8;iel5ritt5C;ig1Kupervis0;e8u1;cognBgul5Il5I;v58xpect0;cid0r8;!grou53stood;iz0;aCeBiAo9r8;anqu4Jen5i4Doubl0ue;geth4p,rp5H;dy,me1ny;en57st0;boo,l8n,wd3R;ent0;aWca3PeUhTiRkin0FlOmNnobb42oKpIqueam42tCu8ymb58;bAdd4Wp8r3F;er8re0J;!b,i1Z;du0t3;aCeAi0Nr9u8yl3X;p56r5;aightfor4Vip0;ad8reotyp0;fa6y;nda5Frk;a4Si8lend51rig0V;cy,r19;le9mb4phist1Lr8u13vi3J;d4Yry;!mn;el1ug;e9i8y;ck,g09my;ek,nd4;ck,l1n8;ce4Ig3;a5e4iTut,y;c8em1lf3Fni1Fre1Eve4Gxy;o11r38;cr0int1l2Lme,v1Z;aCeAi9o8;bu6o2Csy,y2;ght0Ytzy,v2;a8b0Ucondi3Emo3Epublic37t1S;dy,l,r;b4Hci6gg0nd3S;a8icke6;ck,i4V;aKeIhoHicayu13lac4EoGr9u8;bl4Amp0ny;eDiAo8;!b02f8p4;ou3Su7;c9m8or;a2Le;ey,k1;ci7mi14se4M;li30puli6;ny;r8ti2Y;fe4Cv2J;in1Lr8st;allel0t8;-ti8i2;me;bKffIi1kHnGpFrg0Yth4utEv8;al,er8;!aBn9t,w8;e8roug9;ig8;ht;ll;do0Ger,g1Ysi0E;en,posi2K;g1Wli0D;!ay;b8li0B;eat;e7s8;ce08ole2E;aEeDiBo8ua3M;b3n9rLsy,t8;ab3;descri3Qstop;g8mb3;ht1;arby,cessa1Pighbor1xt;ive,k0;aDeBiAo8ultip3;bi3dern,l5n1Jo8st;dy,t;ld,nX;a8di04re;s1ty;cab2Vd1genta,in,jUkeshift,le,mmo8ny;th;aHeCiAo8;f0Zne1u8ve1w1y2;sy,t1Q;ke1m8ter2ve1;it0;ftBg9th2v8wd;el;al,e8;nda17;!-Z;ngu2Sst,tt4;ap1Di0EnoX;agg0ol1u8;i1ZniFstifi0veni3;cy,de2gno33llImFn8;br0doDiGn4sAt8;a2Wen7ox8;ic2F;a9i8;de;ne;or;men7p8;ar8erfe2Port0rop4;ti2;!eg2;aHeEiCoBu8;ge,m8rt;b3dr8id;um;me1ne6ok0s03ur1;ghfalut1Bl1sp8;an23;a9f03l8;l0UpO;dy,ven1;l9n5rro8;wi0A;f,low0;aIener1WhGid5loFoDr9u8;ard0;aAey,is1o8;o8ss;vy;tis,y;ld,ne,o8;d,fy;b2oI;a8o8;st1;in8u5y;ful;aIeGiElag21oArie9u8;n,rY;nd1;aAol09r8ul;e8m4;gPign;my;erce ,n8t;al,i09;ma3r8;ti3;bl0ke,l7n0Lr,u8vori06;l8x;ty;aEerie,lDnti0ZtheCvBx8;a1Hcess,pe9t8ube1M;ra;ct0rt;eryday,il;re2;dLiX;rBs8;t,yg8;oi8;ng;th1;aLeHiCoArea9u8;e,mb;ry;ne,ub3;le;dact0Officu0Xre,s9v8;er7;cre9eas0gruntl0hone6ord8tress0;er1;et;adpAn7rang0t9vo8;ut;ail0ermin0;an;i1mag0n8pp4;ish;agey,ertaKhIivHlFoAr8udd1;a8isp,owd0;mp0vZz0;loBm9ncre8rZst1vert,ward1zy;te;mon,ple8;te,x;ni2ss2;ev4o8;s0u5;il;eesy,i8;ef,l1;in;aLeIizarTlFoBrAu8;r1sy;ly;isk,okK;gAld,tt9un8;cy;om;us;an9iCo8;nd,o5;d,k;hi9lov0nt,st,tt4yo9;er;nd;ckBd,ld,nkArr9w5;dy;en;ruW;!wards;bRctu2dKfraJgain6hHlEntiquDpCrab,sleep,verBw8;a9k8;waU;re;age;pareUt;at0;coh8l,oof;ol8;ic;ead;st;id;eHuCv8;a9er7;se;nc0;ed;lt;al;erElDoBruAs8;eEtra8;ct;pt;a8ve;rd;aze,e;ra8;nt\";\n\n},{}],215:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"a05by 03d00eXfShQinPjustOkinda,mMnKoFpDquite,rAs6t3up2very,w1ye0;p,s;ay,ell; to,wards5;h1o0wiN;o,t6ward;en,us;everal,o0uch;!me1on,rt0; of;hUtimes,w04;a1e0;alP;ndomOthL;ar excellCer0oint blank; Khaps;f3n0;ce0ly;! 0;agXmoR; courFten;ewGo0; longCt withstanding;aybe,eanwhi9ore0;!ovA;! aboQ;deed,steR;en0;ce;or1urther0;!moG; 0ev3;examp0good,suE;le;n mas1v0;er;se;amn,e 1irect0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\";\n\n},{}],216:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"aCbBcAd9f8h7i6jfk,kul,l4m3ord,p1s0yyz;fo,yd;ek,h0;l,x;co,ia,uc;a0gw,hr;s,x;ax,cn,st;kg,nd;co,ra;en,fw,xb;dg,gk,lt;cn,kk;ms,tl\";\n\n},{}],217:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"a2Tb23c1Td1Oe1Nf1Lg1Gh18i16jakar2Ek0Xl0Rm0En0Ao08pXquiWrTsJtAu9v6w3y1z0;agreb,uri1W;ang1Qe0okohama;katerin1Frev31;ars1ellingt1Oin0rocl1;nipeg,terth0V;aw;a1i0;en2Glni2Y;lenc2Tncouv0Gr2F;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj22l13miso2Ira29; haJssaloni0X;gucigalpa,hr2Nl av0L;i0llinn,mpe2Angi07rtu;chu21n2LpT;a3e2h1kopje,t0ydney;ockholm,uttga11;angh1Eenzh1W;o0KvZ;int peters0Ul3n0ppo1E; 0ti1A;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t24;ga,o de janei16;to;a8e6h5i4o2r0ueb1Pyongya1M;a0etor23;gue;rt0zn23; elizabe3o;ls1Frae23;iladelph1Ynom pe07oenix;r0tah tik18;th;lerJr0tr0Z;is;dessa,s0ttawa;a1Glo;a2ew 0is;delTtaip0york;ei;goya,nt0Tpl0T;a5e4i3o1u0;mb0Kni0H;nt0scH;evideo,real;l1Ln01skolc;dellín,lbour0R;drid,l5n3r0;ib1se0;ille;or;chest0dalay,i0Y;er;mo;a4i1o0uxembou1FvAy00;ndZs angel0E;ege,ma0nz,sbYverpo1;!ss0;ol; pla0Husan0E;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Jndy,ohsiu0Gra0un02;c0j;hi;ncheLstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stH;nh;lsin0rakliF;ki;ifa,m0noi,va09;bu0RiltC;dan3en2hent,iza,othen1raz,ua0;dalaj0Fngzhou,tema05;bu0O;eToa;sk;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg\";\n\n},{}],218:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:39;1:2M;a2Xb2Ec22d1Ye1Sf1Mg1Bh19i13j11k0Zl0Um0Gn05om3DpZqat1JrXsKtCu6v4wal3yemTz2;a25imbabwe;es,lis and futu2Y;a2enezue32ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2Y;k.,s.2; 28a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Ys and caic1U; and 2-2;toba1K;go,kel0Ynga;iw2Wji2nz2S;ki2U;aCcotl1eBi8lov7o5pa2Cri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Rriname;lomon1Wmal0uth 2;afr2JkLsud2P;ak0en0;erra leoEn2;gapo1Xt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele25luc0mart20;epublic of ir0Com2Duss0w2;an26;a3eHhilippinTitcairn1Lo2uerto riM;l1rtugE;ki2Cl3nama,pua new0Ura2;gu6;au,esti2;ne;aAe8i6or2;folk1Hth3w2;ay; k2ern mariana1C;or0N;caragua,ger2ue;!ia;p2ther19w zeal1;al;mib0u2;ru;a6exi5icro0Ao2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i15;shall0Wtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed01;a5e4i2uxembourg;b2echtenste11thu1F;er0ya;ban0Hsotho;os,tv0;azakh1Ee2iriba03osovo,uwait,yrgyz1E;eling0Knya;a2erFord1D;ma16p1C;c6nd5r3s2taly,vory coast;le of m1Arael;a2el1;n,q;ia,oJ;el1;aiTon2ungary;dur0Ng kong;aBeAha0Qibralt9re7u2;a5ern4inea2ya0P;!-biss2;au;sey;deloupe,m,tema0Q;e2na0N;ce,nl1;ar;org0rmany;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\";\n\n},{}],219:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:17;a0Wb0Mc0Bd09e08f06g03h01iXjUkSlOmKnHomGpCqatari,rAs6t4u3v2wel0Qz1;am0Eimbabwe0;enezuel0ietnam0G;g8krai11;aiwShai,rinida0Hu1;ni0Prkmen;a3cot0Je2ingapoNlovak,oma0Tpa04udQw1y0X;edi0Jiss;negal0Ar07;mo0uT;o5us0Kw1;and0;a2eru0Ghilipp0Po1;li0Drtugu05;kist2lesti0Qna1raguay0;ma0P;ani;amiYi1orweO;caragu0geri1;an,en;a2ex0Mo1;ngo0Erocc0;cedo0Ila1;gasy,y07;a3eb8i1;b1thua0F;e0Dy0;o,t01;azakh,eny0o1uwaiti;re0;a1orda0A;ma0Bp1;anM;celandic,nd3r1sraeli,ta02vo06;a1iS;ni0qi;i0oneU;aiCin1ondur0unM;di;amCe1hanai0reek,uatemal0;or1rm0;gi0;i1ren6;lipino,n3;cuadoVgyp5ngliIstoWthiopi0urope0;a1ominXut3;niG;a8h5o3roa2ub0ze1;ch;ti0;lom1ngol4;bi0;a5i1;le0n1;ese;liforLm1na2;bo1erooK;di0;a9el7o5r2ul1;gaG;aziBi1;ti1;sh;li1sD;vi0;aru1gi0;si0;ngladeshi,sque;f9l6merAngol0r4si0us1;sie,tr1;a1i0;li0;gent1me4;ine;ba2ge1;ri0;ni0;gh0r1;ic0;an\";\n\n},{}],220:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"aZbYdTeRfuck,gQhKlHmGnFoCpAsh9u7voi01w3y0;a1eKu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! huh,-Oh,m;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a3e1i,mm,urr0;ah;e,ll0y;!o;ha0i;!ha;ah,ee,oodbye,rr;e0h,t cetera,ww;k,p;'3a0uh;m0ng;mit,n0;!it;oh;ah,oo,ye; 1h0rgh;!em;la\";\n\n},{}],221:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:81;1:7E;2:7G;3:7Y;4:65;5:7P;6:7T;7:7O;8:7U;9:7C;A:6K;B:7R;C:6X;D:79;a78b6Pc5Ud5Ce4Rf4Jg47h3Zi3Uj38k2Sl21m1An14o12p0Ur0FsYtNursu9vIwGyEza7;olan2vE;etDon5Z;an2enMhi6PilE;a,la,ma;aHeFiE;ctor1o9rgin1vi3B;l4VrE;a,na,oniA;len5Ones7N;aLeJheIi3onHrE;acCiFuE;dy;c1na,s8;i4Vya;l4Nres0;o3GrE;e1Oi,ri;bit8mEn29ra,s8;a7iEmy;!ka;aTel4HhLiKoItHuFyE;b7Tlv1;e,sEzV;an17i;acCel1H;f1nEph1;d7ia,ja,ya;lv1mon0;aHeEi24;e3i9lFrE;i,yl;ia,ly;nFrEu3w3;i,on;a,ia,nEon;a,on;b24i2l5Ymant8nd7raB;aPeLhon2i5oFuE;by,th;bIch4Pn2sFxE;an4W;aFeE;ma2Ut5;!lind;er5yn;bFnE;a,ee;a,eE;cAkaB;chEmo3qu3I;a3HelEi2;!e,le;aHeGhylFriE;scil0Oyamva2;is,lis;arl,t7;ige,mGrvati,tricFulE;a,etDin0;a,e,ia;!e9;f4BlE;ga,iv1;aIelHiForE;a,ma;cEkki,na;ho2No2N;!l;di6Hi36o0Qtas8;aOeKiHonFrignayani,uri2ZyrE;a,na,t2J;a,iE;ca,q3G;ch3SlFrE;an2iam;dred,iA;ag1DgGliFrE;ced63edi36;n2s5Q;an,han;bSdel4e,gdale3li59nRrHtil2uGvFx4yE;a,ra;is;de,re6;cMgKiGl3Fs8tFyanE;!n;a,ha,i3;aFb2Hja,l2Ena,sEtza;a,ol,sa;!nE;!a,e,n0;arEo,r4AueriD;et4Ai5;elLia;dakran5on,ue9;el,le;aXeSiOoKuGyE;d1nE;!a,da,e4Vn1D;ciGelFiEpe;sa;a,la;a,l3Un2;is,la,rEui2Q;aFeEna,ra4;n0t5;!in0;lGndEsa;a,sE;ay,ey,i,y;a,i0Fli0F;aHiGla,nFoEslCt1M;la,na;a,o7;gh,la;!h,n07;don2Hna,ra,tHurFvern0xE;mi;a,eE;l,n;as8is8oE;nEya;ya;aMeJhadija,iGrE;istEy2G;a,en,in0M;mErst6;!beE;rlC;is8lFnd7rE;i,ri;ey,i,lCy;nyakumari,rItFvi5yE;!la;aFe,hEi3Cri3y;ar4er4le6r12;ri3;a,en,iEla;!ma,n;aTeNilKoGuE;anEdi1Fl1st4;a,i5;!anGcel0VdFhan1Rl3Eni,seEva3y37;fi3ph4;i32y;!a,e,n02;!iFlE;!iE;an;anHle3nFri,sE;iAsiA;a,if3LnE;a,if3K;a,e3Cin0nE;a,e3Bin0;cHde,nEsm4vie7;a,eFiE;ce,n0s;!l2At2G;l0EquelE;in0yn;da,mog2Vngrid,rHsEva;abelFiE;do7;!a,e,l0;en0ma;aIeGilE;aEda,laE;ry;ath33i26lenEnriet5;!a,e;nFrE;i21ri21;aBnaB;aMeKiJlHrFwenE;!dolY;acEetch6;e,ie9;adys,enEor1;a,da,na;na,seH;nevieve,orgi0OrE;ald4trude;brielFil,le,yE;le;a,e,le;aKeIlorHrE;ancEe2ie2;es,iE;n0sA;a,en1V;lErn;ic1;tiPy1P;dWile6k5lPmOrMstJtHuGvE;a,elE;yn;gen1la,ni1O;hEta;el;eEh28;lEr;a,e,l0;iEma,nest4;ca,ka,n;ma;a4eIiFl6ma,oiVsa,vE;a,i7;sEzaF;aEe;!beH;anor,nE;!a;iEna;th;aReKiJoE;lHminiqGnPrE;a,e6is,othE;ea,y;ue;ly,or24;anWna;anJbIe,lGnEsir1Z;a,iE;se;a,ia,la,orE;es,is;oraBra;a,na;m1nFphn0rlE;a,en0;a,iE;el08;aYeVhSlOoHrEynth1;isFyE;stal;ti3;lJnsHrEur07;a,inFnE;el1;a,e,n0;tanEuelo;ce,za;e6le6;aEeo;ire,rFudE;etDia;a,i0A;arl0GeFloe,ristE;a,in0;ls0Qryl;cFlE;esDi1D;el1il0Y;itlin,milMndLrIsHtE;ali3hE;er4le6y;in0;a0Usa0U;a,la,meFolE;!e,in0yn;la,n;aViV;e,le;arbVeMiKlKoni5rE;anIen2iEooke;dgFtE;tnC;etE;!te;di;anA;ca;atriLcky,lin2rItFulaBverE;ly;h,tE;e,yE;!e;nEt8;adOiE;ce;ce,z;a7ra;biga0Kd0Egn0Di08lZmVnIrGshlCudrEva;a,ey,i,y;ey,i,y;lEpi5;en0;!a,dNeLgelJiIja,nGtoE;inEn1;etD;!a,eIiE;ka;ka,ta;a,iE;a,ca,n0;!tD;te;je9rE;ea;la;an2bFel1i3y;ia;er;da;ber5exaJiGma,ta,yE;a,sE;a,sa;cFsE;a,ha,on;e,ia;nd7;ra;ta;c8da,le6mFshaB;!h;ee;en;ha;es;a,elGriE;a3en0;na;e,iE;a,n0;a,e;il\";\n\n},{}],222:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"aJblair,cHdevGguadalupe,jBk9l8m5r2sh0trinity;ay,e0iloh;a,lby;e1o0;bin,sario;ag1g1ne;ar1el,org0;an;ion,lo;ashawn,ee;asAe0;ls9nyatta,rry;a1e0;an,ss2;de,ime,m0n;ie,m0;ie;an,on;as0heyenne;ey,sidy;lexis,ndra,ubr0;ey\";\n\n},{}],223:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:1P;1:1Q;161Ta1Fb1Bc12d0Ye0Of0Kg0Hh0Di09june07kwanzaa,l04m00nYoVpRrPsEt8v6w4xm03y2;om 2ule;hasho16kippur;hit2int0Xomens equalit7; 0Ss0T;aGe2ictor1E;r1Bteran0;-1ax 1h6isha bav,rinityNu2; b3rke2;y 1;ish2she2;vat;a0Ye prophets birth1;a6eptember15h4imchat tor0Vt 3u2;kk4mmer U;a9p8s7valentines day ;avu2mini atzeret;ot;int 2mhain;a5p4s3va2;lentine0;tephen0;atrick0;ndrew0;amadan,ememberanc0Yos2;a park0h hashana;a3entecost,reside0Zur2;im,ple heart 1;lm2ssovE; s04;rthodox 2stara;christma0easter2goOhoJn0C;! m07;ational 2ew years09;freedom 1nurse0;a2emorial 1lHoOuharram;bMr2undy thurs1;ch0Hdi gr2tin luther k0B;as;a2itRughnassadh;bour 1g baom2ilat al-qadr;er; 2teenth;soliU;d aJmbolc,n2sra and miraj;augurGd2;ependen2igenous people0;c0Bt0;a3o2;ly satur1;lloween,nukkUrvey mil2;k 1;o3r2;ito de dolores,oundhoW;odW;a4east of 2;our lady of guadalupe,the immaculate concepti2;on;ther0;aster8id 3lectYmancip2piphany;atX;al-3u2;l-f3;ad3f2;itr;ha;! 2;m8s2;un1;ay of the dead,ecemb3i2;a de muertos,eciseisVwali;er sol2;stice;anad8h4inco de mayo,o3yber m2;on1;lumbu0mmonwealth 1rpus christi;anuk4inese n3ristmas2;! N;ew year;ah;a 1ian tha2;nksgiving;astillCeltaine,lack4ox2;in2;g 1; fri1;dvent,ll 9pril fools,rmistic8s6u2;stral4tum2;nal2; equinox;ia 1;cens2h wednes1sumption of mary;ion 1;e 1;hallows 6s2;ai2oul0t0;nt0;s 1;day;eve; de septiembre\";\n\n},{}],224:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:2S;1:38;2:36;3:2B;4:2W;5:2Y;a38b2Zc2Ld2Be28f23g1Yh1Ni1Ij1Ck15l0Xm0Ln0Ho0Ep04rXsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Roshi1Iun;ma6ng;da,guc1Xmo24sh1ZzaQ;iao,u;a7eb0il6o4right,u;li39s2;gn0lk0ng,tanabe;a6ivaldi;ssilj35zqu1;a9h8i2Do7r6sui,urn0;an,ynisI;lst0Nrr2Sth;at1Romps2;kah0Tnaka,ylor;aDchCeBhimizu,iAmi9o8t7u6zabo;ar1lliv27zuD;al21ein0;sa,u4;rn3th;lva,mmo22ngh;mjon3rrano;midt,neid0ulz;ito,n7sa6to;ki;ch1dKtos,z;amBeag1Xi9o7u6;bio,iz,s2L;b6dri1KgHj0Sme22osevelt,sZux;erts,ins2;c6ve0E;ci,hards2;ir1os;aDe9h7ic6ow1Z;as2Ehl0;a6illips;m,n1S;ders5et8r7t6;e0Or3;ez,ry;ers;h20rk0t6vl3;el,te0K;baBg0Blivei01r6;t6w1O;ega,iz;a6eils2guy5ix2owak,ym1D;gy,ka6var1J;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Cssolini,ñ6;oz;lina,oKr6zart;al1Me6r0T;au,no;hhail3ll0;rci0s6y0;si;eWmmad3r6tsu08;in6tin1;!o;aCe8i6op1uo;!n6u;coln,dholm;e,fe7n0Pr6w0I;oy;bv6v6;re;rs5u;aBennedy,imuAle0Ko8u7wo6;k,n;mar,znets3;bay6vacs;asY;ra;hn,rl9to,ur,zl3;aAen9ha4imen1o6u4;h6n0Yu4;an6ns2;ss2;ki0Ds5;cks2nsse0C;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aCe9it8o7u6;!a4b0gh0Nynh;a4ffmann,rvat;chcock,l0;mingw7nde6rL;rs2;ay;ns5rrOs7y6;asCes;an3hi6;moH;a8il,o7rub0u6;o,tierr1;m1nzal1;nd6o,rcia;hi;er9is8lor08o7uj6;ita;st0urni0;ch0;nand1;d7insteHsposi6vaL;to;is2wards;aCeBi9omin8u6;bo6rand;is;gu1;az,mitr3;ov;lgado,vi;rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0x;em7li6;ns;an;!e;an8e7iu,o6ristens5u4we;i,ng,u4w,y;!n,on6u4;!g;mpb8rt0st6;ro;er;ell;aBe8ha4lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h7iley,rn6;es;k,ng;dEl9nd6;ers6rB;en,on,s2;on;eks8iy9on7var1;ez;so;ej6;ev;ams\";\n\n},{}],225:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:A9;1:9J;2:A0;3:9R;4:94;5:7W;6:9C;7:9X;a94b8Ic7Pd6Ve67f5Sg5Dh4Ui4Kj3Ok3Gl30m22n1To1Op1Fqu1Er0Us0BtVusm0vSwIxavi3yAz8;a8or0;cha4Zh1B;ass2i,oAu8;sBu8;ma,to;nBsAus8;o8s9;uf;ef;at0g;aFeEi9o8;lfga02odrow;l8n13;bAfr9Gl8s1;a8Ei8;am2Ne,s;e6Vur;i,nde7Xsl8A;de,l8rr7y6;la5t3;an5ern1i8;c8ha0nce2Trg7Qva0;ente,t4F;aMeHhGimFoBr9y8;!l3ro6s1;av6Le8oy;nt,v4B;bAdd,m8ny;!as,m8oharu;a91ie,y;i6Ty;!my,othy;eodo0Kia67om6R;dBr8;en5r8;an5e8y;ll,n5;!dy;ic82req,ts3Jyl3Z;aKcottJeIhFiEoCpenc3t8ur1Cylve74zym1;anAe8ua67;f0ph8Mrli8ve4Ewa66;ng;!islaw,l7K;lom1u8;leyma6ta;dn7Hm1;a9e8;ld1rm0;hZne,qu0Eun,wn;an,basti0k1Kl3Erg3Dth;!y;lBmAnt8q3Vul;i8os;a5Lno;!m7Hu4;ik,va8;d3GtoV;aNeJicHoBu9y8;an,ou;b7d8f64ssel5U;ol2Cy;an,bCcky,dBel,geAh0land8Cm0n5Aosevelt,ry,s9y8;!ce;coe,s;l2Yr;e40g3n6Xo8Eri59;b7Ge86;ar4Uc4Tha6Wk8;!ey,y;g9ub7x,y8za;ansh,nal4R;g7Bi8;na77s;chAfa4l1Zm9nd8pha4ul,y55;al5Fol1Y;i7Won;id;ent2int1;aFeBhilAier9ol,re8;st1;re;!ip,lip;d7PrAt8;ar,e8;!r;cy,ry;bIt3Ful;liv3m7IrAs9t8um76w7;is,to;ama,c74;i,l3Kv8;il4E;athanFeEiAo8;a8el,l0ma0r2D;h,m;cAi9k8;h5Mola;lo;hol4Wk,ol4W;al,d,il,ls1;!i4;aRePiHoCu8yr1;hamAr9sta8;fa,pha;ad,ray;ed,mC;dibo,e,hamAnt9rr4Bs8ussa;es,he;e,y;ad,ed,m8;ad,ed;cCgu4kAl9n8tche5A;a5Wik;an,os,t1;e,ol8;aj;ah,h8k5I;a4e8;al,l;h8lv2r3M;di,met;ck,hIlHmJnu4rDs1t9uri5x8;!imilian6N;eo,h9i47t8;!eo,hew,ia;e8is;us,w;cAio,k6Il9sha4Ut8v2;i1Yy;in,on;!el,oFus;colm,ik;am8di,moud;ad8;ou;aJeGiFl27oBu8y36;c3Uis,k8th3;a8e;!s;g0nn5FrenAu8we4I;!i8;e,s;!zo;am,on4;evi,i,la3Wo8roy,st3vi,w39;!n8;!a4V;m9n5r0Wu8w8;ren5;ar,o8;nt;aDe9haled,ir8rist3Yu33y2Q;k,ollos;i0Slv2n8rmit,v2;!d9n8t;e0Qy;a41ri3R;na4Yr8them;im,l;aVeOiMoAu8;an,li8ni0Kst2;an,o,us;aqu2eHhnGnDrBs8;e9h8;!ua;!ph;d8ge;an,i;!a8;s,th8;an,on;!ath0n48;!l,s8y;ph;an,e,m8;!m44;ffCr9s8;s0Sus;a49em9mai6o8ry;me,ni0E;i5Gy;!eYr8;ey,y;cDd7kCmBrAs9vi3y8;!d7;on,p3;ed,r1D;al,es;e,ob,ub;k8ob;!s1;an,brahGchika,gEk3lija,nuDrBsAt8v0;ai,s8;uki;aac,ha0ma4;a,vin8;!g;k,nngu3V;nac8or;io;im;aHeCina3QoAu8yd40;be1Og8mber3EsA;h,o;m3ra5s8wa33;se2;aBctAitAn9r8;be1Jm0;ry;or;th;bFlEmza,ns,o,r9s8ya35;an,s0;lBo3ArAu8v2T;hi32ki,t8;a,o;is1y;an,ey;!im;ib;aIeFilbe3WlenEord1rAu8;iller8stavo;mo;aAeg8ov3;!g,or8;io,y;dy,h41nt;!n;ne,o9ra8;ld,rd3O;ffr2Crge;brielAr8;la1Gr8y;eWy;!e;aLeIiGlForr09r8;anAed8;!d2Ee8ri1I;ri1H;c9k8;!ie,l2;esco,is8;!co,zek;oyd;d4l8;ip;li9ng,rn8;anU;pe,x;bi0di;arTdOfra2it0lKmDnCr9steb0th0uge6v8ym7;an,ereE;gi,i9n8v2w2;est30ie;cZk;rique,zo;aDiAm8;aCe8;tt;l9r8;!h0;!io;nu4;beZd1iAli9m3t1v2wo8;od;ot19s;!as,j32;!d1Vg26mBu9w8;a1Bin;ar8;do;o0Du0D;l,n8;est;aPeHieGoArag0u9w8yl0;ay6ight;a6st2;minBnAug9y8;le;!lV;!a1Fn1I;go,ic8;!k;go;an,j0lbeEmetriVnCrBsAv9w8xt3;ay6ey;en,in;moX;ek,ri03;is,n8;is;rt;lHmGnFrAv8;e,i8;!d;iBne06r8w2yl;e8in,yl;l8n;!l;n,us;!e,i4ny;i1Don;e,l8;as;aVeThMlCo9raig,urt8;!is;dy,l2nrad,r8;ey,neli8y;us;aCevelaBi8yE;f9nt8;!on;fo03t1;nd;rAu9y8;!t1;de;en5k;ce;aCeBris9u8;ck;!t8;i0oph3;st3;d,rl8se;es,ie;c8dric,s0J;il;lBmer1r8;ey,l9ro8t3;ll;!os,t1;eb,v2;arSeMilLlaKobJr9u8yr1;ddy,rt1;aDeAi0u9y8;anAce,on;ce,no;n9t8;!t;d0t;d8nd1;!fo9l8y;ey;rd;!by;i6ke;al,lC;nAr8shoi;at,na8t;rd0B;!i9jam2n8;ie,y;to;ry,t;ar0Mb0Ed0Bgu09hme08id7jani,lRmPnIputsiHr9sa8u09ya0ziz;hi;aEchDi4jun,maBn9on,t8y0;hur,u01;av,o8;ld;an,nd00;el;ie;ta;aq;dCgelVt8;hony,o8;i6n8;!iS;ne;re8y;!a,s,w;ir,m8os;ar;!an,beLeFfCi,lBonAt1v8;aJin;on;so,zo;an,en;on9r8;edG;so;jBksandAssBx8;!and3is;er;ar,er;and8;ro;rt8;!o;en;d,t;st2;in;am9o8ri0vik;lfo;!a;dAel,rah9u8;!bakr,lfazl;am;allBel,oulaye,ul8;l9rahm0;an;ah,o;ah;av,on\";\n\n},{}],226:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"ad hominPbKcJdGeEfCgBh8kittNlunchDn7othersDp5roomQs3t0us dollarQ;h0ragedM;ereOing0;!sA;tu0uper bowlMystL;dAffL;a0roblJurpo4;rtJt8;othGumbA;ead startHo0;meGu0;seF;laci6odErand slamE;l oz0riendDundB;!es;conom8ggBnerg8v0xamp7;entA;eath9inn1o0;gg5or8;er7;anar3eil4it3ottage6redit card6;ank3o0reakfast5;d1tt0;le3;ies,y;ing1;em0;!s\";\n\n},{}],227:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:2Q;1:20;2:2I;a2Db24c1Ad11e0Uf0Tg0Qh0Kin0Djourn1l07mWnewsVoTpLquartet,rIs7t5u3worke1K;ni3tilG;on,vA;ele3im2Oribun1v;communica1Jgraph,vi1L;av0Hchool,eBo8t4ubcommitt1Ny3;ndic0Pstems;a3ockV;nda22te 3;poli2univ3;ersi27;ci3ns;al club,et3;e,y;cur3rvice0;iti2C;adio,e3;gionRs3;er19ourc29tauraX;artners9e7harmac6izza,lc,o4r3;ess,oduc13;l3st,wer;i2ytechnic;a0Jeutical0;ople's par1Ttrol3;!eum;!hip;bservLffi2il,ptic1r3;chestra,ganiza22;! servi2;a9e7i5o4use3;e,um;bi10tor0;lita1Bnist3;e08ry;dia,mori1rcantile3; exchange;ch1Ogazi5nage06r3;i4ket3;i0Cs;ne;ab6i5oc3;al 3;aIheaH;beration ar1Fmited;or3s;ato0Y;c,dustri1Gs6ter5vest3;me3o08;nt0;nation1sI;titut3u14;!e3;! of technoloIs;e5o3;ld3sp0Itel0;ings;a3ra6;lth a3;uth0T;a4ir09overnJroup,ui3;ld;s,zet0P;acul0Qede12inanci1m,ounda13und;duca12gli0Blectric8n5s4t3veningH;at;ta0L;er4semb01ter3;prise0tainB;gy;!i0J;a9e4i3rilliG;rectora0FviP;part3sign,velop6;e5ment3;! sto3s;re;ment;ily3ta; news;aSentQhNircus,lLo3rew;!ali0LffJlleHm9n4rp3unc7;o0Js;fe6s3taine9;e4ulti3;ng;il;de0Eren2;m5p3;any,rehensiAute3;rs;i5uni3;ca3ty;tions;s3tt6;si08;cti3ge;ve;ee;ini3ub;c,qK;emica4oir,ronic3urch;le;ls;er,r3;al bank,e;fe,is5p3re,thedr1;it1;al;se;an9o7r4u3;ilding socieEreau;ands,ewe4other3;hood,s;ry;a3ys;rd;k,q3;ue;dministIgencFirDrCss7ut3viaJ;h4ori3;te;ori3;ty;oc5u3;ran2;ce;!iat3;es,iB;my;craft,l3ways;in4;e0i3y;es;!s;ra3;ti3;on\";\n\n},{}],228:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:43;a38b2Pc29d21e1Yf1Ug1Mh1Hi1Ej1Ak18l14m0Tn0Go0Dp07qu06rZsStFuBv8w3y1;a1m0Youtu2Rw0Y;hoo!,maha;a3e1orld trade organizati3Y;lls fargo,st1;fie22inghou17;l1rner br3A;-m12gree2Zl street journ24m12;an halNeriz3Tisa,o1;dafo2Fl1;kswagLvo;2,bs,n2ps,s1;a tod2Pps;es32i1;lev2Vted natio2S; mobi2Iaco bePd bMeAgi frida9h3im horto2Rmz,o1witt2U;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen30daily ma2Uguess w2holli0rolling st1Ms1w2;mashing pumpki2Muprem0;ho;ea1lack eyed pe3Cyrds;ch bo1tl0;ys;l2s1;co,la m13;efoni08us;a6e4ieme2Eo2pice gir5ta1ubaru;rbucks,to2K;ny,undgard1;en;a2Ox pisto1;ls;few23insbu24msu1V;.e.m.,adiohead,b6e3oyal 1yan2U;b1dutch she4;ank;/max,aders dige1Dd 1vl2Z;bu1c1Shot chili peppe2Hlobst26;ll;c,s;ant2Sizno2C;an5bs,e3fiz22hilip morrBi2r1;emier24octer & gamb1Pudenti13;nk floyd,zza hut;psi25tro1uge09;br2Nchina,n2N; 2ason1Vda2D;ld navy,pec,range juli2xf1;am;us;aAb9e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0K;l,s;stl3tflix,w1; 1sweek;kids on the block,york09;e,é;a,c;nd1Qs2t1;ional aca2Bo,we0O;a,cYd0M;aAcdonald9e5i3lb,o1tv,yspace;b1Jnsanto,ody blu0t1;ley crue,or0M;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt10z1U;'ore07a3e1g,ittle caesa1G;novo,x1;is,mark; pres5-z-boy;atv,fc,kk,m1od1G;art;iffy lu0Io3pmorgan1sa;! cha1;se;hnson & johns1Oy d1N;bm,hop,n1tv;g,te1;l,rpol; & m,asbro,ewlett-packaRi3o1sbc,yundai;me dep1n1F;ot;tac1zbollah;hi;eneral 6hq,l5o2reen d0Fu1;cci,ns n ros0;ldman sachs,o1;dye1g08;ar;axo smith kliXencore;electr0Fm1;oto0R;a3bi,da,edex,i1leetwood mac,oErito-l07;at,nancial1restoT; tim0;cebook,nnie mae;b03sa,u,xxon1; m1m1;ob0D;aiml08e5isney,o3u1;nkin donuts,po0Tran dur1;an;j,w j1;on0;a,f leppa2ll,peche mode,r spiegXstiny's chi1;ld;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1;al;ca c5l4m1o08st03;ca2p1;aq;st;dplLgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Fy;dbury,pital o1rl's jr;ne;aFbc,eBf9l5mw,ni,o1p;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roW;ckbuster video,omingda1;le; g1g1;oodriM;cht3e ge0n & jer2rkshire hathaw1;ay;ryG;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bWcRdidQerosmith,ig,lKmEnheuser-busDol,pple9r6s3t&t,v2y1;er;is,on;hland1sociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c\";\n\n},{}],229:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:71;1:6P;2:7D;3:73;4:6I;5:7G;6:75;7:6O;8:6B;9:6C;A:5H;B:70;C:6Z;a7Gb62c5Cd59e57f45g3Nh37iron0j33k2Yl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit52;d 1k2Q;mp0n49pe0r8s8;eel Bip 7K;aEiD;gh 06rd0;n Br 3C;it 5Jk8lk6rm 0Qsh 73t66v4O;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Fup;ade YiDot0y 32;ckle67p 79;ne66p Ds4C;d2o6Kup;ck FdEe Dgh5Sme0p o0Dre0;aw3ba4d2in,up;e5Jy 1;by,o6U;ink Drow 5U;ba4ov7up;aDe 4Hll4N;m 1r W;ckCke Elk D;ov7u4N;aDba4d2in,o30up;ba4ft7p4Sw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6O; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1LiD;ke 5Xn2X;p Drm1O;by,in,o6A;r 1tc3H;c2Xmp0nd Dr6Gve6y 1;ba4d2up;d2o66up;ar2Uell0ill4TlErDurC;ingCuc8;a32it 3T;be4Brt0;ap 4Dow B;ash 4Yoke0;eep EiDow 9;c3Mp 1;in,oD;ff,v7;gn Eng2Yt Dz8;d2o5up;in,o5up;aFoDu4E;ot Dut0w 5W;aw3ba4f36o5Q;c2EdeAk4Rve6;e Hll0nd GtD; Dtl42;d2in,o5upD;!on;aw3ba4d2in,o1Xup;o5to;al4Kout0rap4K;il6v8;at0eKiJoGuD;b 4Dle0n Dstl8;aDba4d2in52o3Ft2Zu3D;c1Ww3;ot EuD;g2Jnd6;a1Wf2Qo5;ng 4Np6;aDel6inAnt0;c4Xd D;o2Su0C;aQePiOlMoKrHsyc29uD;ll Ft D;aDba4d2in,o1Gt33up;p38w3;ap37d2in,o5t31up;attleCess EiGoD;p 1;ah1Gon;iDp 52re3Lur44wer 52;nt0;ay3YuD;gAmp 9;ck 52g0leCn 9p3V;el 46ncilA;c3Oir 2Hn0ss FtEy D;ba4o4Q; d2c1X;aw3ba4o11;pDw3J;e3It B;arrow3Serd0oD;d6te3R;aJeHiGoEuD;ddl8ll36;c16p 1uth6ve D;al3Ad2in,o5up;ss0x 1;asur8lt 9ss D;a19up;ke Dn 9r2Zs1Kx0;do,o3Xup;aOeMiHoDuck0;a16c36g 0AoDse0;k Dse34;aft7ba4d2forw2Ain3Vov7uD;nd7p;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fr Dt 1;fDof;rom;in,oO;cZm 1nDve it;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut\";\n\n},{}],230:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"'o,-,aLbIcHdGexcept,from,inFmidQnotwithstandiRoDpSqua,sCt7u4v2w0;/o,hereNith0;!in,oR;ersus,i0;a,s-a-vis;n1p0;!on;like,til;h1ill,o0;!wards;an,r0;ough0u;!oH;ans,ince,o that;',f0n1ut;!f;!to;espite,own,u3;hez,irca;ar1e0y;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\";\n\n},{}],231:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"aLbIcHdEengineKfCgBhAinstructRjournalNlawyKm9nurse,o8p5r3s1t0;echnEherapM;ailPcientLecretary,oldiIu0;pervMrgeon;e0oofG;ceptionIsearE;hotographElumbEoli1r0sychologH;actitionDesideMogrammD;cem8t7;fficBpeH;echanic,inistAus5;airdress9ousekeep9;arden8uard;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\";\n\n},{}],232:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:24;1:1T;2:1U;725a1Rb1Ec10d0Rfc dallas,g0Ohouston 0Nindiana0Mjacksonville jagua0k0Jl0Gm03newWoSpLqueens parkKrJsAt5utah jazz,vancouver whitecaps,w3yZ;ashington 3est ham0Yh17;natio21redski1wizar13;ampa bay 6e5o3;ronto 3ttenham hotspur;blu1Irapto0;nnessee tita1xasE;buccanee0ra1H;a7eattle 5heffield0Rporting kansas14t3;. louis 3oke13;c1Srams;mari03s3;eah1IounJ;cramento Tn 3;antonio spu0diego 4francisco 3jose earthquak2;49e0gi0B;char0EpaB;eal salt lake,o04; ran0C;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat2steele0;il3oenix su1;adelphia 3li2;71Heagl2philNunE;dr2;akland 4klahoma city thunder,r3;i0Zlando magic;athle0Trai3;de0; 3castle05;england 6orleans 5york 3;city fc,giUje0Lkn02me0Lred bul18y3;anke2;pelica1sain0J;patrio0Irevolut3;ion;aBe9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Qvi3;kings;imberwolv2wi1;re0Cuc0V;dolphi1heat,marli1;mphis grizz3ts;li2;nchester 5r3vN;i3li1;ne0;c00u0G;a4eicesterYos angeles 3;clippe0dodFlaA; galaxy,ke0;ansas city 3nH;chiefs,ro3;ya0L; pace0polis colX;astr0Ddynamo,rockeWtexa1;i4olden state warrio0reen bay pac3;ke0;anT;.c.Aallas 7e3i0Bod5;nver 5troit 3;lio1pisto1ti3;ge0;bronc05nuggeO;cowboUmav3;er3;ic05; uW;arCelNh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki2;brow1cavalie0india1;benga02re3;ds;arlotte horCicago 3;b4cubs,fire,wh3;iteE;ea0ulX;di3olina panthe0;ff3naV; c3;ity;altimore DlAoston 7r3uffalo bilS;av2e5ooklyn 3;ne3;ts;we0;cel4red3; sox;tics;ackburn rove0u3;e ja3;ys;ori3rave1;ol2;rizona Ast8tlanta 3;brav2falco1h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls;6e0;rs\";\n\n},{}],233:[function(_dereq_,module,exports){\n\"use strict\";\n\nmodule.exports = \"0:1I;a1Nb1Hc18e11f0Ug0Qh0Ki0Hj0Gk0El09m00nZoYpSrPsCt8vi7w1;a5ea0Ci4o1;o2rld1;! seJ;d,l;ldlife,ne;rmth,t0;neg7ol0C;e3hund0ime,oothpaste,r1una;affTou1;ble,sers,t;a,nnis;aBceWeAh9il8now,o7p4te3u1;g1nshi0Q;ar;am,el;ace2e1;ciPed;!c16;ap,cc0ft0E;k,v0;eep,opp0T;riK;d0Afe0Jl1nd;m0Vt;aQe1i10;c1laxa0Hsearch;ogni0Grea0G;a5e3hys0JlastAo2r1;ess02ogre05;rk,w0;a1pp0trol;ce,nT;p0tiM;il,xygen;ews,oi0G;a7ea5i4o3u1;mps,s1;ic;nJo0C;lk,st;sl1t;es;chi1il,themat04;neF;aught0e3i2u1;ck,g0B;ghtn03quid,teratK;a1isJ;th0;elv1nowled08;in;ewel7usti09;ce,mp1nformaQtself;ati1ortan07;en06;a4ertz,isto3o1;ck1mework,n1spitaliL;ey;ry;ir,lib1ppi9;ut;o2r1um,ymnastL;a7ound;l1ssip;d,f;ahrenhe6i5lour,o2ru6urnit1;ure;od,rgive1wl;ne1;ss;c8sh;it;conomAduca6lectrici5n3quip4thAvery1;body,o1thC;ne;joy1tertain1;ment;ty;tiC;a8elcius,h4iv3loth6o1urrency;al,ffee,n1ttA;duct,fusi9;ics;aos,e1;e2w1;ing;se;ke,sh;a3eef,is2lood,read,utt0;er;on;g1ss;ga1;ge;dvi2irc1rt;raft;ce\";\n\n},{}],234:[function(_dereq_,module,exports){\n(function (global){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* efrt trie-compression v0.0.3  github.com/nlp-compromise/efrt  - MIT */\n(function (f) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }g.unpack = f();\n  }\n})(function () {\n  var define, module, exports;return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof _dereq_ == \"function\" && _dereq_;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n        }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }return n[o].exports;\n    }var i = typeof _dereq_ == \"function\" && _dereq_;for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }return s;\n  }({ 1: [function (_dereq_, module, exports) {\n      'use strict';\n\n      module.exports = {\n        NODE_SEP: ';',\n        STRING_SEP: ',',\n        TERMINAL_PREFIX: '!',\n        //characters banned from entering the trie\n        NOT_ALLOWED: new RegExp('[0-9A-Z,;!]'),\n        BASE: 36\n      };\n    }, {}], 2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var config = _dereq_('./config');\n\n      var seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      var cache = seq.split('').reduce(function (h, c, i) {\n        h[c] = i;\n        return h;\n      }, {});\n      // console.log(cache);\n\n      // 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\n      var toAlphaCode = function toAlphaCode(n) {\n        if (seq[n] !== undefined) {\n          return seq[n];\n        }\n        var places = 1;\n        var range = config.BASE;\n        var s = '';\n\n        for (; n >= range; n -= range, places++, range *= config.BASE) {}\n        while (places--) {\n          var d = n % config.BASE;\n          s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s;\n          n = (n - d) / config.BASE;\n        }\n        return s;\n      };\n\n      var fromAlphaCode = function fromAlphaCode(s) {\n        if (cache[s] !== undefined) {\n          return cache[s];\n        }\n        var n = 0;\n        var places = 1;\n        var range = config.BASE;\n        var pow = 1;\n\n        for (; places < s.length; n += range, places++, range *= config.BASE) {}\n        for (var i = s.length - 1; i >= 0; i--, pow *= config.BASE) {\n          var d = s.charCodeAt(i) - 48;\n          if (d > 10) {\n            d -= 7;\n          }\n          n += d * pow;\n        }\n        return n;\n      };\n\n      /* Sort elements and remove duplicates from array (modified in place) */\n      var unique = function unique(a) {\n        a.sort();\n        for (var i = 1; i < a.length; i++) {\n          if (a[i - 1] === a[i]) {\n            a.splice(i, 1);\n          }\n        }\n      };\n\n      var commonPrefix = function commonPrefix(w1, w2) {\n        var len = Math.min(w1.length, w2.length);\n        while (len > 0) {\n          var prefix = w1.slice(0, len);\n          if (prefix === w2.slice(0, len)) {\n            return prefix;\n          }\n          len -= 1;\n        }\n        return '';\n      };\n\n      module.exports = {\n        toAlphaCode: toAlphaCode,\n        fromAlphaCode: fromAlphaCode,\n        unique: unique,\n        commonPrefix: commonPrefix\n      };\n\n      // let out = fromAlphaCode('A');\n      // console.log(out);\n      // console.log(fromAlphaCode(out));\n      // console.log(fromAlphaCode('R'));\n    }, { \"./config\": 1 }], 3: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var Ptrie = _dereq_('./ptrie');\n      // const Ptrie = require('./ptrie_old');\n\n      var unpack = function unpack(str) {\n        return new Ptrie(str);\n      };\n      module.exports = unpack;\n    }, { \"./ptrie\": 5 }], 4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      //are we on the right path with this string?\n\n      var isPrefix = function isPrefix(str, want) {\n        //allow perfect equals\n        if (str === want) {\n          return true;\n        }\n        //compare lengths\n        var len = str.length;\n        if (len >= want.length) {\n          return false;\n        }\n        //quick slice\n        if (len === 1) {\n          return str === want[0];\n        }\n        return want.slice(0, len) === str;\n      };\n      module.exports = isPrefix;\n      // console.log(isPrefix('harvar', 'harvard'));\n    }, {}], 5: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var config = _dereq_('../config');\n      var fns = _dereq_('../fns');\n      var isPrefix = _dereq_('./prefix');\n      var unravel = _dereq_('./unravel');\n\n      //PackedTrie - Trie traversal of the Trie packed-string representation.\n\n      var PackedTrie = function () {\n        function PackedTrie(str) {\n          _classCallCheck(this, PackedTrie);\n\n          this.nodes = str.split(config.NODE_SEP); //that's all ;)!\n          this.syms = [];\n          this.symCount = 0;\n          this._cache = null;\n          //process symbols, if they have them\n          if (str.match(':')) {\n            this.initSymbols();\n          }\n        }\n\n        //the symbols are at the top of the array.\n\n\n        _createClass(PackedTrie, [{\n          key: 'initSymbols',\n          value: function initSymbols() {\n            //... process these lines\n            var reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)');\n            for (var i = 0; i < this.nodes.length; i++) {\n              var m = reSymbol.exec(this.nodes[i]);\n              if (!m) {\n                this.symCount = i;\n                break;\n              }\n              this.syms[fns.fromAlphaCode(m[1])] = fns.fromAlphaCode(m[2]);\n            }\n            //remove from main node list\n            this.nodes = this.nodes.slice(this.symCount, this.nodes.length);\n          }\n\n          // Return largest matching string in the dictionary (or '')\n\n        }, {\n          key: 'has',\n          value: function has(want) {\n            var _this = this;\n\n            // console.log(this.nodes);\n            //fail-fast\n            if (!want) {\n              return false;\n            }\n            //then, try cache-lookup\n            if (this._cache) {\n              return this._cache[want] || false;\n            }\n            var crawl = function crawl(index, prefix) {\n              var node = _this.nodes[index];\n              //the '!' means a prefix-alone is a good match\n              if (node[0] === '!') {\n                //try to match the prefix (the last branch)\n                if (prefix === want) {\n                  return true;\n                }\n                node = node.slice(1); //ok, we tried. remove it.\n              }\n              //each possible match on this line is something like 'me,me2,me4'.\n              //try each one\n              var matches = node.split(/([A-Z0-9,]+)/g);\n              for (var i = 0; i < matches.length; i += 2) {\n                var str = matches[i];\n                var ref = matches[i + 1];\n                if (!str) {\n                  continue;\n                }\n                var have = prefix + str;\n                //we're at the branch's end, so try to match it\n                if (ref === ',' || ref === undefined) {\n                  if (have === want) {\n                    return true;\n                  }\n                  continue;\n                }\n                //ok, not a match.\n                //well, should we keep going on this branch?\n                //if we do, we ignore all the others here.\n                if (isPrefix(have, want)) {\n                  index = _this.indexFromRef(ref, index);\n                  return crawl(index, have);\n                }\n                //nah, lets try the next branch..\n                continue;\n              }\n\n              return false;\n            };\n            return crawl(0, '');\n          }\n\n          // References are either absolute (symbol) or relative (1 - based)\n\n        }, {\n          key: 'indexFromRef',\n          value: function indexFromRef(ref, index) {\n            var dnode = fns.fromAlphaCode(ref);\n            if (dnode < this.symCount) {\n              return this.syms[dnode];\n            }\n            return index + dnode + 1 - this.symCount;\n          }\n        }, {\n          key: 'toArray',\n          value: function toArray() {\n            if (this._cache) {\n              return Object.keys(this._cache);\n            }\n            return Object.keys(unravel(this));\n          }\n        }, {\n          key: 'cache',\n          value: function cache() {\n            this._cache = unravel(this);\n            this.nodes = null;\n            this.syms = null;\n          }\n        }]);\n\n        return PackedTrie;\n      }();\n\n      module.exports = PackedTrie;\n    }, { \"../config\": 1, \"../fns\": 2, \"./prefix\": 4, \"./unravel\": 6 }], 6: [function (_dereq_, module, exports) {\n      'use strict';\n\n      //spin-out all words from this trie\n\n      var unRavel = function unRavel(trie) {\n        var all = {};\n        var crawl = function crawl(index, prefix) {\n          var node = trie.nodes[index];\n          if (node[0] === '!') {\n            all[prefix] = true;\n            node = node.slice(1); //ok, we tried. remove it.\n          }\n          var matches = node.split(/([A-Z0-9,]+)/g);\n          for (var i = 0; i < matches.length; i += 2) {\n            var str = matches[i];\n            var ref = matches[i + 1];\n            if (!str) {\n              continue;\n            }\n\n            var have = prefix + str;\n            //branch's end\n            if (ref === ',' || ref === undefined) {\n              all[have] = true;\n              continue;\n            }\n            var newIndex = trie.indexFromRef(ref, index);\n            crawl(newIndex, have);\n          }\n        };\n        crawl(0, '');\n        return all;\n      };\n      module.exports = unRavel;\n    }, {}] }, {}, [3])(3);\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],235:[function(_dereq_,module,exports){\n'use strict';\n//to change these packed files, edit ./data then run `node scripts/pack.js`\n\nvar unpack = _dereq_('./efrt-unpack');\nvar path = './_packed/_';\nvar tags = {\n  Adjective: _dereq_('./_packed/_adjectives'),\n  Adverb: _dereq_('./_packed/_adverbs'),\n  Place: _dereq_('./_packed/_airports'),\n  City: _dereq_('./_packed/_cities'),\n  Country: _dereq_('./_packed/_countries'),\n  Demonym: _dereq_('./_packed/_demonyms'),\n  Expression: _dereq_('./_packed/_expressions'),\n  FemaleName: _dereq_('./_packed/_female'),\n  FirstName: _dereq_('./_packed/_firstnames'),\n  Holiday: _dereq_('./_packed/_holidays'),\n  LastName: _dereq_('./_packed/_lastnames'),\n  MaleName: _dereq_('./_packed/_male'),\n  Noun: _dereq_('./_packed/_nouns'),\n  Organization: _dereq_('./_packed/_organizations'),\n  SportsTeam: _dereq_('./_packed/_sportsTeams'),\n  Actor: _dereq_('./_packed/_professions'),\n  Preposition: _dereq_('./_packed/_prepositions')\n};\n\nvar utils = {\n  orgWords: _dereq_('./_packed/_orgWords'),\n  uncountable: _dereq_('./_packed/_uncountables'),\n  phrasals: _dereq_('./_packed/_phrasals')\n};\n\n// console.time('trie-unpack');\n//turn these compressed strings into queryable tries (using `nlp-compromise/efrt` library)\nvar keys = Object.keys(tags);\nkeys.forEach(function (tag) {\n  tags[tag] = unpack(tags[tag]);\n  tags[tag].cache();\n});\nObject.keys(utils).forEach(function (k) {\n  utils[k] = unpack(utils[k]);\n  utils[k].cache();\n});\n// console.timeEnd('trie-unpack');\n\nvar lookup = function lookup(str) {\n  //other ones\n  if (utils.uncountable.has(str)) {\n    return 'Noun';\n  }\n  if (utils.orgWords.has(str)) {\n    return 'Noun';\n  }\n  for (var i = 0; i < keys.length; i++) {\n    if (tags[keys[i]].has(str)) {\n      return keys[i];\n    }\n  }\n  return null;\n};\n\n//same as regular lookup, but if we know it's two-words\nvar lookupMulti = function lookupMulti(str) {\n  var single = {\n    'Adjective': true,\n    'Place': true,\n    'Demonyms': true,\n    'FemaleName': true,\n    'LastName': true,\n    'MaleName': true,\n    'Professions': true\n  };\n  if (utils.orgWords.has(str)) {\n    return 'Noun';\n  }\n  for (var i = 0; i < keys.length; i++) {\n    if (single[keys[i]]) {\n      continue;\n    }\n    if (tags[keys[i]].has(str)) {\n      return keys[i];\n    }\n  }\n  return null;\n};\n\nmodule.exports = {\n  lookup: lookup,\n  utils: utils,\n  lookupMulti: lookupMulti\n};\n// console.time('trie-query');\n// console.log(lookup('aloof'));\n// console.timeEnd('trie-query');\n// console.log(lookup('taipei'));\n// console.log(lookup('gerald'));\n// console.log(lookup('mexico'));\n\n},{\"./_packed/_adjectives\":214,\"./_packed/_adverbs\":215,\"./_packed/_airports\":216,\"./_packed/_cities\":217,\"./_packed/_countries\":218,\"./_packed/_demonyms\":219,\"./_packed/_expressions\":220,\"./_packed/_female\":221,\"./_packed/_firstnames\":222,\"./_packed/_holidays\":223,\"./_packed/_lastnames\":224,\"./_packed/_male\":225,\"./_packed/_nouns\":226,\"./_packed/_orgWords\":227,\"./_packed/_organizations\":228,\"./_packed/_phrasals\":229,\"./_packed/_prepositions\":230,\"./_packed/_professions\":231,\"./_packed/_sportsTeams\":232,\"./_packed/_uncountables\":233,\"./efrt-unpack\":234}]},{},[22])(22)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/compromise/builds/compromise.js\n// module id = 1\n// module chunks = 0","(function() {\n  var afinnWordList, analyseSentence, doesWordExist, fs, getScoreOfWord, getWordsInSentence, removeDuplicates, scaleScore;\n\n  \n\n  afinnWordList = JSON.parse(\"\\r\\n{\\r\\n  \\\"abandon\\\": -2,\\r\\n  \\\"abandoned\\\": -2,\\r\\n  \\\"abducted\\\": -2,\\r\\n  \\\"abduction\\\": -2,\\r\\n  \\\"abductions\\\": -2,\\r\\n  \\\"abhor\\\": -3,\\r\\n  \\\"abhorred\\\": -3,\\r\\n  \\\"abhorrent\\\": -3,\\r\\n  \\\"abhors\\\": -3,\\r\\n  \\\"abilities\\\": 2,\\r\\n  \\\"ability\\\": 2,\\r\\n  \\\"aboard\\\": 1,\\r\\n  \\\"absentee\\\": -1,\\r\\n  \\\"absentees\\\": -1,\\r\\n  \\\"absolve\\\": 2,\\r\\n  \\\"absolved\\\": 2,\\r\\n  \\\"absolves\\\": 2,\\r\\n  \\\"absolving\\\": 2,\\r\\n  \\\"absorbed\\\": 1,\\r\\n  \\\"abuse\\\": -3,\\r\\n  \\\"abused\\\": -3,\\r\\n  \\\"abuses\\\": -3,\\r\\n  \\\"abusive\\\": -3,\\r\\n  \\\"accept\\\": 1,\\r\\n  \\\"accepted\\\": 1,\\r\\n  \\\"accepting\\\": 1,\\r\\n  \\\"accepts\\\": 1,\\r\\n  \\\"accident\\\": -2,\\r\\n  \\\"accidental\\\": -2,\\r\\n  \\\"accidentally\\\": -2,\\r\\n  \\\"accidents\\\": -2,\\r\\n  \\\"accomplish\\\": 2,\\r\\n  \\\"accomplished\\\": 2,\\r\\n  \\\"accomplishes\\\": 2,\\r\\n  \\\"accusation\\\": -2,\\r\\n  \\\"accusations\\\": -2,\\r\\n  \\\"accuse\\\": -2,\\r\\n  \\\"accused\\\": -2,\\r\\n  \\\"accuses\\\": -2,\\r\\n  \\\"accusing\\\": -2,\\r\\n  \\\"ache\\\": -2,\\r\\n  \\\"achievable\\\": 1,\\r\\n  \\\"aching\\\": -2,\\r\\n  \\\"acquit\\\": 2,\\r\\n  \\\"acquits\\\": 2,\\r\\n  \\\"acquitted\\\": 2,\\r\\n  \\\"acquitting\\\": 2,\\r\\n  \\\"acrimonious\\\": -3,\\r\\n  \\\"active\\\": 1,\\r\\n  \\\"adequate\\\": 1,\\r\\n  \\\"admire\\\": 3,\\r\\n  \\\"admired\\\": 3,\\r\\n  \\\"admires\\\": 3,\\r\\n  \\\"admiring\\\": 3,\\r\\n  \\\"admit\\\": -1,\\r\\n  \\\"admits\\\": -1,\\r\\n  \\\"admitted\\\": -1,\\r\\n  \\\"admonish\\\": -2,\\r\\n  \\\"admonished\\\": -2,\\r\\n  \\\"adopt\\\": 1,\\r\\n  \\\"adopts\\\": 1,\\r\\n  \\\"adorable\\\": 3,\\r\\n  \\\"adore\\\": 3,\\r\\n  \\\"adored\\\": 3,\\r\\n  \\\"adores\\\": 3,\\r\\n  \\\"advanced\\\": 1,\\r\\n  \\\"advantage\\\": 2,\\r\\n  \\\"advantages\\\": 2,\\r\\n  \\\"adventure\\\": 2,\\r\\n  \\\"adventures\\\": 2,\\r\\n  \\\"adventurous\\\": 2,\\r\\n  \\\"affected\\\": -1,\\r\\n  \\\"affection\\\": 3,\\r\\n  \\\"affectionate\\\": 3,\\r\\n  \\\"afflicted\\\": -1,\\r\\n  \\\"affronted\\\": -1,\\r\\n  \\\"afraid\\\": -2,\\r\\n  \\\"aggravate\\\": -2,\\r\\n  \\\"aggravated\\\": -2,\\r\\n  \\\"aggravates\\\": -2,\\r\\n  \\\"aggravating\\\": -2,\\r\\n  \\\"aggression\\\": -2,\\r\\n  \\\"aggressions\\\": -2,\\r\\n  \\\"aggressive\\\": -2,\\r\\n  \\\"aghast\\\": -2,\\r\\n  \\\"agog\\\": 2,\\r\\n  \\\"agonise\\\": -3,\\r\\n  \\\"agonised\\\": -3,\\r\\n  \\\"agonises\\\": -3,\\r\\n  \\\"agonising\\\": -3,\\r\\n  \\\"agonize\\\": -3,\\r\\n  \\\"agonized\\\": -3,\\r\\n  \\\"agonizes\\\": -3,\\r\\n  \\\"agonizing\\\": -3,\\r\\n  \\\"agree\\\": 1,\\r\\n  \\\"agreeable\\\": 2,\\r\\n  \\\"agreed\\\": 1,\\r\\n  \\\"agreement\\\": 1,\\r\\n  \\\"agrees\\\": 1,\\r\\n  \\\"alarm\\\": -2,\\r\\n  \\\"alarmed\\\": -2,\\r\\n  \\\"alarmist\\\": -2,\\r\\n  \\\"alarmists\\\": -2,\\r\\n  \\\"alas\\\": -1,\\r\\n  \\\"alert\\\": -1,\\r\\n  \\\"alienation\\\": -2,\\r\\n  \\\"alive\\\": 1,\\r\\n  \\\"allergic\\\": -2,\\r\\n  \\\"allow\\\": 1,\\r\\n  \\\"alone\\\": -2,\\r\\n  \\\"amaze\\\": 2,\\r\\n  \\\"amazed\\\": 2,\\r\\n  \\\"amazes\\\": 2,\\r\\n  \\\"amazing\\\": 4,\\r\\n  \\\"ambitious\\\": 2,\\r\\n  \\\"ambivalent\\\": -1,\\r\\n  \\\"amuse\\\": 3,\\r\\n  \\\"amused\\\": 3,\\r\\n  \\\"amusement\\\": 3,\\r\\n  \\\"amusements\\\": 3,\\r\\n  \\\"anger\\\": -3,\\r\\n  \\\"angers\\\": -3,\\r\\n  \\\"angry\\\": -3,\\r\\n  \\\"anguish\\\": -3,\\r\\n  \\\"anguished\\\": -3,\\r\\n  \\\"animosity\\\": -2,\\r\\n  \\\"annoy\\\": -2,\\r\\n  \\\"annoyance\\\": -2,\\r\\n  \\\"annoyed\\\": -2,\\r\\n  \\\"annoying\\\": -2,\\r\\n  \\\"annoys\\\": -2,\\r\\n  \\\"antagonistic\\\": -2,\\r\\n  \\\"anti\\\": -1,\\r\\n  \\\"anticipation\\\": 1,\\r\\n  \\\"anxiety\\\": -2,\\r\\n  \\\"anxious\\\": -2,\\r\\n  \\\"apathetic\\\": -3,\\r\\n  \\\"apathy\\\": -3,\\r\\n  \\\"apeshit\\\": -3,\\r\\n  \\\"apocalyptic\\\": -2,\\r\\n  \\\"apologise\\\": -1,\\r\\n  \\\"apologised\\\": -1,\\r\\n  \\\"apologises\\\": -1,\\r\\n  \\\"apologising\\\": -1,\\r\\n  \\\"apologize\\\": -1,\\r\\n  \\\"apologized\\\": -1,\\r\\n  \\\"apologizes\\\": -1,\\r\\n  \\\"apologizing\\\": -1,\\r\\n  \\\"apology\\\": -1,\\r\\n  \\\"appalled\\\": -2,\\r\\n  \\\"appalling\\\": -2,\\r\\n  \\\"appease\\\": 2,\\r\\n  \\\"appeased\\\": 2,\\r\\n  \\\"appeases\\\": 2,\\r\\n  \\\"appeasing\\\": 2,\\r\\n  \\\"applaud\\\": 2,\\r\\n  \\\"applauded\\\": 2,\\r\\n  \\\"applauding\\\": 2,\\r\\n  \\\"applauds\\\": 2,\\r\\n  \\\"applause\\\": 2,\\r\\n  \\\"appreciate\\\": 2,\\r\\n  \\\"appreciated\\\": 2,\\r\\n  \\\"appreciates\\\": 2,\\r\\n  \\\"appreciating\\\": 2,\\r\\n  \\\"appreciation\\\": 2,\\r\\n  \\\"apprehensive\\\": -2,\\r\\n  \\\"approval\\\": 2,\\r\\n  \\\"approved\\\": 2,\\r\\n  \\\"approves\\\": 2,\\r\\n  \\\"ardent\\\": 1,\\r\\n  \\\"arrest\\\": -2,\\r\\n  \\\"arrested\\\": -3,\\r\\n  \\\"arrests\\\": -2,\\r\\n  \\\"arrogant\\\": -2,\\r\\n  \\\"ashame\\\": -2,\\r\\n  \\\"ashamed\\\": -2,\\r\\n  \\\"ass\\\": -4,\\r\\n  \\\"assassination\\\": -3,\\r\\n  \\\"assassinations\\\": -3,\\r\\n  \\\"asset\\\": 2,\\r\\n  \\\"assets\\\": 2,\\r\\n  \\\"assfucking\\\": -4,\\r\\n  \\\"asshole\\\": -4,\\r\\n  \\\"astonished\\\": 2,\\r\\n  \\\"astound\\\": 3,\\r\\n  \\\"astounded\\\": 3,\\r\\n  \\\"astounding\\\": 3,\\r\\n  \\\"astoundingly\\\": 3,\\r\\n  \\\"astounds\\\": 3,\\r\\n  \\\"attack\\\": -1,\\r\\n  \\\"attacked\\\": -1,\\r\\n  \\\"attacking\\\": -1,\\r\\n  \\\"attacks\\\": -1,\\r\\n  \\\"attract\\\": 1,\\r\\n  \\\"attracted\\\": 1,\\r\\n  \\\"attracting\\\": 2,\\r\\n  \\\"attraction\\\": 2,\\r\\n  \\\"attractions\\\": 2,\\r\\n  \\\"attracts\\\": 1,\\r\\n  \\\"audacious\\\": 3,\\r\\n  \\\"authority\\\": 1,\\r\\n  \\\"avert\\\": -1,\\r\\n  \\\"averted\\\": -1,\\r\\n  \\\"averts\\\": -1,\\r\\n  \\\"avid\\\": 2,\\r\\n  \\\"avoid\\\": -1,\\r\\n  \\\"avoided\\\": -1,\\r\\n  \\\"avoids\\\": -1,\\r\\n  \\\"await\\\": -1,\\r\\n  \\\"awaited\\\": -1,\\r\\n  \\\"awaits\\\": -1,\\r\\n  \\\"award\\\": 3,\\r\\n  \\\"awarded\\\": 3,\\r\\n  \\\"awards\\\": 3,\\r\\n  \\\"awesome\\\": 4,\\r\\n  \\\"awful\\\": -3,\\r\\n  \\\"awkward\\\": -2,\\r\\n  \\\"axe\\\": -1,\\r\\n  \\\"axed\\\": -1,\\r\\n  \\\"abandons\\\": -2,\\r\\n  \\\"backing\\\": 2,\\r\\n  \\\"backs\\\": 1,\\r\\n  \\\"badass\\\": -3,\\r\\n  \\\"badly\\\": -3,\\r\\n  \\\"bailout\\\": -2,\\r\\n  \\\"bamboozle\\\": -2,\\r\\n  \\\"bamboozled\\\": -2,\\r\\n  \\\"bamboozles\\\": -2,\\r\\n  \\\"ban\\\": -2,\\r\\n  \\\"banish\\\": -1,\\r\\n  \\\"bankrupt\\\": -3,\\r\\n  \\\"bankster\\\": -3,\\r\\n  \\\"banned\\\": -2,\\r\\n  \\\"bargain\\\": 2,\\r\\n  \\\"barrier\\\": -2,\\r\\n  \\\"bastard\\\": -5,\\r\\n  \\\"bastards\\\": -5,\\r\\n  \\\"battle\\\": -1,\\r\\n  \\\"battles\\\": -1,\\r\\n  \\\"beaten\\\": -2,\\r\\n  \\\"beatific\\\": 3,\\r\\n  \\\"beating\\\": -1,\\r\\n  \\\"beauties\\\": 3,\\r\\n  \\\"beautiful\\\": 3,\\r\\n  \\\"beautifully\\\": 3,\\r\\n  \\\"beautify\\\": 3,\\r\\n  \\\"belittle\\\": -2,\\r\\n  \\\"belittled\\\": -2,\\r\\n  \\\"beloved\\\": 3,\\r\\n  \\\"benefit\\\": 2,\\r\\n  \\\"benefits\\\": 2,\\r\\n  \\\"benefitted\\\": 2,\\r\\n  \\\"benefitting\\\": 2,\\r\\n  \\\"bereave\\\": -2,\\r\\n  \\\"bereaved\\\": -2,\\r\\n  \\\"bereaves\\\": -2,\\r\\n  \\\"bereaving\\\": -2,\\r\\n  \\\"best\\\": 3,\\r\\n  \\\"betray\\\": -3,\\r\\n  \\\"betrayal\\\": -3,\\r\\n  \\\"betrayed\\\": -3,\\r\\n  \\\"betraying\\\": -3,\\r\\n  \\\"betrays\\\": -3,\\r\\n  \\\"better\\\": 2,\\r\\n  \\\"bias\\\": -1,\\r\\n  \\\"biased\\\": -2,\\r\\n  \\\"big\\\": 1,\\r\\n  \\\"bitch\\\": -5,\\r\\n  \\\"bitches\\\": -5,\\r\\n  \\\"bitter\\\": -2,\\r\\n  \\\"bitterly\\\": -2,\\r\\n  \\\"bizarre\\\": -2,\\r\\n  \\\"blah\\\": -2,\\r\\n  \\\"blame\\\": -2,\\r\\n  \\\"blamed\\\": -2,\\r\\n  \\\"blames\\\": -2,\\r\\n  \\\"blaming\\\": -2,\\r\\n  \\\"bless\\\": 2,\\r\\n  \\\"blesses\\\": 2,\\r\\n  \\\"blessing\\\": 3,\\r\\n  \\\"blind\\\": -1,\\r\\n  \\\"bliss\\\": 3,\\r\\n  \\\"blissful\\\": 3,\\r\\n  \\\"blithe\\\": 2,\\r\\n  \\\"block\\\": -1,\\r\\n  \\\"blockbuster\\\": 3,\\r\\n  \\\"blocked\\\": -1,\\r\\n  \\\"blocking\\\": -1,\\r\\n  \\\"blocks\\\": -1,\\r\\n  \\\"bloody\\\": -3,\\r\\n  \\\"blurry\\\": -2,\\r\\n  \\\"boastful\\\": -2,\\r\\n  \\\"bold\\\": 2,\\r\\n  \\\"boldly\\\": 2,\\r\\n  \\\"bomb\\\": -1,\\r\\n  \\\"boost\\\": 1,\\r\\n  \\\"boosted\\\": 1,\\r\\n  \\\"boosting\\\": 1,\\r\\n  \\\"boosts\\\": 1,\\r\\n  \\\"bore\\\": -2,\\r\\n  \\\"bored\\\": -2,\\r\\n  \\\"boring\\\": -3,\\r\\n  \\\"bother\\\": -2,\\r\\n  \\\"bothered\\\": -2,\\r\\n  \\\"bothers\\\": -2,\\r\\n  \\\"bothersome\\\": -2,\\r\\n  \\\"boycott\\\": -2,\\r\\n  \\\"boycotted\\\": -2,\\r\\n  \\\"boycotting\\\": -2,\\r\\n  \\\"boycotts\\\": -2,\\r\\n  \\\"brainwashing\\\": -3,\\r\\n  \\\"brave\\\": 2,\\r\\n  \\\"breakthrough\\\": 3,\\r\\n  \\\"breathtaking\\\": 5,\\r\\n  \\\"bribe\\\": -3,\\r\\n  \\\"bright\\\": 1,\\r\\n  \\\"brightest\\\": 2,\\r\\n  \\\"brightness\\\": 1,\\r\\n  \\\"brilliant\\\": 4,\\r\\n  \\\"brisk\\\": 2,\\r\\n  \\\"broke\\\": -1,\\r\\n  \\\"broken\\\": -1,\\r\\n  \\\"brooding\\\": -2,\\r\\n  \\\"bullied\\\": -2,\\r\\n  \\\"bullshit\\\": -4,\\r\\n  \\\"bully\\\": -2,\\r\\n  \\\"bullying\\\": -2,\\r\\n  \\\"bummer\\\": -2,\\r\\n  \\\"buoyant\\\": 2,\\r\\n  \\\"burden\\\": -2,\\r\\n  \\\"burdened\\\": -2,\\r\\n  \\\"burdening\\\": -2,\\r\\n  \\\"burdens\\\": -2,\\r\\n  \\\"backed\\\": 1,\\r\\n  \\\"bad\\\": -3,\\r\\n  \\\"committed\\\": 1,\\r\\n  \\\"calming\\\": 2,\\r\\n  \\\"can't stand\\\": -3,\\r\\n  \\\"cancel\\\": -1,\\r\\n  \\\"cancelled\\\": -1,\\r\\n  \\\"cancelling\\\": -1,\\r\\n  \\\"cancels\\\": -1,\\r\\n  \\\"cancer\\\": -1,\\r\\n  \\\"capable\\\": 1,\\r\\n  \\\"captivated\\\": 3,\\r\\n  \\\"care\\\": 2,\\r\\n  \\\"carefree\\\": 1,\\r\\n  \\\"careful\\\": 2,\\r\\n  \\\"carefully\\\": 2,\\r\\n  \\\"careless\\\": -2,\\r\\n  \\\"cares\\\": 2,\\r\\n  \\\"cashing in\\\": -2,\\r\\n  \\\"casualty\\\": -2,\\r\\n  \\\"catastrophe\\\": -3,\\r\\n  \\\"catastrophic\\\": -4,\\r\\n  \\\"cautious\\\": -1,\\r\\n  \\\"celebrate\\\": 3,\\r\\n  \\\"celebrated\\\": 3,\\r\\n  \\\"celebrates\\\": 3,\\r\\n  \\\"celebrating\\\": 3,\\r\\n  \\\"censor\\\": -2,\\r\\n  \\\"censored\\\": -2,\\r\\n  \\\"censors\\\": -2,\\r\\n  \\\"certain\\\": 1,\\r\\n  \\\"chagrin\\\": -2,\\r\\n  \\\"chagrined\\\": -2,\\r\\n  \\\"challenge\\\": -1,\\r\\n  \\\"chance\\\": 2,\\r\\n  \\\"chances\\\": 2,\\r\\n  \\\"chaos\\\": -2,\\r\\n  \\\"chaotic\\\": -2,\\r\\n  \\\"charged\\\": -3,\\r\\n  \\\"charges\\\": -2,\\r\\n  \\\"charm\\\": 3,\\r\\n  \\\"charming\\\": 3,\\r\\n  \\\"charmless\\\": -3,\\r\\n  \\\"chastise\\\": -3,\\r\\n  \\\"chastised\\\": -3,\\r\\n  \\\"chastises\\\": -3,\\r\\n  \\\"chastising\\\": -3,\\r\\n  \\\"cheat\\\": -3,\\r\\n  \\\"cheated\\\": -3,\\r\\n  \\\"cheater\\\": -3,\\r\\n  \\\"cheaters\\\": -3,\\r\\n  \\\"cheats\\\": -3,\\r\\n  \\\"calmed\\\": 2,\\r\\n  \\\"cheered\\\": 2,\\r\\n  \\\"cheerful\\\": 2,\\r\\n  \\\"cheering\\\": 2,\\r\\n  \\\"cheerless\\\": -2,\\r\\n  \\\"cheers\\\": 2,\\r\\n  \\\"cheery\\\": 3,\\r\\n  \\\"cherish\\\": 2,\\r\\n  \\\"cherished\\\": 2,\\r\\n  \\\"cherishes\\\": 2,\\r\\n  \\\"cherishing\\\": 2,\\r\\n  \\\"chic\\\": 2,\\r\\n  \\\"childish\\\": -2,\\r\\n  \\\"chilling\\\": -1,\\r\\n  \\\"choke\\\": -2,\\r\\n  \\\"choked\\\": -2,\\r\\n  \\\"chokes\\\": -2,\\r\\n  \\\"choking\\\": -2,\\r\\n  \\\"clarifies\\\": 2,\\r\\n  \\\"clarity\\\": 2,\\r\\n  \\\"clash\\\": -2,\\r\\n  \\\"classy\\\": 3,\\r\\n  \\\"clean\\\": 2,\\r\\n  \\\"cleaner\\\": 2,\\r\\n  \\\"clear\\\": 1,\\r\\n  \\\"cleared\\\": 1,\\r\\n  \\\"clearly\\\": 1,\\r\\n  \\\"clears\\\": 1,\\r\\n  \\\"clever\\\": 2,\\r\\n  \\\"clouded\\\": -1,\\r\\n  \\\"clueless\\\": -2,\\r\\n  \\\"cock\\\": -5,\\r\\n  \\\"cocksucker\\\": -5,\\r\\n  \\\"cocksuckers\\\": -5,\\r\\n  \\\"cocky\\\": -2,\\r\\n  \\\"coerced\\\": -2,\\r\\n  \\\"collapse\\\": -2,\\r\\n  \\\"collapsed\\\": -2,\\r\\n  \\\"collapses\\\": -2,\\r\\n  \\\"collapsing\\\": -2,\\r\\n  \\\"collide\\\": -1,\\r\\n  \\\"collides\\\": -1,\\r\\n  \\\"colliding\\\": -1,\\r\\n  \\\"collision\\\": -2,\\r\\n  \\\"collisions\\\": -2,\\r\\n  \\\"colluding\\\": -3,\\r\\n  \\\"combat\\\": -1,\\r\\n  \\\"combats\\\": -1,\\r\\n  \\\"comedy\\\": 1,\\r\\n  \\\"comfort\\\": 2,\\r\\n  \\\"comfortable\\\": 2,\\r\\n  \\\"comforting\\\": 2,\\r\\n  \\\"comforts\\\": 2,\\r\\n  \\\"commend\\\": 2,\\r\\n  \\\"commended\\\": 2,\\r\\n  \\\"commit\\\": 1,\\r\\n  \\\"commitment\\\": 2,\\r\\n  \\\"commits\\\": 1,\\r\\n  \\\"calms\\\": 2,\\r\\n  \\\"committing\\\": 1,\\r\\n  \\\"compassionate\\\": 2,\\r\\n  \\\"compelled\\\": 1,\\r\\n  \\\"competent\\\": 2,\\r\\n  \\\"competitive\\\": 2,\\r\\n  \\\"complacent\\\": -2,\\r\\n  \\\"complain\\\": -2,\\r\\n  \\\"complained\\\": -2,\\r\\n  \\\"complains\\\": -2,\\r\\n  \\\"comprehensive\\\": 2,\\r\\n  \\\"conciliate\\\": 2,\\r\\n  \\\"conciliated\\\": 2,\\r\\n  \\\"conciliates\\\": 2,\\r\\n  \\\"conciliating\\\": 2,\\r\\n  \\\"condemn\\\": -2,\\r\\n  \\\"condemnation\\\": -2,\\r\\n  \\\"condemned\\\": -2,\\r\\n  \\\"condemns\\\": -2,\\r\\n  \\\"confidence\\\": 2,\\r\\n  \\\"confident\\\": 2,\\r\\n  \\\"conflict\\\": -2,\\r\\n  \\\"conflicting\\\": -2,\\r\\n  \\\"conflictive\\\": -2,\\r\\n  \\\"conflicts\\\": -2,\\r\\n  \\\"confuse\\\": -2,\\r\\n  \\\"confused\\\": -2,\\r\\n  \\\"confusing\\\": -2,\\r\\n  \\\"congrats\\\": 2,\\r\\n  \\\"congratulate\\\": 2,\\r\\n  \\\"congratulation\\\": 2,\\r\\n  \\\"congratulations\\\": 2,\\r\\n  \\\"consent\\\": 2,\\r\\n  \\\"consents\\\": 2,\\r\\n  \\\"consolable\\\": 2,\\r\\n  \\\"conspiracy\\\": -3,\\r\\n  \\\"constrained\\\": -2,\\r\\n  \\\"contagion\\\": -2,\\r\\n  \\\"contagions\\\": -2,\\r\\n  \\\"contagious\\\": -1,\\r\\n  \\\"contempt\\\": -2,\\r\\n  \\\"contemptuous\\\": -2,\\r\\n  \\\"contemptuously\\\": -2,\\r\\n  \\\"contend\\\": -1,\\r\\n  \\\"contender\\\": -1,\\r\\n  \\\"contending\\\": -1,\\r\\n  \\\"contentious\\\": -2,\\r\\n  \\\"contestable\\\": -2,\\r\\n  \\\"controversial\\\": -2,\\r\\n  \\\"controversially\\\": -2,\\r\\n  \\\"convince\\\": 1,\\r\\n  \\\"convinced\\\": 1,\\r\\n  \\\"convinces\\\": 1,\\r\\n  \\\"convivial\\\": 2,\\r\\n  \\\"cool\\\": 1,\\r\\n  \\\"cool stuff\\\": 3,\\r\\n  \\\"cornered\\\": -2,\\r\\n  \\\"corpse\\\": -1,\\r\\n  \\\"costly\\\": -2,\\r\\n  \\\"courage\\\": 2,\\r\\n  \\\"courageous\\\": 2,\\r\\n  \\\"courteous\\\": 2,\\r\\n  \\\"courtesy\\\": 2,\\r\\n  \\\"cover-up\\\": -3,\\r\\n  \\\"coward\\\": -2,\\r\\n  \\\"cowardly\\\": -2,\\r\\n  \\\"coziness\\\": 2,\\r\\n  \\\"cramp\\\": -1,\\r\\n  \\\"crap\\\": -3,\\r\\n  \\\"crash\\\": -2,\\r\\n  \\\"crazier\\\": -2,\\r\\n  \\\"craziest\\\": -2,\\r\\n  \\\"crazy\\\": -2,\\r\\n  \\\"creative\\\": 2,\\r\\n  \\\"crestfallen\\\": -2,\\r\\n  \\\"cried\\\": -2,\\r\\n  \\\"cries\\\": -2,\\r\\n  \\\"crime\\\": -3,\\r\\n  \\\"criminal\\\": -3,\\r\\n  \\\"criminals\\\": -3,\\r\\n  \\\"crisis\\\": -3,\\r\\n  \\\"critic\\\": -2,\\r\\n  \\\"criticism\\\": -2,\\r\\n  \\\"criticize\\\": -2,\\r\\n  \\\"criticized\\\": -2,\\r\\n  \\\"criticizes\\\": -2,\\r\\n  \\\"criticizing\\\": -2,\\r\\n  \\\"critics\\\": -2,\\r\\n  \\\"cruel\\\": -3,\\r\\n  \\\"cruelty\\\": -3,\\r\\n  \\\"crush\\\": -1,\\r\\n  \\\"crushed\\\": -2,\\r\\n  \\\"crushes\\\": -1,\\r\\n  \\\"crushing\\\": -1,\\r\\n  \\\"cry\\\": -1,\\r\\n  \\\"crying\\\": -2,\\r\\n  \\\"cunt\\\": -5,\\r\\n  \\\"curious\\\": 1,\\r\\n  \\\"curse\\\": -1,\\r\\n  \\\"cut\\\": -1,\\r\\n  \\\"cute\\\": 2,\\r\\n  \\\"cuts\\\": -1,\\r\\n  \\\"cutting\\\": -1,\\r\\n  \\\"cynic\\\": -2,\\r\\n  \\\"cynical\\\": -2,\\r\\n  \\\"cynicism\\\": -2,\\r\\n  \\\"calm\\\": 2,\\r\\n  \\\"cheer\\\": 2,\\r\\n  \\\"damages\\\": -3,\\r\\n  \\\"damn\\\": -4,\\r\\n  \\\"damned\\\": -4,\\r\\n  \\\"damnit\\\": -4,\\r\\n  \\\"danger\\\": -2,\\r\\n  \\\"daredevil\\\": 2,\\r\\n  \\\"daring\\\": 2,\\r\\n  \\\"darkest\\\": -2,\\r\\n  \\\"darkness\\\": -1,\\r\\n  \\\"dauntless\\\": 2,\\r\\n  \\\"dead\\\": -3,\\r\\n  \\\"deadlock\\\": -2,\\r\\n  \\\"deafening\\\": -1,\\r\\n  \\\"dear\\\": 2,\\r\\n  \\\"dearly\\\": 3,\\r\\n  \\\"death\\\": -2,\\r\\n  \\\"debonair\\\": 2,\\r\\n  \\\"debt\\\": -2,\\r\\n  \\\"deceit\\\": -3,\\r\\n  \\\"deceitful\\\": -3,\\r\\n  \\\"deceive\\\": -3,\\r\\n  \\\"deceived\\\": -3,\\r\\n  \\\"deceives\\\": -3,\\r\\n  \\\"deceiving\\\": -3,\\r\\n  \\\"deception\\\": -3,\\r\\n  \\\"decisive\\\": 1,\\r\\n  \\\"dedicated\\\": 2,\\r\\n  \\\"defeated\\\": -2,\\r\\n  \\\"defect\\\": -3,\\r\\n  \\\"defects\\\": -3,\\r\\n  \\\"defender\\\": 2,\\r\\n  \\\"defenders\\\": 2,\\r\\n  \\\"defenseless\\\": -2,\\r\\n  \\\"defer\\\": -1,\\r\\n  \\\"deferring\\\": -1,\\r\\n  \\\"defiant\\\": -1,\\r\\n  \\\"deficit\\\": -2,\\r\\n  \\\"degrade\\\": -2,\\r\\n  \\\"degraded\\\": -2,\\r\\n  \\\"degrades\\\": -2,\\r\\n  \\\"dehumanize\\\": -2,\\r\\n  \\\"dehumanized\\\": -2,\\r\\n  \\\"dehumanizes\\\": -2,\\r\\n  \\\"dehumanizing\\\": -2,\\r\\n  \\\"deject\\\": -2,\\r\\n  \\\"dejected\\\": -2,\\r\\n  \\\"dejecting\\\": -2,\\r\\n  \\\"dejects\\\": -2,\\r\\n  \\\"delay\\\": -1,\\r\\n  \\\"delayed\\\": -1,\\r\\n  \\\"delight\\\": 3,\\r\\n  \\\"delighted\\\": 3,\\r\\n  \\\"delighting\\\": 3,\\r\\n  \\\"delights\\\": 3,\\r\\n  \\\"demand\\\": -1,\\r\\n  \\\"demanded\\\": -1,\\r\\n  \\\"demanding\\\": -1,\\r\\n  \\\"demands\\\": -1,\\r\\n  \\\"demonstration\\\": -1,\\r\\n  \\\"demoralized\\\": -2,\\r\\n  \\\"denied\\\": -2,\\r\\n  \\\"denier\\\": -2,\\r\\n  \\\"deniers\\\": -2,\\r\\n  \\\"denies\\\": -2,\\r\\n  \\\"denounce\\\": -2,\\r\\n  \\\"denounces\\\": -2,\\r\\n  \\\"deny\\\": -2,\\r\\n  \\\"denying\\\": -2,\\r\\n  \\\"depressed\\\": -2,\\r\\n  \\\"depressing\\\": -2,\\r\\n  \\\"derail\\\": -2,\\r\\n  \\\"derailed\\\": -2,\\r\\n  \\\"derails\\\": -2,\\r\\n  \\\"deride\\\": -2,\\r\\n  \\\"derided\\\": -2,\\r\\n  \\\"derides\\\": -2,\\r\\n  \\\"deriding\\\": -2,\\r\\n  \\\"derision\\\": -2,\\r\\n  \\\"desirable\\\": 2,\\r\\n  \\\"desire\\\": 1,\\r\\n  \\\"desired\\\": 2,\\r\\n  \\\"desirous\\\": 2,\\r\\n  \\\"damage\\\": -3,\\r\\n  \\\"despairing\\\": -3,\\r\\n  \\\"despairs\\\": -3,\\r\\n  \\\"desperate\\\": -3,\\r\\n  \\\"desperately\\\": -3,\\r\\n  \\\"despondent\\\": -3,\\r\\n  \\\"destroy\\\": -3,\\r\\n  \\\"destroyed\\\": -3,\\r\\n  \\\"destroying\\\": -3,\\r\\n  \\\"destroys\\\": -3,\\r\\n  \\\"destruction\\\": -3,\\r\\n  \\\"destructive\\\": -3,\\r\\n  \\\"detached\\\": -1,\\r\\n  \\\"detain\\\": -2,\\r\\n  \\\"detained\\\": -2,\\r\\n  \\\"detention\\\": -2,\\r\\n  \\\"determined\\\": 2,\\r\\n  \\\"devastate\\\": -2,\\r\\n  \\\"devastated\\\": -2,\\r\\n  \\\"devastating\\\": -2,\\r\\n  \\\"devoted\\\": 3,\\r\\n  \\\"diamond\\\": 1,\\r\\n  \\\"dick\\\": -4,\\r\\n  \\\"dickhead\\\": -4,\\r\\n  \\\"die\\\": -3,\\r\\n  \\\"died\\\": -3,\\r\\n  \\\"difficult\\\": -1,\\r\\n  \\\"diffident\\\": -2,\\r\\n  \\\"dilemma\\\": -1,\\r\\n  \\\"dipshit\\\": -3,\\r\\n  \\\"dire\\\": -3,\\r\\n  \\\"direful\\\": -3,\\r\\n  \\\"dirt\\\": -2,\\r\\n  \\\"dirtier\\\": -2,\\r\\n  \\\"dirtiest\\\": -2,\\r\\n  \\\"dirty\\\": -2,\\r\\n  \\\"disabling\\\": -1,\\r\\n  \\\"disadvantage\\\": -2,\\r\\n  \\\"disadvantaged\\\": -2,\\r\\n  \\\"disappear\\\": -1,\\r\\n  \\\"disappeared\\\": -1,\\r\\n  \\\"disappears\\\": -1,\\r\\n  \\\"disappoint\\\": -2,\\r\\n  \\\"disappointed\\\": -2,\\r\\n  \\\"disappointing\\\": -2,\\r\\n  \\\"disappointment\\\": -2,\\r\\n  \\\"disappointments\\\": -2,\\r\\n  \\\"disappoints\\\": -2,\\r\\n  \\\"disaster\\\": -2,\\r\\n  \\\"disasters\\\": -2,\\r\\n  \\\"disastrous\\\": -3,\\r\\n  \\\"disbelieve\\\": -2,\\r\\n  \\\"discard\\\": -1,\\r\\n  \\\"discarded\\\": -1,\\r\\n  \\\"discarding\\\": -1,\\r\\n  \\\"discards\\\": -1,\\r\\n  \\\"disconsolate\\\": -2,\\r\\n  \\\"disconsolation\\\": -2,\\r\\n  \\\"discontented\\\": -2,\\r\\n  \\\"discord\\\": -2,\\r\\n  \\\"discounted\\\": -1,\\r\\n  \\\"discouraged\\\": -2,\\r\\n  \\\"discredited\\\": -2,\\r\\n  \\\"disdain\\\": -2,\\r\\n  \\\"disgrace\\\": -2,\\r\\n  \\\"disgraced\\\": -2,\\r\\n  \\\"disguise\\\": -1,\\r\\n  \\\"disguised\\\": -1,\\r\\n  \\\"disguises\\\": -1,\\r\\n  \\\"disguising\\\": -1,\\r\\n  \\\"disgust\\\": -3,\\r\\n  \\\"disgusted\\\": -3,\\r\\n  \\\"disgusting\\\": -3,\\r\\n  \\\"disheartened\\\": -2,\\r\\n  \\\"dishonest\\\": -2,\\r\\n  \\\"disillusioned\\\": -2,\\r\\n  \\\"disinclined\\\": -2,\\r\\n  \\\"disjointed\\\": -2,\\r\\n  \\\"dislike\\\": -2,\\r\\n  \\\"dismal\\\": -2,\\r\\n  \\\"dismayed\\\": -2,\\r\\n  \\\"disorder\\\": -2,\\r\\n  \\\"disorganized\\\": -2,\\r\\n  \\\"disoriented\\\": -2,\\r\\n  \\\"disparage\\\": -2,\\r\\n  \\\"disparaged\\\": -2,\\r\\n  \\\"disparages\\\": -2,\\r\\n  \\\"disparaging\\\": -2,\\r\\n  \\\"displeased\\\": -2,\\r\\n  \\\"dispute\\\": -2,\\r\\n  \\\"disputed\\\": -2,\\r\\n  \\\"disputes\\\": -2,\\r\\n  \\\"disputing\\\": -2,\\r\\n  \\\"disqualified\\\": -2,\\r\\n  \\\"disquiet\\\": -2,\\r\\n  \\\"disregard\\\": -2,\\r\\n  \\\"disregarded\\\": -2,\\r\\n  \\\"disregarding\\\": -2,\\r\\n  \\\"disregards\\\": -2,\\r\\n  \\\"disrespect\\\": -2,\\r\\n  \\\"disrespected\\\": -2,\\r\\n  \\\"disruption\\\": -2,\\r\\n  \\\"disruptions\\\": -2,\\r\\n  \\\"disruptive\\\": -2,\\r\\n  \\\"dissatisfied\\\": -2,\\r\\n  \\\"distort\\\": -2,\\r\\n  \\\"distorted\\\": -2,\\r\\n  \\\"distorting\\\": -2,\\r\\n  \\\"distorts\\\": -2,\\r\\n  \\\"distract\\\": -2,\\r\\n  \\\"distracted\\\": -2,\\r\\n  \\\"distraction\\\": -2,\\r\\n  \\\"distracts\\\": -2,\\r\\n  \\\"distress\\\": -2,\\r\\n  \\\"distressed\\\": -2,\\r\\n  \\\"distresses\\\": -2,\\r\\n  \\\"distressing\\\": -2,\\r\\n  \\\"distrust\\\": -3,\\r\\n  \\\"distrustful\\\": -3,\\r\\n  \\\"disturb\\\": -2,\\r\\n  \\\"disturbed\\\": -2,\\r\\n  \\\"disturbing\\\": -2,\\r\\n  \\\"disturbs\\\": -2,\\r\\n  \\\"dithering\\\": -2,\\r\\n  \\\"dizzy\\\": -1,\\r\\n  \\\"dodging\\\": -2,\\r\\n  \\\"dodgy\\\": -2,\\r\\n  \\\"does not work\\\": -3,\\r\\n  \\\"dolorous\\\": -2,\\r\\n  \\\"dont like\\\": -2,\\r\\n  \\\"doom\\\": -2,\\r\\n  \\\"doomed\\\": -2,\\r\\n  \\\"doubt\\\": -1,\\r\\n  \\\"doubted\\\": -1,\\r\\n  \\\"doubtful\\\": -1,\\r\\n  \\\"doubting\\\": -1,\\r\\n  \\\"doubts\\\": -1,\\r\\n  \\\"douche\\\": -3,\\r\\n  \\\"douchebag\\\": -3,\\r\\n  \\\"downcast\\\": -2,\\r\\n  \\\"downhearted\\\": -2,\\r\\n  \\\"downside\\\": -2,\\r\\n  \\\"drag\\\": -1,\\r\\n  \\\"dragged\\\": -1,\\r\\n  \\\"drags\\\": -1,\\r\\n  \\\"drained\\\": -2,\\r\\n  \\\"dread\\\": -2,\\r\\n  \\\"dreaded\\\": -2,\\r\\n  \\\"dreadful\\\": -3,\\r\\n  \\\"dreading\\\": -2,\\r\\n  \\\"dream\\\": 1,\\r\\n  \\\"dreams\\\": 1,\\r\\n  \\\"dreary\\\": -2,\\r\\n  \\\"droopy\\\": -2,\\r\\n  \\\"drop\\\": -1,\\r\\n  \\\"drown\\\": -2,\\r\\n  \\\"drowned\\\": -2,\\r\\n  \\\"drowns\\\": -2,\\r\\n  \\\"drunk\\\": -2,\\r\\n  \\\"dubious\\\": -2,\\r\\n  \\\"dud\\\": -2,\\r\\n  \\\"dull\\\": -2,\\r\\n  \\\"dumb\\\": -3,\\r\\n  \\\"dumbass\\\": -3,\\r\\n  \\\"dump\\\": -1,\\r\\n  \\\"dumped\\\": -2,\\r\\n  \\\"dumps\\\": -1,\\r\\n  \\\"dupe\\\": -2,\\r\\n  \\\"duped\\\": -2,\\r\\n  \\\"dysfunction\\\": -2,\\r\\n  \\\"despair\\\": -3,\\r\\n  \\\"eager\\\": 2,\\r\\n  \\\"ease\\\": 2,\\r\\n  \\\"easy\\\": 1,\\r\\n  \\\"ecstatic\\\": 4,\\r\\n  \\\"eerie\\\": -2,\\r\\n  \\\"eery\\\": -2,\\r\\n  \\\"effective\\\": 2,\\r\\n  \\\"effectively\\\": 2,\\r\\n  \\\"elated\\\": 3,\\r\\n  \\\"elation\\\": 3,\\r\\n  \\\"elegant\\\": 2,\\r\\n  \\\"elegantly\\\": 2,\\r\\n  \\\"embarrass\\\": -2,\\r\\n  \\\"embarrassed\\\": -2,\\r\\n  \\\"embarrasses\\\": -2,\\r\\n  \\\"embarrassing\\\": -2,\\r\\n  \\\"embarrassment\\\": -2,\\r\\n  \\\"embittered\\\": -2,\\r\\n  \\\"embrace\\\": 1,\\r\\n  \\\"emergency\\\": -2,\\r\\n  \\\"empathetic\\\": 2,\\r\\n  \\\"emptiness\\\": -1,\\r\\n  \\\"empty\\\": -1,\\r\\n  \\\"enchanted\\\": 2,\\r\\n  \\\"encourage\\\": 2,\\r\\n  \\\"encouraged\\\": 2,\\r\\n  \\\"encouragement\\\": 2,\\r\\n  \\\"encourages\\\": 2,\\r\\n  \\\"endorse\\\": 2,\\r\\n  \\\"endorsed\\\": 2,\\r\\n  \\\"endorsement\\\": 2,\\r\\n  \\\"endorses\\\": 2,\\r\\n  \\\"enemies\\\": -2,\\r\\n  \\\"enemy\\\": -2,\\r\\n  \\\"energetic\\\": 2,\\r\\n  \\\"engage\\\": 1,\\r\\n  \\\"engages\\\": 1,\\r\\n  \\\"engrossed\\\": 1,\\r\\n  \\\"enjoy\\\": 2,\\r\\n  \\\"enjoying\\\": 2,\\r\\n  \\\"enjoys\\\": 2,\\r\\n  \\\"enlighten\\\": 2,\\r\\n  \\\"enlightened\\\": 2,\\r\\n  \\\"enlightening\\\": 2,\\r\\n  \\\"enlightens\\\": 2,\\r\\n  \\\"ennui\\\": -2,\\r\\n  \\\"enrage\\\": -2,\\r\\n  \\\"enraged\\\": -2,\\r\\n  \\\"enrages\\\": -2,\\r\\n  \\\"enraging\\\": -2,\\r\\n  \\\"enrapture\\\": 3,\\r\\n  \\\"enslave\\\": -2,\\r\\n  \\\"enslaved\\\": -2,\\r\\n  \\\"enslaves\\\": -2,\\r\\n  \\\"ensure\\\": 1,\\r\\n  \\\"ensuring\\\": 1,\\r\\n  \\\"enterprising\\\": 1,\\r\\n  \\\"entertaining\\\": 2,\\r\\n  \\\"enthral\\\": 3,\\r\\n  \\\"enthusiastic\\\": 3,\\r\\n  \\\"entitled\\\": 1,\\r\\n  \\\"entrusted\\\": 2,\\r\\n  \\\"envies\\\": -1,\\r\\n  \\\"envious\\\": -2,\\r\\n  \\\"envy\\\": -1,\\r\\n  \\\"envying\\\": -1,\\r\\n  \\\"erroneous\\\": -2,\\r\\n  \\\"error\\\": -2,\\r\\n  \\\"errors\\\": -2,\\r\\n  \\\"escape\\\": -1,\\r\\n  \\\"escapes\\\": -1,\\r\\n  \\\"escaping\\\": -1,\\r\\n  \\\"esteemed\\\": 2,\\r\\n  \\\"ethical\\\": 2,\\r\\n  \\\"euphoria\\\": 3,\\r\\n  \\\"euphoric\\\": 4,\\r\\n  \\\"eviction\\\": -1,\\r\\n  \\\"evil\\\": -3,\\r\\n  \\\"exaggerate\\\": -2,\\r\\n  \\\"exaggerated\\\": -2,\\r\\n  \\\"exaggerates\\\": -2,\\r\\n  \\\"exaggerating\\\": -2,\\r\\n  \\\"exasperated\\\": 2,\\r\\n  \\\"excellence\\\": 3,\\r\\n  \\\"excellent\\\": 3,\\r\\n  \\\"excite\\\": 3,\\r\\n  \\\"excited\\\": 3,\\r\\n  \\\"excitement\\\": 3,\\r\\n  \\\"exciting\\\": 3,\\r\\n  \\\"exclude\\\": -1,\\r\\n  \\\"excluded\\\": -2,\\r\\n  \\\"exclusion\\\": -1,\\r\\n  \\\"exclusive\\\": 2,\\r\\n  \\\"excuse\\\": -1,\\r\\n  \\\"exempt\\\": -1,\\r\\n  \\\"exhausted\\\": -2,\\r\\n  \\\"exhilarated\\\": 3,\\r\\n  \\\"exhilarates\\\": 3,\\r\\n  \\\"exhilarating\\\": 3,\\r\\n  \\\"exonerate\\\": 2,\\r\\n  \\\"exonerated\\\": 2,\\r\\n  \\\"exonerates\\\": 2,\\r\\n  \\\"exonerating\\\": 2,\\r\\n  \\\"expand\\\": 1,\\r\\n  \\\"expands\\\": 1,\\r\\n  \\\"expel\\\": -2,\\r\\n  \\\"expelled\\\": -2,\\r\\n  \\\"expelling\\\": -2,\\r\\n  \\\"expels\\\": -2,\\r\\n  \\\"exploit\\\": -2,\\r\\n  \\\"exploited\\\": -2,\\r\\n  \\\"exploiting\\\": -2,\\r\\n  \\\"exploits\\\": -2,\\r\\n  \\\"exploration\\\": 1,\\r\\n  \\\"explorations\\\": 1,\\r\\n  \\\"expose\\\": -1,\\r\\n  \\\"exposed\\\": -1,\\r\\n  \\\"exposes\\\": -1,\\r\\n  \\\"exposing\\\": -1,\\r\\n  \\\"extend\\\": 1,\\r\\n  \\\"extends\\\": 1,\\r\\n  \\\"exuberant\\\": 4,\\r\\n  \\\"exultant\\\": 3,\\r\\n  \\\"exultantly\\\": 3,\\r\\n  \\\"earnest\\\": 2,\\r\\n  \\\"fad\\\": -2,\\r\\n  \\\"fraudster\\\": -4,\\r\\n  \\\"faggot\\\": -3,\\r\\n  \\\"faggots\\\": -3,\\r\\n  \\\"fail\\\": -2,\\r\\n  \\\"failed\\\": -2,\\r\\n  \\\"failing\\\": -2,\\r\\n  \\\"fails\\\": -2,\\r\\n  \\\"failure\\\": -2,\\r\\n  \\\"failures\\\": -2,\\r\\n  \\\"fainthearted\\\": -2,\\r\\n  \\\"fair\\\": 2,\\r\\n  \\\"faith\\\": 1,\\r\\n  \\\"faithful\\\": 3,\\r\\n  \\\"fake\\\": -3,\\r\\n  \\\"fakes\\\": -3,\\r\\n  \\\"faking\\\": -3,\\r\\n  \\\"fallen\\\": -2,\\r\\n  \\\"falling\\\": -1,\\r\\n  \\\"falsified\\\": -3,\\r\\n  \\\"falsify\\\": -3,\\r\\n  \\\"fame\\\": 1,\\r\\n  \\\"fan\\\": 3,\\r\\n  \\\"fantastic\\\": 4,\\r\\n  \\\"farce\\\": -1,\\r\\n  \\\"fascinate\\\": 3,\\r\\n  \\\"fascinated\\\": 3,\\r\\n  \\\"fascinates\\\": 3,\\r\\n  \\\"fascinating\\\": 3,\\r\\n  \\\"fascist\\\": -2,\\r\\n  \\\"fascists\\\": -2,\\r\\n  \\\"fatalities\\\": -3,\\r\\n  \\\"fatality\\\": -3,\\r\\n  \\\"fatigue\\\": -2,\\r\\n  \\\"fatigued\\\": -2,\\r\\n  \\\"fatigues\\\": -2,\\r\\n  \\\"fatiguing\\\": -2,\\r\\n  \\\"favor\\\": 2,\\r\\n  \\\"favored\\\": 2,\\r\\n  \\\"favorite\\\": 2,\\r\\n  \\\"favorited\\\": 2,\\r\\n  \\\"favorites\\\": 2,\\r\\n  \\\"favors\\\": 2,\\r\\n  \\\"fear\\\": -2,\\r\\n  \\\"fearful\\\": -2,\\r\\n  \\\"fearing\\\": -2,\\r\\n  \\\"fearless\\\": 2,\\r\\n  \\\"fearsome\\\": -2,\\r\\n  \\\"fed up\\\": -3,\\r\\n  \\\"feeble\\\": -2,\\r\\n  \\\"feeling\\\": 1,\\r\\n  \\\"felonies\\\": -3,\\r\\n  \\\"felony\\\": -3,\\r\\n  \\\"fervent\\\": 2,\\r\\n  \\\"fervid\\\": 2,\\r\\n  \\\"festive\\\": 2,\\r\\n  \\\"fiasco\\\": -3,\\r\\n  \\\"fidgety\\\": -2,\\r\\n  \\\"fight\\\": -1,\\r\\n  \\\"fine\\\": 2,\\r\\n  \\\"fire\\\": -2,\\r\\n  \\\"fired\\\": -2,\\r\\n  \\\"firing\\\": -2,\\r\\n  \\\"fit\\\": 1,\\r\\n  \\\"fitness\\\": 1,\\r\\n  \\\"flagship\\\": 2,\\r\\n  \\\"flees\\\": -1,\\r\\n  \\\"flop\\\": -2,\\r\\n  \\\"flops\\\": -2,\\r\\n  \\\"flu\\\": -2,\\r\\n  \\\"flustered\\\": -2,\\r\\n  \\\"focused\\\": 2,\\r\\n  \\\"fond\\\": 2,\\r\\n  \\\"fondness\\\": 2,\\r\\n  \\\"fool\\\": -2,\\r\\n  \\\"foolish\\\": -2,\\r\\n  \\\"fools\\\": -2,\\r\\n  \\\"forced\\\": -1,\\r\\n  \\\"foreclosure\\\": -2,\\r\\n  \\\"foreclosures\\\": -2,\\r\\n  \\\"forget\\\": -1,\\r\\n  \\\"forgetful\\\": -2,\\r\\n  \\\"forgive\\\": 1,\\r\\n  \\\"forgiving\\\": 1,\\r\\n  \\\"forgotten\\\": -1,\\r\\n  \\\"fortunate\\\": 2,\\r\\n  \\\"frantic\\\": -1,\\r\\n  \\\"fraud\\\": -4,\\r\\n  \\\"frauds\\\": -4,\\r\\n  \\\"fabulous\\\": 4,\\r\\n  \\\"fraudsters\\\": -4,\\r\\n  \\\"fraudulence\\\": -4,\\r\\n  \\\"fraudulent\\\": -4,\\r\\n  \\\"free\\\": 1,\\r\\n  \\\"freedom\\\": 2,\\r\\n  \\\"frenzy\\\": -3,\\r\\n  \\\"fresh\\\": 1,\\r\\n  \\\"friendly\\\": 2,\\r\\n  \\\"fright\\\": -2,\\r\\n  \\\"frightened\\\": -2,\\r\\n  \\\"frightening\\\": -3,\\r\\n  \\\"frikin\\\": -2,\\r\\n  \\\"frisky\\\": 2,\\r\\n  \\\"frowning\\\": -1,\\r\\n  \\\"frustrate\\\": -2,\\r\\n  \\\"frustrated\\\": -2,\\r\\n  \\\"frustrates\\\": -2,\\r\\n  \\\"frustrating\\\": -2,\\r\\n  \\\"frustration\\\": -2,\\r\\n  \\\"ftw\\\": 3,\\r\\n  \\\"fuck\\\": -4,\\r\\n  \\\"fucked\\\": -4,\\r\\n  \\\"fucker\\\": -4,\\r\\n  \\\"fuckers\\\": -4,\\r\\n  \\\"fuckface\\\": -4,\\r\\n  \\\"fuckhead\\\": -4,\\r\\n  \\\"fucking\\\": -4,\\r\\n  \\\"fucktard\\\": -4,\\r\\n  \\\"fud\\\": -3,\\r\\n  \\\"fuked\\\": -4,\\r\\n  \\\"fuking\\\": -4,\\r\\n  \\\"fulfill\\\": 2,\\r\\n  \\\"fulfilled\\\": 2,\\r\\n  \\\"fulfills\\\": 2,\\r\\n  \\\"fuming\\\": -2,\\r\\n  \\\"fun\\\": 4,\\r\\n  \\\"funeral\\\": -1,\\r\\n  \\\"funerals\\\": -1,\\r\\n  \\\"funky\\\": 2,\\r\\n  \\\"funnier\\\": 4,\\r\\n  \\\"funny\\\": 4,\\r\\n  \\\"furious\\\": -3,\\r\\n  \\\"futile\\\": 2,\\r\\n  \\\"fag\\\": -3,\\r\\n  \\\"gagged\\\": -2,\\r\\n  \\\"gloom\\\": -1,\\r\\n  \\\"gained\\\": 2,\\r\\n  \\\"gaining\\\": 2,\\r\\n  \\\"gains\\\": 2,\\r\\n  \\\"gallant\\\": 3,\\r\\n  \\\"gallantly\\\": 3,\\r\\n  \\\"gallantry\\\": 3,\\r\\n  \\\"generous\\\": 2,\\r\\n  \\\"genial\\\": 3,\\r\\n  \\\"ghost\\\": -1,\\r\\n  \\\"giddy\\\": -2,\\r\\n  \\\"gift\\\": 2,\\r\\n  \\\"glad\\\": 3,\\r\\n  \\\"glamorous\\\": 3,\\r\\n  \\\"glamourous\\\": 3,\\r\\n  \\\"glee\\\": 3,\\r\\n  \\\"gleeful\\\": 3,\\r\\n  \\\"gag\\\": -2,\\r\\n  \\\"gloomy\\\": -2,\\r\\n  \\\"glorious\\\": 2,\\r\\n  \\\"glory\\\": 2,\\r\\n  \\\"glum\\\": -2,\\r\\n  \\\"god\\\": 1,\\r\\n  \\\"goddamn\\\": -3,\\r\\n  \\\"godsend\\\": 4,\\r\\n  \\\"good\\\": 3,\\r\\n  \\\"goodness\\\": 3,\\r\\n  \\\"grace\\\": 1,\\r\\n  \\\"gracious\\\": 3,\\r\\n  \\\"grand\\\": 3,\\r\\n  \\\"grant\\\": 1,\\r\\n  \\\"granted\\\": 1,\\r\\n  \\\"granting\\\": 1,\\r\\n  \\\"grants\\\": 1,\\r\\n  \\\"grateful\\\": 3,\\r\\n  \\\"gratification\\\": 2,\\r\\n  \\\"grave\\\": -2,\\r\\n  \\\"gray\\\": -1,\\r\\n  \\\"great\\\": 3,\\r\\n  \\\"greater\\\": 3,\\r\\n  \\\"greatest\\\": 3,\\r\\n  \\\"greed\\\": -3,\\r\\n  \\\"greedy\\\": -2,\\r\\n  \\\"green wash\\\": -3,\\r\\n  \\\"green washing\\\": -3,\\r\\n  \\\"greenwash\\\": -3,\\r\\n  \\\"greenwasher\\\": -3,\\r\\n  \\\"greenwashers\\\": -3,\\r\\n  \\\"greenwashing\\\": -3,\\r\\n  \\\"greet\\\": 1,\\r\\n  \\\"greeted\\\": 1,\\r\\n  \\\"greeting\\\": 1,\\r\\n  \\\"greetings\\\": 2,\\r\\n  \\\"greets\\\": 1,\\r\\n  \\\"grey\\\": -1,\\r\\n  \\\"grief\\\": -2,\\r\\n  \\\"grieved\\\": -2,\\r\\n  \\\"gross\\\": -2,\\r\\n  \\\"growing\\\": 1,\\r\\n  \\\"growth\\\": 2,\\r\\n  \\\"guarantee\\\": 1,\\r\\n  \\\"guilt\\\": -3,\\r\\n  \\\"guilty\\\": -3,\\r\\n  \\\"gullibility\\\": -2,\\r\\n  \\\"gullible\\\": -2,\\r\\n  \\\"gun\\\": -1,\\r\\n  \\\"gain\\\": 2,\\r\\n  \\\"hid\\\": -1,\\r\\n  \\\"hacked\\\": -1,\\r\\n  \\\"hahaha\\\": 3,\\r\\n  \\\"hahahah\\\": 3,\\r\\n  \\\"hail\\\": 2,\\r\\n  \\\"hailed\\\": 2,\\r\\n  \\\"hapless\\\": -2,\\r\\n  \\\"haplessness\\\": -2,\\r\\n  \\\"happiness\\\": 3,\\r\\n  \\\"happy\\\": 3,\\r\\n  \\\"hard\\\": -1,\\r\\n  \\\"hardier\\\": 2,\\r\\n  \\\"hardship\\\": -2,\\r\\n  \\\"hardy\\\": 2,\\r\\n  \\\"harm\\\": -2,\\r\\n  \\\"harmed\\\": -2,\\r\\n  \\\"harmful\\\": -2,\\r\\n  \\\"ha\\\": 2,\\r\\n  \\\"harms\\\": -2,\\r\\n  \\\"harried\\\": -2,\\r\\n  \\\"harsh\\\": -2,\\r\\n  \\\"harsher\\\": -2,\\r\\n  \\\"harshest\\\": -2,\\r\\n  \\\"hate\\\": -3,\\r\\n  \\\"hated\\\": -3,\\r\\n  \\\"haters\\\": -3,\\r\\n  \\\"hates\\\": -3,\\r\\n  \\\"hating\\\": -3,\\r\\n  \\\"haunt\\\": -1,\\r\\n  \\\"haunted\\\": -2,\\r\\n  \\\"haunting\\\": 1,\\r\\n  \\\"haunts\\\": -1,\\r\\n  \\\"havoc\\\": -2,\\r\\n  \\\"healthy\\\": 2,\\r\\n  \\\"heartbreaking\\\": -3,\\r\\n  \\\"heartbroken\\\": -3,\\r\\n  \\\"heartfelt\\\": 3,\\r\\n  \\\"heaven\\\": 2,\\r\\n  \\\"heavenly\\\": 4,\\r\\n  \\\"heavyhearted\\\": -2,\\r\\n  \\\"hell\\\": -4,\\r\\n  \\\"help\\\": 2,\\r\\n  \\\"helpful\\\": 2,\\r\\n  \\\"helping\\\": 2,\\r\\n  \\\"helpless\\\": -2,\\r\\n  \\\"helps\\\": 2,\\r\\n  \\\"hero\\\": 2,\\r\\n  \\\"heroes\\\": 2,\\r\\n  \\\"heroic\\\": 3,\\r\\n  \\\"hesitant\\\": -2,\\r\\n  \\\"hesitate\\\": -2,\\r\\n  \\\"haha\\\": 3,\\r\\n  \\\"hide\\\": -1,\\r\\n  \\\"hides\\\": -1,\\r\\n  \\\"hiding\\\": -1,\\r\\n  \\\"highlight\\\": 2,\\r\\n  \\\"hilarious\\\": 2,\\r\\n  \\\"hindrance\\\": -2,\\r\\n  \\\"hoax\\\": -2,\\r\\n  \\\"homesick\\\": -2,\\r\\n  \\\"honest\\\": 2,\\r\\n  \\\"honor\\\": 2,\\r\\n  \\\"honored\\\": 2,\\r\\n  \\\"honoring\\\": 2,\\r\\n  \\\"honour\\\": 2,\\r\\n  \\\"honoured\\\": 2,\\r\\n  \\\"honouring\\\": 2,\\r\\n  \\\"hooligan\\\": -2,\\r\\n  \\\"hooliganism\\\": -2,\\r\\n  \\\"hooligans\\\": -2,\\r\\n  \\\"hope\\\": 2,\\r\\n  \\\"hopeful\\\": 2,\\r\\n  \\\"hopefully\\\": 2,\\r\\n  \\\"hopeless\\\": -2,\\r\\n  \\\"hopelessness\\\": -2,\\r\\n  \\\"hopes\\\": 2,\\r\\n  \\\"hoping\\\": 2,\\r\\n  \\\"horrendous\\\": -3,\\r\\n  \\\"horrible\\\": -3,\\r\\n  \\\"horrific\\\": -3,\\r\\n  \\\"horrified\\\": -3,\\r\\n  \\\"hostile\\\": -2,\\r\\n  \\\"huckster\\\": -2,\\r\\n  \\\"hug\\\": 2,\\r\\n  \\\"huge\\\": 1,\\r\\n  \\\"hugs\\\": 2,\\r\\n  \\\"humerous\\\": 3,\\r\\n  \\\"humiliated\\\": -3,\\r\\n  \\\"humiliation\\\": -3,\\r\\n  \\\"humor\\\": 2,\\r\\n  \\\"humorous\\\": 2,\\r\\n  \\\"humour\\\": 2,\\r\\n  \\\"humourous\\\": 2,\\r\\n  \\\"hunger\\\": -2,\\r\\n  \\\"hurrah\\\": 5,\\r\\n  \\\"hurt\\\": -2,\\r\\n  \\\"hurting\\\": -2,\\r\\n  \\\"hurts\\\": -2,\\r\\n  \\\"hypocritical\\\": -2,\\r\\n  \\\"hysteria\\\": -3,\\r\\n  \\\"hysterical\\\": -3,\\r\\n  \\\"hysterics\\\": -3,\\r\\n  \\\"harming\\\": -2,\\r\\n  \\\"idiot\\\": -3,\\r\\n  \\\"idiotic\\\": -3,\\r\\n  \\\"ignorance\\\": -2,\\r\\n  \\\"ignorant\\\": -2,\\r\\n  \\\"ignore\\\": -1,\\r\\n  \\\"ignored\\\": -2,\\r\\n  \\\"ignores\\\": -1,\\r\\n  \\\"ill\\\": -2,\\r\\n  \\\"illegal\\\": -3,\\r\\n  \\\"illiteracy\\\": -2,\\r\\n  \\\"illness\\\": -2,\\r\\n  \\\"illnesses\\\": -2,\\r\\n  \\\"imbecile\\\": -3,\\r\\n  \\\"immobilized\\\": -1,\\r\\n  \\\"immortal\\\": 2,\\r\\n  \\\"immune\\\": 1,\\r\\n  \\\"impatient\\\": -2,\\r\\n  \\\"imperfect\\\": -2,\\r\\n  \\\"importance\\\": 2,\\r\\n  \\\"important\\\": 2,\\r\\n  \\\"impose\\\": -1,\\r\\n  \\\"imposed\\\": -1,\\r\\n  \\\"imposes\\\": -1,\\r\\n  \\\"imposing\\\": -1,\\r\\n  \\\"impotent\\\": -2,\\r\\n  \\\"impress\\\": 3,\\r\\n  \\\"impressed\\\": 3,\\r\\n  \\\"impresses\\\": 3,\\r\\n  \\\"impressive\\\": 3,\\r\\n  \\\"imprisoned\\\": -2,\\r\\n  \\\"improve\\\": 2,\\r\\n  \\\"improved\\\": 2,\\r\\n  \\\"improvement\\\": 2,\\r\\n  \\\"improves\\\": 2,\\r\\n  \\\"improving\\\": 2,\\r\\n  \\\"inability\\\": -2,\\r\\n  \\\"inaction\\\": -2,\\r\\n  \\\"inadequate\\\": -2,\\r\\n  \\\"incapable\\\": -2,\\r\\n  \\\"incapacitated\\\": -2,\\r\\n  \\\"incensed\\\": -2,\\r\\n  \\\"incompetence\\\": -2,\\r\\n  \\\"incompetent\\\": -2,\\r\\n  \\\"inconsiderate\\\": -2,\\r\\n  \\\"inconvenience\\\": -2,\\r\\n  \\\"inconvenient\\\": -2,\\r\\n  \\\"increase\\\": 1,\\r\\n  \\\"increased\\\": 1,\\r\\n  \\\"indecisive\\\": -2,\\r\\n  \\\"indestructible\\\": 2,\\r\\n  \\\"indifference\\\": -2,\\r\\n  \\\"indifferent\\\": -2,\\r\\n  \\\"indignant\\\": -2,\\r\\n  \\\"indignation\\\": -2,\\r\\n  \\\"indoctrinate\\\": -2,\\r\\n  \\\"indoctrinated\\\": -2,\\r\\n  \\\"indoctrinates\\\": -2,\\r\\n  \\\"indoctrinating\\\": -2,\\r\\n  \\\"ineffective\\\": -2,\\r\\n  \\\"ineffectively\\\": -2,\\r\\n  \\\"infatuated\\\": 2,\\r\\n  \\\"infatuation\\\": 2,\\r\\n  \\\"infected\\\": -2,\\r\\n  \\\"inferior\\\": -2,\\r\\n  \\\"inflamed\\\": -2,\\r\\n  \\\"influential\\\": 2,\\r\\n  \\\"infringement\\\": -2,\\r\\n  \\\"infuriate\\\": -2,\\r\\n  \\\"infuriated\\\": -2,\\r\\n  \\\"infuriates\\\": -2,\\r\\n  \\\"infuriating\\\": -2,\\r\\n  \\\"inhibit\\\": -1,\\r\\n  \\\"injured\\\": -2,\\r\\n  \\\"injury\\\": -2,\\r\\n  \\\"injustice\\\": -2,\\r\\n  \\\"innovate\\\": 1,\\r\\n  \\\"innovates\\\": 1,\\r\\n  \\\"innovation\\\": 1,\\r\\n  \\\"innovative\\\": 2,\\r\\n  \\\"inquisition\\\": -2,\\r\\n  \\\"inquisitive\\\": 2,\\r\\n  \\\"insane\\\": -2,\\r\\n  \\\"insanity\\\": -2,\\r\\n  \\\"insecure\\\": -2,\\r\\n  \\\"insensitive\\\": -2,\\r\\n  \\\"insensitivity\\\": -2,\\r\\n  \\\"insignificant\\\": -2,\\r\\n  \\\"insipid\\\": -2,\\r\\n  \\\"inspiration\\\": 2,\\r\\n  \\\"inspirational\\\": 2,\\r\\n  \\\"inspire\\\": 2,\\r\\n  \\\"inspired\\\": 2,\\r\\n  \\\"inspires\\\": 2,\\r\\n  \\\"inspiring\\\": 3,\\r\\n  \\\"insult\\\": -2,\\r\\n  \\\"insulted\\\": -2,\\r\\n  \\\"insulting\\\": -2,\\r\\n  \\\"insults\\\": -2,\\r\\n  \\\"intact\\\": 2,\\r\\n  \\\"integrity\\\": 2,\\r\\n  \\\"intelligent\\\": 2,\\r\\n  \\\"intense\\\": 1,\\r\\n  \\\"interest\\\": 1,\\r\\n  \\\"interested\\\": 2,\\r\\n  \\\"interesting\\\": 2,\\r\\n  \\\"interests\\\": 1,\\r\\n  \\\"interrogated\\\": -2,\\r\\n  \\\"interrupt\\\": -2,\\r\\n  \\\"interrupted\\\": -2,\\r\\n  \\\"interrupting\\\": -2,\\r\\n  \\\"interruption\\\": -2,\\r\\n  \\\"interrupts\\\": -2,\\r\\n  \\\"intimidate\\\": -2,\\r\\n  \\\"intimidated\\\": -2,\\r\\n  \\\"intimidates\\\": -2,\\r\\n  \\\"intimidating\\\": -2,\\r\\n  \\\"intimidation\\\": -2,\\r\\n  \\\"intricate\\\": 2,\\r\\n  \\\"intrigues\\\": 1,\\r\\n  \\\"invincible\\\": 2,\\r\\n  \\\"invite\\\": 1,\\r\\n  \\\"inviting\\\": 1,\\r\\n  \\\"invulnerable\\\": 2,\\r\\n  \\\"irate\\\": -3,\\r\\n  \\\"ironic\\\": -1,\\r\\n  \\\"irony\\\": -1,\\r\\n  \\\"irrational\\\": -1,\\r\\n  \\\"irresistible\\\": 2,\\r\\n  \\\"irresolute\\\": -2,\\r\\n  \\\"irresponsible\\\": 2,\\r\\n  \\\"irreversible\\\": -1,\\r\\n  \\\"irritate\\\": -3,\\r\\n  \\\"irritated\\\": -3,\\r\\n  \\\"irritating\\\": -3,\\r\\n  \\\"isolated\\\": -1,\\r\\n  \\\"itchy\\\": -2,\\r\\n  \\\"jackass\\\": -4,\\r\\n  \\\"jackasses\\\": -4,\\r\\n  \\\"jaunty\\\": 2,\\r\\n  \\\"jealous\\\": -2,\\r\\n  \\\"jeopardy\\\": -2,\\r\\n  \\\"jerk\\\": -3,\\r\\n  \\\"jesus\\\": 1,\\r\\n  \\\"jewel\\\": 1,\\r\\n  \\\"jewels\\\": 1,\\r\\n  \\\"jocular\\\": 2,\\r\\n  \\\"join\\\": 1,\\r\\n  \\\"joke\\\": 2,\\r\\n  \\\"jokes\\\": 2,\\r\\n  \\\"jolly\\\": 2,\\r\\n  \\\"jovial\\\": 2,\\r\\n  \\\"joy\\\": 3,\\r\\n  \\\"joyful\\\": 3,\\r\\n  \\\"joyfully\\\": 3,\\r\\n  \\\"joyless\\\": -2,\\r\\n  \\\"joyous\\\": 3,\\r\\n  \\\"jubilant\\\": 3,\\r\\n  \\\"jumpy\\\": -1,\\r\\n  \\\"justice\\\": 2,\\r\\n  \\\"justifiably\\\": 2,\\r\\n  \\\"justified\\\": 2,\\r\\n  \\\"jailed\\\": -2,\\r\\n  \\\"kill\\\": -3,\\r\\n  \\\"killed\\\": -3,\\r\\n  \\\"kills\\\": -3,\\r\\n  \\\"kind\\\": 2,\\r\\n  \\\"kinder\\\": 2,\\r\\n  \\\"kiss\\\": 2,\\r\\n  \\\"kudos\\\": 3,\\r\\n  \\\"keen\\\": 1,\\r\\n  \\\"killing\\\": -3,\\r\\n  \\\"loathe\\\": -3,\\r\\n  \\\"lag\\\": -1,\\r\\n  \\\"lags\\\": -2,\\r\\n  \\\"lame\\\": -2,\\r\\n  \\\"landmark\\\": 2,\\r\\n  \\\"laugh\\\": 1,\\r\\n  \\\"laughed\\\": 1,\\r\\n  \\\"laughing\\\": 1,\\r\\n  \\\"laughs\\\": 1,\\r\\n  \\\"laughting\\\": 1,\\r\\n  \\\"launched\\\": 1,\\r\\n  \\\"lawl\\\": 3,\\r\\n  \\\"lawsuit\\\": -2,\\r\\n  \\\"lawsuits\\\": -2,\\r\\n  \\\"lazy\\\": -1,\\r\\n  \\\"leak\\\": -1,\\r\\n  \\\"leaked\\\": -1,\\r\\n  \\\"leave\\\": -1,\\r\\n  \\\"legal\\\": 1,\\r\\n  \\\"legally\\\": 1,\\r\\n  \\\"lenient\\\": 1,\\r\\n  \\\"lethargic\\\": -2,\\r\\n  \\\"lethargy\\\": -2,\\r\\n  \\\"liar\\\": -3,\\r\\n  \\\"liars\\\": -3,\\r\\n  \\\"libelous\\\": -2,\\r\\n  \\\"lied\\\": -2,\\r\\n  \\\"lifesaver\\\": 4,\\r\\n  \\\"lighthearted\\\": 1,\\r\\n  \\\"like\\\": 2,\\r\\n  \\\"liked\\\": 2,\\r\\n  \\\"likes\\\": 2,\\r\\n  \\\"limitation\\\": -1,\\r\\n  \\\"limited\\\": -1,\\r\\n  \\\"limits\\\": -1,\\r\\n  \\\"litigation\\\": -1,\\r\\n  \\\"litigious\\\": -2,\\r\\n  \\\"lively\\\": 2,\\r\\n  \\\"livid\\\": -2,\\r\\n  \\\"lmao\\\": 4,\\r\\n  \\\"lmfao\\\": 4,\\r\\n  \\\"lagging\\\": -2,\\r\\n  \\\"loathed\\\": -3,\\r\\n  \\\"loathes\\\": -3,\\r\\n  \\\"loathing\\\": -3,\\r\\n  \\\"lobby\\\": -2,\\r\\n  \\\"lobbying\\\": -2,\\r\\n  \\\"lol\\\": 3,\\r\\n  \\\"lonely\\\": -2,\\r\\n  \\\"lonesome\\\": -2,\\r\\n  \\\"longing\\\": -1,\\r\\n  \\\"loom\\\": -1,\\r\\n  \\\"loomed\\\": -1,\\r\\n  \\\"looming\\\": -1,\\r\\n  \\\"looms\\\": -1,\\r\\n  \\\"loose\\\": -3,\\r\\n  \\\"looses\\\": -3,\\r\\n  \\\"loser\\\": -3,\\r\\n  \\\"losing\\\": -3,\\r\\n  \\\"loss\\\": -3,\\r\\n  \\\"lost\\\": -3,\\r\\n  \\\"lovable\\\": 3,\\r\\n  \\\"love\\\": 3,\\r\\n  \\\"loved\\\": 3,\\r\\n  \\\"lovelies\\\": 3,\\r\\n  \\\"lovely\\\": 3,\\r\\n  \\\"loving\\\": 2,\\r\\n  \\\"lowest\\\": -1,\\r\\n  \\\"loyal\\\": 3,\\r\\n  \\\"loyalty\\\": 3,\\r\\n  \\\"luck\\\": 3,\\r\\n  \\\"luckily\\\": 3,\\r\\n  \\\"lucky\\\": 3,\\r\\n  \\\"lugubrious\\\": -2,\\r\\n  \\\"lunatic\\\": -3,\\r\\n  \\\"lunatics\\\": -3,\\r\\n  \\\"lurk\\\": -1,\\r\\n  \\\"lurking\\\": -1,\\r\\n  \\\"lurks\\\": -1,\\r\\n  \\\"lackadaisical\\\": -2,\\r\\n  \\\"lagged\\\": -2,\\r\\n  \\\"lack\\\": -2,\\r\\n  \\\"made-up\\\": -1,\\r\\n  \\\"madly\\\": -3,\\r\\n  \\\"madness\\\": -3,\\r\\n  \\\"mandatory\\\": -1,\\r\\n  \\\"manipulated\\\": -1,\\r\\n  \\\"manipulating\\\": -1,\\r\\n  \\\"manipulation\\\": -1,\\r\\n  \\\"marvel\\\": 3,\\r\\n  \\\"marvelous\\\": 3,\\r\\n  \\\"marvels\\\": 3,\\r\\n  \\\"masterpiece\\\": 4,\\r\\n  \\\"masterpieces\\\": 4,\\r\\n  \\\"matter\\\": 1,\\r\\n  \\\"matters\\\": 1,\\r\\n  \\\"mature\\\": 2,\\r\\n  \\\"meaningful\\\": 2,\\r\\n  \\\"meaningless\\\": -2,\\r\\n  \\\"medal\\\": 3,\\r\\n  \\\"mediocrity\\\": -3,\\r\\n  \\\"meditative\\\": 1,\\r\\n  \\\"melancholy\\\": -2,\\r\\n  \\\"menace\\\": -2,\\r\\n  \\\"menaced\\\": -2,\\r\\n  \\\"mercy\\\": 2,\\r\\n  \\\"mad\\\": -3,\\r\\n  \\\"mess\\\": -2,\\r\\n  \\\"messed\\\": -2,\\r\\n  \\\"messing up\\\": -2,\\r\\n  \\\"methodical\\\": 2,\\r\\n  \\\"mindless\\\": -2,\\r\\n  \\\"miracle\\\": 4,\\r\\n  \\\"mirth\\\": 3,\\r\\n  \\\"mirthful\\\": 3,\\r\\n  \\\"mirthfully\\\": 3,\\r\\n  \\\"misbehave\\\": -2,\\r\\n  \\\"misbehaved\\\": -2,\\r\\n  \\\"misbehaves\\\": -2,\\r\\n  \\\"misbehaving\\\": -2,\\r\\n  \\\"mischief\\\": -1,\\r\\n  \\\"mischiefs\\\": -1,\\r\\n  \\\"miserable\\\": -3,\\r\\n  \\\"misery\\\": -2,\\r\\n  \\\"misgiving\\\": -2,\\r\\n  \\\"misinformation\\\": -2,\\r\\n  \\\"misinformed\\\": -2,\\r\\n  \\\"misinterpreted\\\": -2,\\r\\n  \\\"misleading\\\": -3,\\r\\n  \\\"misread\\\": -1,\\r\\n  \\\"misreporting\\\": -2,\\r\\n  \\\"misrepresentation\\\": -2,\\r\\n  \\\"miss\\\": -2,\\r\\n  \\\"missed\\\": -2,\\r\\n  \\\"missing\\\": -2,\\r\\n  \\\"mistake\\\": -2,\\r\\n  \\\"mistaken\\\": -2,\\r\\n  \\\"mistakes\\\": -2,\\r\\n  \\\"mistaking\\\": -2,\\r\\n  \\\"misunderstand\\\": -2,\\r\\n  \\\"misunderstanding\\\": -2,\\r\\n  \\\"misunderstands\\\": -2,\\r\\n  \\\"misunderstood\\\": -2,\\r\\n  \\\"moan\\\": -2,\\r\\n  \\\"moaned\\\": -2,\\r\\n  \\\"moaning\\\": -2,\\r\\n  \\\"moans\\\": -2,\\r\\n  \\\"mock\\\": -2,\\r\\n  \\\"mocked\\\": -2,\\r\\n  \\\"mocking\\\": -2,\\r\\n  \\\"mocks\\\": -2,\\r\\n  \\\"mongering\\\": -2,\\r\\n  \\\"monopolize\\\": -2,\\r\\n  \\\"monopolized\\\": -2,\\r\\n  \\\"monopolizes\\\": -2,\\r\\n  \\\"monopolizing\\\": -2,\\r\\n  \\\"moody\\\": -1,\\r\\n  \\\"mope\\\": -1,\\r\\n  \\\"moping\\\": -1,\\r\\n  \\\"moron\\\": -3,\\r\\n  \\\"motherfucker\\\": -5,\\r\\n  \\\"motherfucking\\\": -5,\\r\\n  \\\"motivate\\\": 1,\\r\\n  \\\"motivated\\\": 2,\\r\\n  \\\"motivating\\\": 2,\\r\\n  \\\"motivation\\\": 1,\\r\\n  \\\"mourn\\\": -2,\\r\\n  \\\"mourned\\\": -2,\\r\\n  \\\"mournful\\\": -2,\\r\\n  \\\"mourning\\\": -2,\\r\\n  \\\"mourns\\\": -2,\\r\\n  \\\"mumpish\\\": -2,\\r\\n  \\\"murder\\\": -2,\\r\\n  \\\"murderer\\\": -2,\\r\\n  \\\"murdering\\\": -3,\\r\\n  \\\"murderous\\\": -3,\\r\\n  \\\"murders\\\": -2,\\r\\n  \\\"myth\\\": -1,\\r\\n  \\\"maddening\\\": -3,\\r\\n  \\\"merry\\\": 3,\\r\\n  \\\"naive\\\": -2,\\r\\n  \\\"natural\\\": 1,\\r\\n  \\\"na�ve\\\": -2,\\r\\n  \\\"needy\\\": -2,\\r\\n  \\\"negative\\\": -2,\\r\\n  \\\"negativity\\\": -2,\\r\\n  \\\"neglect\\\": -2,\\r\\n  \\\"neglected\\\": -2,\\r\\n  \\\"neglecting\\\": -2,\\r\\n  \\\"neglects\\\": -2,\\r\\n  \\\"nerves\\\": -1,\\r\\n  \\\"nervous\\\": -2,\\r\\n  \\\"nervously\\\": -2,\\r\\n  \\\"nice\\\": 3,\\r\\n  \\\"nifty\\\": 2,\\r\\n  \\\"nasty\\\": -3,\\r\\n  \\\"nigger\\\": -5,\\r\\n  \\\"no\\\": -1,\\r\\n  \\\"no fun\\\": -3,\\r\\n  \\\"noble\\\": 2,\\r\\n  \\\"noisy\\\": -1,\\r\\n  \\\"nonsense\\\": -2,\\r\\n  \\\"noob\\\": -2,\\r\\n  \\\"nosey\\\": -2,\\r\\n  \\\"not good\\\": -2,\\r\\n  \\\"not working\\\": -3,\\r\\n  \\\"notorious\\\": -2,\\r\\n  \\\"novel\\\": 2,\\r\\n  \\\"numb\\\": -1,\\r\\n  \\\"nuts\\\": -3,\\r\\n  \\\"n00b\\\": -2,\\r\\n  \\\"niggas\\\": -5,\\r\\n  \\\"obliterated\\\": -2,\\r\\n  \\\"obnoxious\\\": -3,\\r\\n  \\\"obscene\\\": -2,\\r\\n  \\\"obsessed\\\": 2,\\r\\n  \\\"obsolete\\\": -2,\\r\\n  \\\"obstacle\\\": -2,\\r\\n  \\\"obstacles\\\": -2,\\r\\n  \\\"obstinate\\\": -2,\\r\\n  \\\"odd\\\": -2,\\r\\n  \\\"offend\\\": -2,\\r\\n  \\\"offended\\\": -2,\\r\\n  \\\"offender\\\": -2,\\r\\n  \\\"offending\\\": -2,\\r\\n  \\\"offends\\\": -2,\\r\\n  \\\"offline\\\": -1,\\r\\n  \\\"oks\\\": 2,\\r\\n  \\\"ominous\\\": 3,\\r\\n  \\\"once-in-a-lifetime\\\": 3,\\r\\n  \\\"opportunities\\\": 2,\\r\\n  \\\"opportunity\\\": 2,\\r\\n  \\\"oppressed\\\": -2,\\r\\n  \\\"oppressive\\\": -2,\\r\\n  \\\"optimism\\\": 2,\\r\\n  \\\"optimistic\\\": 2,\\r\\n  \\\"optionless\\\": -2,\\r\\n  \\\"outcry\\\": -2,\\r\\n  \\\"outmaneuvered\\\": -2,\\r\\n  \\\"outrage\\\": -3,\\r\\n  \\\"outraged\\\": -3,\\r\\n  \\\"outreach\\\": 2,\\r\\n  \\\"outstanding\\\": 5,\\r\\n  \\\"overjoyed\\\": 4,\\r\\n  \\\"overload\\\": -1,\\r\\n  \\\"overlooked\\\": -1,\\r\\n  \\\"overreact\\\": -2,\\r\\n  \\\"overreacted\\\": -2,\\r\\n  \\\"overreaction\\\": -2,\\r\\n  \\\"overreacts\\\": -2,\\r\\n  \\\"oversell\\\": -2,\\r\\n  \\\"overselling\\\": -2,\\r\\n  \\\"oversells\\\": -2,\\r\\n  \\\"oversimplification\\\": -2,\\r\\n  \\\"oversimplified\\\": -2,\\r\\n  \\\"oversimplifies\\\": -2,\\r\\n  \\\"oversimplify\\\": -2,\\r\\n  \\\"overstatement\\\": -2,\\r\\n  \\\"overstatements\\\": -2,\\r\\n  \\\"overweight\\\": -1,\\r\\n  \\\"oxymoron\\\": -1,\\r\\n  \\\"obliterate\\\": -2,\\r\\n  \\\"punished\\\": -2,\\r\\n  \\\"pained\\\": -2,\\r\\n  \\\"panicked\\\": -3,\\r\\n  \\\"pain\\\": -2,\\r\\n  \\\"paradise\\\": 3,\\r\\n  \\\"paradox\\\": -1,\\r\\n  \\\"pardon\\\": 2,\\r\\n  \\\"pardoned\\\": 2,\\r\\n  \\\"pardoning\\\": 2,\\r\\n  \\\"pardons\\\": 2,\\r\\n  \\\"parley\\\": -1,\\r\\n  \\\"passionate\\\": 2,\\r\\n  \\\"passive\\\": -1,\\r\\n  \\\"passively\\\": -1,\\r\\n  \\\"pathetic\\\": -2,\\r\\n  \\\"pay\\\": -1,\\r\\n  \\\"peace\\\": 2,\\r\\n  \\\"peaceful\\\": 2,\\r\\n  \\\"peacefully\\\": 2,\\r\\n  \\\"penalty\\\": -2,\\r\\n  \\\"pensive\\\": -1,\\r\\n  \\\"perfect\\\": 3,\\r\\n  \\\"perfected\\\": 2,\\r\\n  \\\"perfectly\\\": 3,\\r\\n  \\\"perfects\\\": 2,\\r\\n  \\\"peril\\\": -2,\\r\\n  \\\"perjury\\\": -3,\\r\\n  \\\"perpetrator\\\": -2,\\r\\n  \\\"perpetrators\\\": -2,\\r\\n  \\\"perplexed\\\": -2,\\r\\n  \\\"persecute\\\": -2,\\r\\n  \\\"persecuted\\\": -2,\\r\\n  \\\"persecutes\\\": -2,\\r\\n  \\\"persecuting\\\": -2,\\r\\n  \\\"perturbed\\\": -2,\\r\\n  \\\"pesky\\\": -2,\\r\\n  \\\"pessimism\\\": -2,\\r\\n  \\\"pessimistic\\\": -2,\\r\\n  \\\"petrified\\\": -2,\\r\\n  \\\"phobic\\\": -2,\\r\\n  \\\"picturesque\\\": 2,\\r\\n  \\\"pileup\\\": -1,\\r\\n  \\\"pique\\\": -2,\\r\\n  \\\"piqued\\\": -2,\\r\\n  \\\"piss\\\": -4,\\r\\n  \\\"pissed\\\": -4,\\r\\n  \\\"pissing\\\": -3,\\r\\n  \\\"piteous\\\": -2,\\r\\n  \\\"pitied\\\": -1,\\r\\n  \\\"pity\\\": -2,\\r\\n  \\\"playful\\\": 2,\\r\\n  \\\"pleasant\\\": 3,\\r\\n  \\\"please\\\": 1,\\r\\n  \\\"pleased\\\": 3,\\r\\n  \\\"pleasure\\\": 3,\\r\\n  \\\"poised\\\": -2,\\r\\n  \\\"poison\\\": -2,\\r\\n  \\\"poisoned\\\": -2,\\r\\n  \\\"poisons\\\": -2,\\r\\n  \\\"pollute\\\": -2,\\r\\n  \\\"polluted\\\": -2,\\r\\n  \\\"polluter\\\": -2,\\r\\n  \\\"polluters\\\": -2,\\r\\n  \\\"pollutes\\\": -2,\\r\\n  \\\"poor\\\": -2,\\r\\n  \\\"poorer\\\": -2,\\r\\n  \\\"poorest\\\": -2,\\r\\n  \\\"popular\\\": 3,\\r\\n  \\\"positive\\\": 2,\\r\\n  \\\"positively\\\": 2,\\r\\n  \\\"possessive\\\": -2,\\r\\n  \\\"postpone\\\": -1,\\r\\n  \\\"postponed\\\": -1,\\r\\n  \\\"postpones\\\": -1,\\r\\n  \\\"postponing\\\": -1,\\r\\n  \\\"poverty\\\": -1,\\r\\n  \\\"powerful\\\": 2,\\r\\n  \\\"powerless\\\": -2,\\r\\n  \\\"praise\\\": 3,\\r\\n  \\\"praised\\\": 3,\\r\\n  \\\"praises\\\": 3,\\r\\n  \\\"praising\\\": 3,\\r\\n  \\\"pray\\\": 1,\\r\\n  \\\"praying\\\": 1,\\r\\n  \\\"prays\\\": 1,\\r\\n  \\\"prblm\\\": -2,\\r\\n  \\\"prblms\\\": -2,\\r\\n  \\\"prepared\\\": 1,\\r\\n  \\\"pressure\\\": -1,\\r\\n  \\\"pressured\\\": -2,\\r\\n  \\\"pretend\\\": -1,\\r\\n  \\\"pretending\\\": -1,\\r\\n  \\\"pretends\\\": -1,\\r\\n  \\\"pretty\\\": 1,\\r\\n  \\\"prevent\\\": -1,\\r\\n  \\\"prevented\\\": -1,\\r\\n  \\\"preventing\\\": -1,\\r\\n  \\\"prevents\\\": -1,\\r\\n  \\\"prick\\\": -5,\\r\\n  \\\"prison\\\": -2,\\r\\n  \\\"prisoner\\\": -2,\\r\\n  \\\"prisoners\\\": -2,\\r\\n  \\\"privileged\\\": 2,\\r\\n  \\\"proactive\\\": 2,\\r\\n  \\\"problem\\\": -2,\\r\\n  \\\"problems\\\": -2,\\r\\n  \\\"profiteer\\\": -2,\\r\\n  \\\"progress\\\": 2,\\r\\n  \\\"prominent\\\": 2,\\r\\n  \\\"promise\\\": 1,\\r\\n  \\\"promised\\\": 1,\\r\\n  \\\"promises\\\": 1,\\r\\n  \\\"promote\\\": 1,\\r\\n  \\\"promoted\\\": 1,\\r\\n  \\\"promotes\\\": 1,\\r\\n  \\\"promoting\\\": 1,\\r\\n  \\\"propaganda\\\": -2,\\r\\n  \\\"prosecute\\\": -1,\\r\\n  \\\"prosecuted\\\": -2,\\r\\n  \\\"prosecutes\\\": -1,\\r\\n  \\\"prosecution\\\": -1,\\r\\n  \\\"prospect\\\": 1,\\r\\n  \\\"prospects\\\": 1,\\r\\n  \\\"prosperous\\\": 3,\\r\\n  \\\"protect\\\": 1,\\r\\n  \\\"protected\\\": 1,\\r\\n  \\\"protects\\\": 1,\\r\\n  \\\"protest\\\": -2,\\r\\n  \\\"protesters\\\": -2,\\r\\n  \\\"protesting\\\": -2,\\r\\n  \\\"protests\\\": -2,\\r\\n  \\\"proud\\\": 2,\\r\\n  \\\"proudly\\\": 2,\\r\\n  \\\"provoke\\\": -1,\\r\\n  \\\"provoked\\\": -1,\\r\\n  \\\"provokes\\\": -1,\\r\\n  \\\"provoking\\\": -1,\\r\\n  \\\"pseudoscience\\\": -3,\\r\\n  \\\"punish\\\": -2,\\r\\n  \\\"panic\\\": -3,\\r\\n  \\\"punishes\\\": -2,\\r\\n  \\\"punitive\\\": -2,\\r\\n  \\\"pushy\\\": -1,\\r\\n  \\\"puzzled\\\": -2,\\r\\n  \\\"panics\\\": -3,\\r\\n  \\\"quaking\\\": -2,\\r\\n  \\\"questioned\\\": -1,\\r\\n  \\\"questioning\\\": -1,\\r\\n  \\\"questionable\\\": -2,\\r\\n  \\\"resign\\\": -1,\\r\\n  \\\"racist\\\": -3,\\r\\n  \\\"rage\\\": -2,\\r\\n  \\\"rageful\\\": -2,\\r\\n  \\\"rainy\\\": -1,\\r\\n  \\\"rant\\\": -3,\\r\\n  \\\"ranter\\\": -3,\\r\\n  \\\"ranters\\\": -3,\\r\\n  \\\"rants\\\": -3,\\r\\n  \\\"rape\\\": -4,\\r\\n  \\\"rapist\\\": -4,\\r\\n  \\\"rapture\\\": 2,\\r\\n  \\\"raptured\\\": 2,\\r\\n  \\\"raptures\\\": 2,\\r\\n  \\\"rapturous\\\": 4,\\r\\n  \\\"rash\\\": -2,\\r\\n  \\\"ratified\\\": 2,\\r\\n  \\\"reach\\\": 1,\\r\\n  \\\"reached\\\": 1,\\r\\n  \\\"reaches\\\": 1,\\r\\n  \\\"reaching\\\": 1,\\r\\n  \\\"reassure\\\": 1,\\r\\n  \\\"reassured\\\": 1,\\r\\n  \\\"reassures\\\": 1,\\r\\n  \\\"reassuring\\\": 2,\\r\\n  \\\"rebellion\\\": -2,\\r\\n  \\\"recession\\\": -2,\\r\\n  \\\"reckless\\\": -2,\\r\\n  \\\"recommend\\\": 2,\\r\\n  \\\"recommended\\\": 2,\\r\\n  \\\"recommends\\\": 2,\\r\\n  \\\"redeemed\\\": 2,\\r\\n  \\\"refuse\\\": -2,\\r\\n  \\\"refused\\\": -2,\\r\\n  \\\"refusing\\\": -2,\\r\\n  \\\"regret\\\": -2,\\r\\n  \\\"regretful\\\": -2,\\r\\n  \\\"regrets\\\": -2,\\r\\n  \\\"regretted\\\": -2,\\r\\n  \\\"regretting\\\": -2,\\r\\n  \\\"reject\\\": -1,\\r\\n  \\\"rejected\\\": -1,\\r\\n  \\\"rejecting\\\": -1,\\r\\n  \\\"rejects\\\": -1,\\r\\n  \\\"rejoice\\\": 4,\\r\\n  \\\"rejoiced\\\": 4,\\r\\n  \\\"rejoices\\\": 4,\\r\\n  \\\"rejoicing\\\": 4,\\r\\n  \\\"relaxed\\\": 2,\\r\\n  \\\"relentless\\\": -1,\\r\\n  \\\"reliant\\\": 2,\\r\\n  \\\"relieve\\\": 1,\\r\\n  \\\"relieved\\\": 2,\\r\\n  \\\"relieves\\\": 1,\\r\\n  \\\"relieving\\\": 2,\\r\\n  \\\"relishing\\\": 2,\\r\\n  \\\"remarkable\\\": 2,\\r\\n  \\\"remorse\\\": -2,\\r\\n  \\\"repulse\\\": -1,\\r\\n  \\\"repulsed\\\": -2,\\r\\n  \\\"rescue\\\": 2,\\r\\n  \\\"rescued\\\": 2,\\r\\n  \\\"racism\\\": -3,\\r\\n  \\\"resentful\\\": -2,\\r\\n  \\\"racists\\\": -3,\\r\\n  \\\"resigned\\\": -1,\\r\\n  \\\"resigning\\\": -1,\\r\\n  \\\"resigns\\\": -1,\\r\\n  \\\"resolute\\\": 2,\\r\\n  \\\"resolve\\\": 2,\\r\\n  \\\"resolved\\\": 2,\\r\\n  \\\"resolves\\\": 2,\\r\\n  \\\"resolving\\\": 2,\\r\\n  \\\"respected\\\": 2,\\r\\n  \\\"responsible\\\": 2,\\r\\n  \\\"responsive\\\": 2,\\r\\n  \\\"restful\\\": 2,\\r\\n  \\\"restless\\\": -2,\\r\\n  \\\"restore\\\": 1,\\r\\n  \\\"restored\\\": 1,\\r\\n  \\\"restores\\\": 1,\\r\\n  \\\"restoring\\\": 1,\\r\\n  \\\"restrict\\\": -2,\\r\\n  \\\"restricted\\\": -2,\\r\\n  \\\"restricting\\\": -2,\\r\\n  \\\"restriction\\\": -2,\\r\\n  \\\"restricts\\\": -2,\\r\\n  \\\"retained\\\": -1,\\r\\n  \\\"retard\\\": -2,\\r\\n  \\\"retarded\\\": -2,\\r\\n  \\\"retreat\\\": -1,\\r\\n  \\\"revenge\\\": -2,\\r\\n  \\\"revengeful\\\": -2,\\r\\n  \\\"revered\\\": 2,\\r\\n  \\\"revive\\\": 2,\\r\\n  \\\"revives\\\": 2,\\r\\n  \\\"reward\\\": 2,\\r\\n  \\\"rewarded\\\": 2,\\r\\n  \\\"rewarding\\\": 2,\\r\\n  \\\"rewards\\\": 2,\\r\\n  \\\"rich\\\": 2,\\r\\n  \\\"ridiculous\\\": -3,\\r\\n  \\\"rig\\\": -1,\\r\\n  \\\"rigged\\\": -1,\\r\\n  \\\"right direction\\\": 3,\\r\\n  \\\"rigorous\\\": 3,\\r\\n  \\\"rigorously\\\": 3,\\r\\n  \\\"riot\\\": -2,\\r\\n  \\\"riots\\\": -2,\\r\\n  \\\"risk\\\": -2,\\r\\n  \\\"risks\\\": -2,\\r\\n  \\\"rob\\\": -2,\\r\\n  \\\"robber\\\": -2,\\r\\n  \\\"robed\\\": -2,\\r\\n  \\\"robing\\\": -2,\\r\\n  \\\"robs\\\": -2,\\r\\n  \\\"robust\\\": 2,\\r\\n  \\\"rofl\\\": 4,\\r\\n  \\\"roflcopter\\\": 4,\\r\\n  \\\"roflmao\\\": 4,\\r\\n  \\\"romance\\\": 2,\\r\\n  \\\"rotfl\\\": 4,\\r\\n  \\\"rotflmfao\\\": 4,\\r\\n  \\\"rotflol\\\": 4,\\r\\n  \\\"ruin\\\": -2,\\r\\n  \\\"ruined\\\": -2,\\r\\n  \\\"ruining\\\": -2,\\r\\n  \\\"ruins\\\": -2,\\r\\n  \\\"rescues\\\": 2,\\r\\n  \\\"sabotage\\\": -2,\\r\\n  \\\"sad\\\": -2,\\r\\n  \\\"sadden\\\": -2,\\r\\n  \\\"saddened\\\": -2,\\r\\n  \\\"sadly\\\": -2,\\r\\n  \\\"safe\\\": 1,\\r\\n  \\\"safely\\\": 1,\\r\\n  \\\"safety\\\": 1,\\r\\n  \\\"salient\\\": 1,\\r\\n  \\\"sappy\\\": -1,\\r\\n  \\\"sarcastic\\\": -2,\\r\\n  \\\"satisfied\\\": 2,\\r\\n  \\\"save\\\": 2,\\r\\n  \\\"saved\\\": 2,\\r\\n  \\\"scam\\\": -2,\\r\\n  \\\"scams\\\": -2,\\r\\n  \\\"scandal\\\": -3,\\r\\n  \\\"scandalous\\\": -3,\\r\\n  \\\"scandals\\\": -3,\\r\\n  \\\"scapegoat\\\": -2,\\r\\n  \\\"scapegoats\\\": -2,\\r\\n  \\\"scare\\\": -2,\\r\\n  \\\"scared\\\": -2,\\r\\n  \\\"scary\\\": -2,\\r\\n  \\\"sceptical\\\": -2,\\r\\n  \\\"scold\\\": -2,\\r\\n  \\\"scoop\\\": 3,\\r\\n  \\\"scorn\\\": -2,\\r\\n  \\\"scornful\\\": -2,\\r\\n  \\\"scream\\\": -2,\\r\\n  \\\"screamed\\\": -2,\\r\\n  \\\"screaming\\\": -2,\\r\\n  \\\"screams\\\": -2,\\r\\n  \\\"screwed\\\": -2,\\r\\n  \\\"screwed up\\\": -3,\\r\\n  \\\"scumbag\\\": -4,\\r\\n  \\\"secure\\\": 2,\\r\\n  \\\"secured\\\": 2,\\r\\n  \\\"secures\\\": 2,\\r\\n  \\\"sedition\\\": -2,\\r\\n  \\\"seditious\\\": -2,\\r\\n  \\\"seduced\\\": -1,\\r\\n  \\\"self-confident\\\": 2,\\r\\n  \\\"self-deluded\\\": -2,\\r\\n  \\\"selfish\\\": -3,\\r\\n  \\\"selfishness\\\": -3,\\r\\n  \\\"sentence\\\": -2,\\r\\n  \\\"sentenced\\\": -2,\\r\\n  \\\"sentences\\\": -2,\\r\\n  \\\"sentencing\\\": -2,\\r\\n  \\\"serene\\\": 2,\\r\\n  \\\"severe\\\": -2,\\r\\n  \\\"sexy\\\": 3,\\r\\n  \\\"shaky\\\": -2,\\r\\n  \\\"shame\\\": -2,\\r\\n  \\\"shamed\\\": -2,\\r\\n  \\\"shameful\\\": -2,\\r\\n  \\\"share\\\": 1,\\r\\n  \\\"shared\\\": 1,\\r\\n  \\\"shares\\\": 1,\\r\\n  \\\"shattered\\\": -2,\\r\\n  \\\"shit\\\": -4,\\r\\n  \\\"shithead\\\": -4,\\r\\n  \\\"shitty\\\": -3,\\r\\n  \\\"shock\\\": -2,\\r\\n  \\\"shocked\\\": -2,\\r\\n  \\\"shocking\\\": -2,\\r\\n  \\\"shocks\\\": -2,\\r\\n  \\\"shoot\\\": -1,\\r\\n  \\\"short-sighted\\\": -2,\\r\\n  \\\"short-sightedness\\\": -2,\\r\\n  \\\"shortage\\\": -2,\\r\\n  \\\"shortages\\\": -2,\\r\\n  \\\"shrew\\\": -4,\\r\\n  \\\"shy\\\": -1,\\r\\n  \\\"sick\\\": -2,\\r\\n  \\\"sigh\\\": -2,\\r\\n  \\\"significance\\\": 1,\\r\\n  \\\"significant\\\": 1,\\r\\n  \\\"silencing\\\": -1,\\r\\n  \\\"silly\\\": -1,\\r\\n  \\\"sincere\\\": 2,\\r\\n  \\\"sincerely\\\": 2,\\r\\n  \\\"sincerest\\\": 2,\\r\\n  \\\"sincerity\\\": 2,\\r\\n  \\\"sinful\\\": -3,\\r\\n  \\\"singleminded\\\": -2,\\r\\n  \\\"skeptic\\\": -2,\\r\\n  \\\"skeptical\\\": -2,\\r\\n  \\\"skepticism\\\": -2,\\r\\n  \\\"skeptics\\\": -2,\\r\\n  \\\"slam\\\": -2,\\r\\n  \\\"slash\\\": -2,\\r\\n  \\\"slashed\\\": -2,\\r\\n  \\\"slashes\\\": -2,\\r\\n  \\\"slashing\\\": -2,\\r\\n  \\\"slavery\\\": -3,\\r\\n  \\\"sleeplessness\\\": -2,\\r\\n  \\\"slick\\\": 2,\\r\\n  \\\"slicker\\\": 2,\\r\\n  \\\"slickest\\\": 2,\\r\\n  \\\"sluggish\\\": -2,\\r\\n  \\\"slut\\\": -5,\\r\\n  \\\"smart\\\": 1,\\r\\n  \\\"smarter\\\": 2,\\r\\n  \\\"smartest\\\": 2,\\r\\n  \\\"smear\\\": -2,\\r\\n  \\\"smile\\\": 2,\\r\\n  \\\"smiled\\\": 2,\\r\\n  \\\"smiles\\\": 2,\\r\\n  \\\"smiling\\\": 2,\\r\\n  \\\"smog\\\": -2,\\r\\n  \\\"sneaky\\\": -1,\\r\\n  \\\"snub\\\": -2,\\r\\n  \\\"snubbed\\\": -2,\\r\\n  \\\"snubbing\\\": -2,\\r\\n  \\\"snubs\\\": -2,\\r\\n  \\\"sobering\\\": 1,\\r\\n  \\\"solemn\\\": -1,\\r\\n  \\\"solid\\\": 2,\\r\\n  \\\"solidarity\\\": 2,\\r\\n  \\\"solution\\\": 1,\\r\\n  \\\"solutions\\\": 1,\\r\\n  \\\"solve\\\": 1,\\r\\n  \\\"solved\\\": 1,\\r\\n  \\\"solves\\\": 1,\\r\\n  \\\"solving\\\": 1,\\r\\n  \\\"somber\\\": -2,\\r\\n  \\\"some kind\\\": 0,\\r\\n  \\\"son-of-a-bitch\\\": -5,\\r\\n  \\\"soothe\\\": 3,\\r\\n  \\\"soothed\\\": 3,\\r\\n  \\\"soothing\\\": 3,\\r\\n  \\\"sophisticated\\\": 2,\\r\\n  \\\"sore\\\": -1,\\r\\n  \\\"sorrow\\\": -2,\\r\\n  \\\"sorrowful\\\": -2,\\r\\n  \\\"sorry\\\": -1,\\r\\n  \\\"spam\\\": -2,\\r\\n  \\\"spammer\\\": -3,\\r\\n  \\\"spammers\\\": -3,\\r\\n  \\\"spamming\\\": -2,\\r\\n  \\\"spark\\\": 1,\\r\\n  \\\"sparkle\\\": 3,\\r\\n  \\\"sparkles\\\": 3,\\r\\n  \\\"sparkling\\\": 3,\\r\\n  \\\"speculative\\\": -2,\\r\\n  \\\"spirit\\\": 1,\\r\\n  \\\"spirited\\\": 2,\\r\\n  \\\"spiritless\\\": -2,\\r\\n  \\\"spiteful\\\": -2,\\r\\n  \\\"splendid\\\": 3,\\r\\n  \\\"sprightly\\\": 2,\\r\\n  \\\"squelched\\\": -1,\\r\\n  \\\"stab\\\": -2,\\r\\n  \\\"stabbed\\\": -2,\\r\\n  \\\"stable\\\": 2,\\r\\n  \\\"stabs\\\": -2,\\r\\n  \\\"stall\\\": -2,\\r\\n  \\\"stalled\\\": -2,\\r\\n  \\\"stalling\\\": -2,\\r\\n  \\\"stamina\\\": 2,\\r\\n  \\\"stampede\\\": -2,\\r\\n  \\\"startled\\\": -2,\\r\\n  \\\"starve\\\": -2,\\r\\n  \\\"starved\\\": -2,\\r\\n  \\\"starves\\\": -2,\\r\\n  \\\"starving\\\": -2,\\r\\n  \\\"steadfast\\\": 2,\\r\\n  \\\"steal\\\": -2,\\r\\n  \\\"steals\\\": -2,\\r\\n  \\\"stereotype\\\": -2,\\r\\n  \\\"stereotyped\\\": -2,\\r\\n  \\\"stifled\\\": -1,\\r\\n  \\\"stimulate\\\": 1,\\r\\n  \\\"stimulated\\\": 1,\\r\\n  \\\"stimulates\\\": 1,\\r\\n  \\\"stimulating\\\": 2,\\r\\n  \\\"stingy\\\": -2,\\r\\n  \\\"stolen\\\": -2,\\r\\n  \\\"stop\\\": -1,\\r\\n  \\\"stopped\\\": -1,\\r\\n  \\\"stopping\\\": -1,\\r\\n  \\\"stops\\\": -1,\\r\\n  \\\"stout\\\": 2,\\r\\n  \\\"straight\\\": 1,\\r\\n  \\\"strange\\\": -1,\\r\\n  \\\"strangely\\\": -1,\\r\\n  \\\"strangled\\\": -2,\\r\\n  \\\"strength\\\": 2,\\r\\n  \\\"strengthen\\\": 2,\\r\\n  \\\"strengthened\\\": 2,\\r\\n  \\\"strengthening\\\": 2,\\r\\n  \\\"strengthens\\\": 2,\\r\\n  \\\"stressed\\\": -2,\\r\\n  \\\"stressor\\\": -2,\\r\\n  \\\"stressors\\\": -2,\\r\\n  \\\"stricken\\\": -2,\\r\\n  \\\"strike\\\": -1,\\r\\n  \\\"strikers\\\": -2,\\r\\n  \\\"strikes\\\": -1,\\r\\n  \\\"strong\\\": 2,\\r\\n  \\\"stronger\\\": 2,\\r\\n  \\\"strongest\\\": 2,\\r\\n  \\\"struck\\\": -1,\\r\\n  \\\"struggle\\\": -2,\\r\\n  \\\"struggled\\\": -2,\\r\\n  \\\"struggles\\\": -2,\\r\\n  \\\"struggling\\\": -2,\\r\\n  \\\"stubborn\\\": -2,\\r\\n  \\\"stuck\\\": -2,\\r\\n  \\\"stunned\\\": -2,\\r\\n  \\\"stunning\\\": 4,\\r\\n  \\\"stupid\\\": -2,\\r\\n  \\\"stupidly\\\": -2,\\r\\n  \\\"suave\\\": 2,\\r\\n  \\\"substantial\\\": 1,\\r\\n  \\\"substantially\\\": 1,\\r\\n  \\\"subversive\\\": -2,\\r\\n  \\\"success\\\": 2,\\r\\n  \\\"successful\\\": 3,\\r\\n  \\\"suck\\\": -3,\\r\\n  \\\"sucks\\\": -3,\\r\\n  \\\"suffer\\\": -2,\\r\\n  \\\"suffering\\\": -2,\\r\\n  \\\"suffers\\\": -2,\\r\\n  \\\"suicidal\\\": -2,\\r\\n  \\\"suicide\\\": -2,\\r\\n  \\\"suing\\\": -2,\\r\\n  \\\"sulking\\\": -2,\\r\\n  \\\"sulky\\\": -2,\\r\\n  \\\"sullen\\\": -2,\\r\\n  \\\"sunshine\\\": 2,\\r\\n  \\\"super\\\": 3,\\r\\n  \\\"superb\\\": 5,\\r\\n  \\\"superior\\\": 2,\\r\\n  \\\"support\\\": 2,\\r\\n  \\\"supported\\\": 2,\\r\\n  \\\"supporter\\\": 1,\\r\\n  \\\"supporters\\\": 1,\\r\\n  \\\"supporting\\\": 1,\\r\\n  \\\"supportive\\\": 2,\\r\\n  \\\"supports\\\": 2,\\r\\n  \\\"survived\\\": 2,\\r\\n  \\\"surviving\\\": 2,\\r\\n  \\\"survivor\\\": 2,\\r\\n  \\\"suspect\\\": -1,\\r\\n  \\\"suspected\\\": -1,\\r\\n  \\\"suspecting\\\": -1,\\r\\n  \\\"suspects\\\": -1,\\r\\n  \\\"suspend\\\": -1,\\r\\n  \\\"suspended\\\": -1,\\r\\n  \\\"suspicious\\\": -2,\\r\\n  \\\"swear\\\": -2,\\r\\n  \\\"swearing\\\": -2,\\r\\n  \\\"swears\\\": -2,\\r\\n  \\\"sweet\\\": 2,\\r\\n  \\\"swift\\\": 2,\\r\\n  \\\"swiftly\\\": 2,\\r\\n  \\\"swindle\\\": -3,\\r\\n  \\\"swindles\\\": -3,\\r\\n  \\\"swindling\\\": -3,\\r\\n  \\\"sympathetic\\\": 2,\\r\\n  \\\"sympathy\\\": 2,\\r\\n  \\\"torn\\\": -2,\\r\\n  \\\"tard\\\": -2,\\r\\n  \\\"tense\\\": -2,\\r\\n  \\\"tension\\\": -1,\\r\\n  \\\"terrible\\\": -3,\\r\\n  \\\"terribly\\\": -3,\\r\\n  \\\"terrific\\\": 4,\\r\\n  \\\"terrified\\\": -3,\\r\\n  \\\"terror\\\": -3,\\r\\n  \\\"terrorize\\\": -3,\\r\\n  \\\"terrorized\\\": -3,\\r\\n  \\\"terrorizes\\\": -3,\\r\\n  \\\"thank\\\": 2,\\r\\n  \\\"thankful\\\": 2,\\r\\n  \\\"thanks\\\": 2,\\r\\n  \\\"thorny\\\": -2,\\r\\n  \\\"thoughtful\\\": 2,\\r\\n  \\\"thoughtless\\\": -2,\\r\\n  \\\"threat\\\": -2,\\r\\n  \\\"threaten\\\": -2,\\r\\n  \\\"threatened\\\": -2,\\r\\n  \\\"threatening\\\": -2,\\r\\n  \\\"threatens\\\": -2,\\r\\n  \\\"threats\\\": -2,\\r\\n  \\\"thrilled\\\": 5,\\r\\n  \\\"thwart\\\": -2,\\r\\n  \\\"thwarted\\\": -2,\\r\\n  \\\"thwarting\\\": -2,\\r\\n  \\\"thwarts\\\": -2,\\r\\n  \\\"timid\\\": -2,\\r\\n  \\\"timorous\\\": -2,\\r\\n  \\\"tired\\\": -2,\\r\\n  \\\"tits\\\": -2,\\r\\n  \\\"tolerant\\\": 2,\\r\\n  \\\"toothless\\\": -2,\\r\\n  \\\"top\\\": 2,\\r\\n  \\\"tops\\\": 2,\\r\\n  \\\"tender\\\": 2,\\r\\n  \\\"torture\\\": -4,\\r\\n  \\\"tortured\\\": -4,\\r\\n  \\\"tortures\\\": -4,\\r\\n  \\\"torturing\\\": -4,\\r\\n  \\\"totalitarian\\\": -2,\\r\\n  \\\"totalitarianism\\\": -2,\\r\\n  \\\"tout\\\": -2,\\r\\n  \\\"touted\\\": -2,\\r\\n  \\\"touting\\\": -2,\\r\\n  \\\"touts\\\": -2,\\r\\n  \\\"tragedy\\\": -2,\\r\\n  \\\"tragic\\\": -2,\\r\\n  \\\"tranquil\\\": 2,\\r\\n  \\\"trap\\\": -1,\\r\\n  \\\"trapped\\\": -2,\\r\\n  \\\"trauma\\\": -3,\\r\\n  \\\"traumatic\\\": -3,\\r\\n  \\\"travesty\\\": -2,\\r\\n  \\\"treason\\\": -3,\\r\\n  \\\"treasonous\\\": -3,\\r\\n  \\\"treasure\\\": 2,\\r\\n  \\\"treasures\\\": 2,\\r\\n  \\\"trembling\\\": -2,\\r\\n  \\\"tremulous\\\": -2,\\r\\n  \\\"tricked\\\": -2,\\r\\n  \\\"trickery\\\": -2,\\r\\n  \\\"triumph\\\": 4,\\r\\n  \\\"triumphant\\\": 4,\\r\\n  \\\"trouble\\\": -2,\\r\\n  \\\"troubled\\\": -2,\\r\\n  \\\"troubles\\\": -2,\\r\\n  \\\"true\\\": 2,\\r\\n  \\\"trust\\\": 1,\\r\\n  \\\"trusted\\\": 2,\\r\\n  \\\"tumor\\\": -2,\\r\\n  \\\"twat\\\": -5,\\r\\n  \\\"tears\\\": -2,\\r\\n  \\\"ugly\\\": -3,\\r\\n  \\\"unacceptable\\\": -2,\\r\\n  \\\"unappreciated\\\": -2,\\r\\n  \\\"unapproved\\\": -2,\\r\\n  \\\"unaware\\\": -2,\\r\\n  \\\"unbelievable\\\": -1,\\r\\n  \\\"unbelieving\\\": -1,\\r\\n  \\\"unbiased\\\": 2,\\r\\n  \\\"uncertain\\\": -1,\\r\\n  \\\"unclear\\\": -1,\\r\\n  \\\"uncomfortable\\\": -2,\\r\\n  \\\"unconcerned\\\": -2,\\r\\n  \\\"unconfirmed\\\": -1,\\r\\n  \\\"unconvinced\\\": -1,\\r\\n  \\\"uncredited\\\": -1,\\r\\n  \\\"undecided\\\": -1,\\r\\n  \\\"underestimate\\\": -1,\\r\\n  \\\"underestimated\\\": -1,\\r\\n  \\\"underestimates\\\": -1,\\r\\n  \\\"underestimating\\\": -1,\\r\\n  \\\"undermine\\\": -2,\\r\\n  \\\"undermined\\\": -2,\\r\\n  \\\"undermines\\\": -2,\\r\\n  \\\"undermining\\\": -2,\\r\\n  \\\"undeserving\\\": -2,\\r\\n  \\\"undesirable\\\": -2,\\r\\n  \\\"uneasy\\\": -2,\\r\\n  \\\"unemployment\\\": -2,\\r\\n  \\\"unequal\\\": -1,\\r\\n  \\\"unequaled\\\": 2,\\r\\n  \\\"unethical\\\": -2,\\r\\n  \\\"unfair\\\": -2,\\r\\n  \\\"unfocused\\\": -2,\\r\\n  \\\"unfulfilled\\\": -2,\\r\\n  \\\"unhappy\\\": -2,\\r\\n  \\\"unhealthy\\\": -2,\\r\\n  \\\"unified\\\": 1,\\r\\n  \\\"unimpressed\\\": -2,\\r\\n  \\\"unintelligent\\\": -2,\\r\\n  \\\"united\\\": 1,\\r\\n  \\\"unjust\\\": -2,\\r\\n  \\\"unlovable\\\": -2,\\r\\n  \\\"unloved\\\": -2,\\r\\n  \\\"unmatched\\\": 1,\\r\\n  \\\"unmotivated\\\": -2,\\r\\n  \\\"unprofessional\\\": -2,\\r\\n  \\\"unresearched\\\": -2,\\r\\n  \\\"unsatisfied\\\": -2,\\r\\n  \\\"unsecured\\\": -2,\\r\\n  \\\"unsettled\\\": -1,\\r\\n  \\\"unsophisticated\\\": -2,\\r\\n  \\\"unstable\\\": -2,\\r\\n  \\\"unstoppable\\\": 2,\\r\\n  \\\"unsupported\\\": -2,\\r\\n  \\\"unsure\\\": -1,\\r\\n  \\\"untarnished\\\": 2,\\r\\n  \\\"unwanted\\\": -2,\\r\\n  \\\"unworthy\\\": -2,\\r\\n  \\\"upset\\\": -2,\\r\\n  \\\"upsets\\\": -2,\\r\\n  \\\"upsetting\\\": -2,\\r\\n  \\\"uptight\\\": -2,\\r\\n  \\\"urgent\\\": -1,\\r\\n  \\\"useful\\\": 2,\\r\\n  \\\"usefulness\\\": 2,\\r\\n  \\\"useless\\\": -2,\\r\\n  \\\"uselessness\\\": -2,\\r\\n  \\\"vindicates\\\": 2,\\r\\n  \\\"vague\\\": -2,\\r\\n  \\\"validates\\\": 1,\\r\\n  \\\"validating\\\": 1,\\r\\n  \\\"verdict\\\": -1,\\r\\n  \\\"verdicts\\\": -1,\\r\\n  \\\"vested\\\": 1,\\r\\n  \\\"vexation\\\": -2,\\r\\n  \\\"vexing\\\": -2,\\r\\n  \\\"vibrant\\\": 3,\\r\\n  \\\"vicious\\\": -2,\\r\\n  \\\"victim\\\": -3,\\r\\n  \\\"victimize\\\": -3,\\r\\n  \\\"victimized\\\": -3,\\r\\n  \\\"victimizes\\\": -3,\\r\\n  \\\"victimizing\\\": -3,\\r\\n  \\\"victims\\\": -3,\\r\\n  \\\"vigilant\\\": 3,\\r\\n  \\\"vile\\\": -3,\\r\\n  \\\"vindicate\\\": 2,\\r\\n  \\\"vindicated\\\": 2,\\r\\n  \\\"validated\\\": 1,\\r\\n  \\\"vindicating\\\": 2,\\r\\n  \\\"violate\\\": -2,\\r\\n  \\\"violated\\\": -2,\\r\\n  \\\"violates\\\": -2,\\r\\n  \\\"violating\\\": -2,\\r\\n  \\\"violence\\\": -3,\\r\\n  \\\"violent\\\": -3,\\r\\n  \\\"virtuous\\\": 2,\\r\\n  \\\"virulent\\\": -2,\\r\\n  \\\"vision\\\": 1,\\r\\n  \\\"visionary\\\": 3,\\r\\n  \\\"visioning\\\": 1,\\r\\n  \\\"visions\\\": 1,\\r\\n  \\\"vitality\\\": 3,\\r\\n  \\\"vitamin\\\": 1,\\r\\n  \\\"vitriolic\\\": -3,\\r\\n  \\\"vivacious\\\": 3,\\r\\n  \\\"vociferous\\\": -1,\\r\\n  \\\"vulnerability\\\": -2,\\r\\n  \\\"vulnerable\\\": -2,\\r\\n  \\\"validate\\\": 1,\\r\\n  \\\"walkout\\\": -2,\\r\\n  \\\"walkouts\\\": -2,\\r\\n  \\\"wanker\\\": -3,\\r\\n  \\\"want\\\": 1,\\r\\n  \\\"war\\\": -2,\\r\\n  \\\"warfare\\\": -2,\\r\\n  \\\"warm\\\": 1,\\r\\n  \\\"warmth\\\": 2,\\r\\n  \\\"warn\\\": -2,\\r\\n  \\\"warned\\\": -2,\\r\\n  \\\"warning\\\": -3,\\r\\n  \\\"warnings\\\": -3,\\r\\n  \\\"warns\\\": -2,\\r\\n  \\\"waste\\\": -1,\\r\\n  \\\"wasted\\\": -2,\\r\\n  \\\"wasting\\\": -2,\\r\\n  \\\"wavering\\\": -1,\\r\\n  \\\"weak\\\": -2,\\r\\n  \\\"weakness\\\": -2,\\r\\n  \\\"wealth\\\": 3,\\r\\n  \\\"wealthy\\\": 2,\\r\\n  \\\"weary\\\": -2,\\r\\n  \\\"weep\\\": -2,\\r\\n  \\\"weeping\\\": -2,\\r\\n  \\\"weird\\\": -2,\\r\\n  \\\"welcome\\\": 2,\\r\\n  \\\"welcomed\\\": 2,\\r\\n  \\\"welcomes\\\": 2,\\r\\n  \\\"whimsical\\\": 1,\\r\\n  \\\"whitewash\\\": -3,\\r\\n  \\\"whore\\\": -4,\\r\\n  \\\"wicked\\\": -2,\\r\\n  \\\"widowed\\\": -1,\\r\\n  \\\"willingness\\\": 2,\\r\\n  \\\"win\\\": 4,\\r\\n  \\\"winner\\\": 4,\\r\\n  \\\"winning\\\": 4,\\r\\n  \\\"wins\\\": 4,\\r\\n  \\\"winwin\\\": 3,\\r\\n  \\\"wish\\\": 1,\\r\\n  \\\"wishes\\\": 1,\\r\\n  \\\"wishing\\\": 1,\\r\\n  \\\"withdrawal\\\": -3,\\r\\n  \\\"woebegone\\\": -2,\\r\\n  \\\"woeful\\\": -3,\\r\\n  \\\"won\\\": 3,\\r\\n  \\\"wonderful\\\": 4,\\r\\n  \\\"woo\\\": 3,\\r\\n  \\\"woohoo\\\": 3,\\r\\n  \\\"wooo\\\": 4,\\r\\n  \\\"woow\\\": 4,\\r\\n  \\\"worn\\\": -1,\\r\\n  \\\"worried\\\": -3,\\r\\n  \\\"worry\\\": -3,\\r\\n  \\\"worrying\\\": -3,\\r\\n  \\\"worse\\\": -3,\\r\\n  \\\"worsen\\\": -3,\\r\\n  \\\"worsened\\\": -3,\\r\\n  \\\"worsening\\\": -3,\\r\\n  \\\"worsens\\\": -3,\\r\\n  \\\"worshiped\\\": 3,\\r\\n  \\\"worst\\\": -3,\\r\\n  \\\"worth\\\": 2,\\r\\n  \\\"worthless\\\": -2,\\r\\n  \\\"worthy\\\": 2,\\r\\n  \\\"wow\\\": 4,\\r\\n  \\\"wowow\\\": 4,\\r\\n  \\\"wowww\\\": 4,\\r\\n  \\\"wrathful\\\": -3,\\r\\n  \\\"wreck\\\": -2,\\r\\n  \\\"wrong\\\": -2,\\r\\n  \\\"wronged\\\": -2,\\r\\n  \\\"wtf\\\": -4,\\r\\n  \\\"yeah\\\": 1,\\r\\n  \\\"yearning\\\": 1,\\r\\n  \\\"yeees\\\": 2,\\r\\n  \\\"yes\\\": 1,\\r\\n  \\\"youthful\\\": 2,\\r\\n  \\\"yucky\\\": -2,\\r\\n  \\\"yummy\\\": 3,\\r\\n  \\\"zealot\\\": -2,\\r\\n  \\\"zealots\\\": -2,\\r\\n  \\\"zealous\\\": 2\\r\\n}\");\n\n  doesWordExist = function(word) {\n    if (word in afinnWordList) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  getScoreOfWord = function(word) {\n    if (afinnWordList[word]) {\n      return afinnWordList[word];\n    } else {\n      return 0;\n    }\n  };\n\n  getWordsInSentence = function(sentence) {\n    sentence = sentence != null ? sentence : '';\n    sentence = typeof sentence === 'string' ? sentence : '';\n    sentence = sentence.toLowerCase();\n    sentence = sentence.replace(/(?:https?|ftp):\\/\\/[\\n\\S]+/g, '');\n    sentence = sentence.replace(/[^\\w\\s]/gi, '');\n    sentence = sentence.split(' ');\n    sentence = sentence.filter(function(n) {\n      return n !== '';\n    });\n    return sentence = removeDuplicates(sentence);\n  };\n\n  removeDuplicates = function(arr) {\n    var i, key, ref, res, results, value;\n    if (arr.length === 0) {\n      return [];\n    }\n    res = {};\n    for (key = i = 0, ref = arr.length - 1; 0 <= ref ? i <= ref : i >= ref; key = 0 <= ref ? ++i : --i) {\n      res[arr[key]] = arr[key];\n    }\n    results = [];\n    for (key in res) {\n      value = res[key];\n      results.push(value);\n    }\n    return results;\n  };\n\n  scaleScore = function(score) {\n    score = score > 10 ? 10 : score;\n    score = score < -10 ? -10 : score;\n    return score / 10;\n  };\n\n  analyseSentence = function(sentence) {\n    var i, len, score, word, wordsArr;\n    score = 0;\n    wordsArr = getWordsInSentence(sentence);\n    for (i = 0, len = wordsArr.length; i < len; i++) {\n      word = wordsArr[i];\n      if (doesWordExist(word)) {\n        score += getScoreOfWord(word);\n      }\n    }\n    return scaleScore(score);\n  };\n\n  module.exports = analyseSentence;\n\n  if (process.env.NODE_ENV === 'test') {\n    module.exports = {\n      main: analyseSentence,\n      _private: {\n        scaleScore: scaleScore,\n        doesWordExist: doesWordExist,\n        getScoreOfWord: getScoreOfWord,\n        removeDuplicates: removeDuplicates,\n        getWordsInSentence: getWordsInSentence\n      }\n    };\n  }\n\n}).call(this);\n/* (C) Alicia Sykes <alicia@aliciasykes.com> 2015           *\\\r\n\\* MIT License. Read full license at: https://goo.gl/IL4lQJ */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sentiment-analysis/index.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}